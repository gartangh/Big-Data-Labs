{"paragraphs":[{"text":"%md\n# Notebook 2: Flink Streaming\n\n## Exercise 1: Word Count (+ Windowed) (⭐)\n\n- __Goal of the exercise__: count the occurrences of the words composing a given text file, in streaming mode, without and with **windowing** enabled.\n- __Skills__: \n    - *Write a simple Flink program*\n    - *Use Tuple data types*\n    - *Write and use user-defined functions*\n- __Operations__: `readTextFile`, `flatMap`, `keyBy`, `sum`, `collect`, `print` \n- __Functions__: `FlatMapFunction`\n- __Differences with batch mode__: \n    - Execution environment: **<span style=\"color:blue\">ExecutionEnvironment -> StreamExecutionEnvironment</span>**\n    - Processing data: **<span style=\"color:blue\">DataSet -> DataStream</span>**\n    - Grouping on processing data: **<span style=\"color:blue\">groupBy -> keyBy</span>**","user":"anonymous","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"runOnSelectionChange":true,"title":false,"checkEmpty":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h1>Notebook 2: Flink Streaming</h1>\n<h2>Exercise 1: Word Count (+ Windowed) (⭐)</h2>\n<ul>\n  <li><strong>Goal of the exercise</strong>: count the occurrences of the words composing a given text file, in streaming mode, without and with <strong>windowing</strong> enabled.</li>\n  <li><strong>Skills</strong>:\n    <ul>\n      <li><em>Write a simple Flink program</em></li>\n      <li><em>Use Tuple data types</em></li>\n      <li><em>Write and use user-defined functions</em></li>\n    </ul>\n  </li>\n  <li><strong>Operations</strong>: <code>readTextFile</code>, <code>flatMap</code>, <code>keyBy</code>, <code>sum</code>, <code>collect</code>, <code>print</code></li>\n  <li><strong>Functions</strong>: <code>FlatMapFunction</code></li>\n  <li><strong>Differences with batch mode</strong>:\n    <ul>\n      <li>Execution environment: <strong><span style=\"color:blue\">ExecutionEnvironment -&gt; StreamExecutionEnvironment</span></strong></li>\n      <li>Processing data: <strong><span style=\"color:blue\">DataSet -&gt; DataStream</span></strong></li>\n      <li>Grouping on processing data: <strong><span style=\"color:blue\">groupBy -&gt; keyBy</span></strong></li>\n    </ul>\n  </li>\n</ul>\n</div>"}]},"apps":[],"progressUpdateIntervalMs":500,"jobName":"paragraph_1562830678229_1787133083","id":"paragraph_1562830678229_1787133083","dateCreated":"2020-03-23T11:55:49+0000","status":"FINISHED","focus":true,"$$hashKey":"object:179","runtimeInfos":{}},{"text":"%java\n\nimport org.apache.flink.api.common.functions.FlatMapFunction;\nimport org.apache.flink.api.java.tuple.Tuple2;\nimport org.apache.flink.api.java.utils.ParameterTool;\nimport org.apache.flink.streaming.api.datastream.DataStream;\nimport org.apache.flink.streaming.api.environment.StreamExecutionEnvironment;\nimport org.apache.flink.util.Collector;\n\nimport java.util.Arrays;\n\npublic class StreamingWordCount {\n\n    public static void main(String[] args) throws Exception {\n    \n        //1. TO-DO: Set up the execution environment\n\t\tfinal StreamExecutionEnvironment env = StreamExecutionEnvironment.getExecutionEnvironment();\n\t\t\n        \n    }\n}","user":"anonymous","config":{"lineNumbers":true,"editorSetting":{"language":"java","editOnDblClick":false,"completionSupport":false},"colWidth":12,"editorMode":"ace/mode/java","fontSize":9,"runOnSelectionChange":true,"title":false,"checkEmpty":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[]},"apps":[],"progressUpdateIntervalMs":500,"jobName":"paragraph_1563890469487_-1168298829","id":"paragraph_1563890469487_-1168298829","dateCreated":"2020-03-23T11:55:50+0000","status":"FINISHED","$$hashKey":"object:180","runtimeInfos":{}},{"text":"%md\n### 2. Then we'll get our input data from a text file \n- **2.a.** In comparison to the batch mode, we will define a DataStream instead of a DataSet ⇔ declare a new DataStream<String>\n- **2.b.** Then we'll read the text file from given input path \"\"./data/batch-exercise-1-loremipsup.txt\"\n\nWe are now getting a first DataStream of the raw “Lorem ipsum” text composing the “loremipsum.txt” file, in the text variable.","user":"anonymous","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"runOnSelectionChange":true,"title":false,"checkEmpty":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h3>2. Then we&rsquo;ll get our input data from a text file</h3>\n<ul>\n  <li><strong>2.a.</strong> In comparison to the batch mode, we will define a DataStream instead of a DataSet ⇔ declare a new DataStream<String></li>\n  <li><strong>2.b.</strong> Then we&rsquo;ll read the text file from given input path &quot;&ldquo;./data/batch-exercise-1-loremipsup.txt&rdquo;</li>\n</ul>\n<p>We are now getting a first DataStream of the raw “Lorem ipsum” text composing the “loremipsum.txt” file, in the text variable.</p>\n</div>"}]},"apps":[],"progressUpdateIntervalMs":500,"jobName":"paragraph_1563890468499_1987315433","id":"paragraph_1563890468499_1987315433","dateCreated":"2020-03-23T11:55:50+0000","status":"FINISHED","$$hashKey":"object:181","runtimeInfos":{}},{"text":"%java\n\nimport org.apache.flink.api.common.functions.FlatMapFunction;\nimport org.apache.flink.api.java.tuple.Tuple2;\nimport org.apache.flink.api.java.utils.ParameterTool;\nimport org.apache.flink.streaming.api.datastream.DataStream;\nimport org.apache.flink.streaming.api.environment.StreamExecutionEnvironment;\nimport org.apache.flink.util.Collector;\n\nimport java.util.Arrays;\n\npublic class StreamingWordCount {\n\n    public static void main(String[] args) throws Exception {\n    \n        //1. Set up the execution environment\n\t\tfinal StreamExecutionEnvironment env = StreamExecutionEnvironment.getExecutionEnvironment();\n        \n        //2. TO-DO: Read input text file\n        DataStream<String> text = env.readTextFile(\"./data/batch-exercise-1-loremipsup.txt\");\n\t\t\n        \n    }\n}","user":"anonymous","config":{"editorSetting":{"language":"java","editOnDblClick":false,"completionSupport":false},"colWidth":12,"editorMode":"ace/mode/java","fontSize":9,"runOnSelectionChange":true,"title":false,"checkEmpty":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[]},"apps":[],"progressUpdateIntervalMs":500,"jobName":"paragraph_1563890618789_1761475461","id":"paragraph_1563890618789_1761475461","dateCreated":"2020-03-23T11:55:50+0000","status":"FINISHED","$$hashKey":"object:182","runtimeInfos":{}},{"text":"%md\n### 3. We must now create a second DataStream, based on text, that will:\n- **3.a.** Split up the lines in pairs (i.e. Tuple2) containing: (word, 1)\n- **3.b.** Group and sum the pairs per word\n\n        DataStream<Tuple2<String, Integer>> counts = text.???????","user":"anonymous","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"runOnSelectionChange":true,"title":false,"checkEmpty":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h3>3. We must now create a second DataStream, based on text, that will:</h3>\n<ul>\n  <li><strong>3.a.</strong> Split up the lines in pairs (i.e. Tuple2) containing: (word, 1)</li>\n  <li><strong>3.b.</strong> Group and sum the pairs per word\n    <pre><code>DataStream&lt;Tuple2&lt;String, Integer&gt;&gt; counts = text.???????\n</code></pre>\n  </li>\n</ul>\n</div>"}]},"apps":[],"progressUpdateIntervalMs":500,"jobName":"paragraph_1563890623690_-2126806068","id":"paragraph_1563890623690_-2126806068","dateCreated":"2020-03-23T11:55:50+0000","status":"FINISHED","$$hashKey":"object:183","runtimeInfos":{}},{"text":"%md\n### 3.a. Splitting up the lines into words will be done using a user-defined **`FlatMapFunction`**:\n We will define a “Tokenizer” class that will implement the [FlatMapFunction interface](https://ci.apache.org/projects/flink/flink-docs-master/api/java/org/apache/flink/api/common/functions/FlatMapFunction.html). It has the following syntax:\n<center> **Interface FlatMapFunction<T,O>** </center>\n**where:**\n    - T - Type of the input elements\n    - O - Type of the returned elements\n**We will give it:**\n- A String as an input (i.e. the raw text) and,\n- It will produce a collection of Tuple2<String, Integer> (i.e. (word,1)), as output.\n\n    public static final class Tokenizer implements FlatMapFunction<String, Tuple2<String, Integer>> {\n\n        @Override\n        public void flatMap(String value, Collector<Tuple2<String, Integer>> out)     \n        {\n            //i. Normalize and split up the line??\n            //ii. Emit the pairs??\n        }\n    }\n","user":"anonymous","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"runOnSelectionChange":true,"title":false,"checkEmpty":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h3>3.a. Splitting up the lines into words will be done using a user-defined <strong><code>FlatMapFunction</code></strong>:</h3>\n<p>We will define a “Tokenizer” class that will implement the <a href=\"https://ci.apache.org/projects/flink/flink-docs-master/api/java/org/apache/flink/api/common/functions/FlatMapFunction.html\">FlatMapFunction interface</a>. It has the following syntax:<br/><center> <strong>Interface FlatMapFunction&lt;T,O&gt;</strong> </center><br/><strong>where:</strong><br/> - T - Type of the input elements<br/> - O - Type of the returned elements<br/><strong>We will give it:</strong><br/>- A String as an input (i.e. the raw text) and,<br/>- It will produce a collection of Tuple2&lt;String, Integer&gt; (i.e. (word,1)), as output.</p>\n<pre><code>public static final class Tokenizer implements FlatMapFunction&lt;String, Tuple2&lt;String, Integer&gt;&gt; {\n\n    @Override\n    public void flatMap(String value, Collector&lt;Tuple2&lt;String, Integer&gt;&gt; out)     \n    {\n        //i. Normalize and split up the line??\n        //ii. Emit the pairs??\n    }\n}\n</code></pre>\n</div>"}]},"apps":[],"progressUpdateIntervalMs":500,"jobName":"paragraph_1563890623046_-1058941650","id":"paragraph_1563890623046_-1058941650","dateCreated":"2020-03-23T11:55:51+0000","status":"FINISHED","$$hashKey":"object:184","runtimeInfos":{}},{"text":"%md\n### 3.a.i. To normalize and split up the lines -> we lower-case all the text and split it for every new line;","user":"anonymous","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"runOnSelectionChange":true,"title":false,"checkEmpty":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h3>3.a.i. To normalize and split up the lines -&gt; we lower-case all the text and split it for every new line;</h3>\n</div>"}]},"apps":[],"progressUpdateIntervalMs":500,"jobName":"paragraph_1567523478177_-3972443","id":"paragraph_1567523478177_-3972443","dateCreated":"2020-03-23T11:55:51+0000","status":"FINISHED","$$hashKey":"object:185","runtimeInfos":{}},{"text":"%md\n### 3.a.ii. Emit the pairs. The collect() method on the Collector class is called to push data forward in the processing pipeline","user":"anonymous","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"runOnSelectionChange":true,"title":false,"checkEmpty":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h3>3.a.ii. Emit the pairs. The collect() method on the Collector class is called to push data forward in the processing pipeline</h3>\n</div>"}]},"apps":[],"progressUpdateIntervalMs":500,"jobName":"paragraph_1563891106402_175572002","id":"paragraph_1563891106402_175572002","dateCreated":"2020-03-23T11:55:52+0000","status":"FINISHED","$$hashKey":"object:186","runtimeInfos":{}},{"text":"%java\n\npublic static final class Tokenizer implements FlatMapFunction<String, Tuple2<String, Integer>> {\n\n\t@Override\n\tpublic void flatMap(String value, Collector<Tuple2<String, Integer>> out) {\n\t\t// i. TO-DO: normalize and split the line\n\t\tString[] tokens = value.toLowerCase().split(\"\\\\W+\");\n\t\t\t\n        // ii. TO-DO: Emit the pairs\n        Arrays.stream(tokens)\n            .filter(token -> token.length() > 0)\n            .forEach(token -> out.collect(new Tuple2<String, Integer>(token, 1)));\n\t}\n}","user":"anonymous","config":{"editorSetting":{"language":"java","editOnDblClick":false,"completionSupport":false},"colWidth":12,"editorMode":"ace/mode/java","fontSize":9,"runOnSelectionChange":true,"title":false,"checkEmpty":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"ERROR","msg":[{"type":"TEXT","data":"There isn't any class containing static main method."}]},"apps":[],"progressUpdateIntervalMs":500,"jobName":"paragraph_1563893020204_1756657801","id":"paragraph_1563893020204_1756657801","dateCreated":"2020-03-23T11:55:52+0000","status":"ERROR","$$hashKey":"object:187","runtimeInfos":{}},{"text":"%md\n### 4. Back to our main class\n#### 4.1. We can now create our second DataStream, that will call our new Tokenizer class to split the raw input text into 2-Tuples (word,1):","user":"anonymous","dateUpdated":"2020-03-09T18:32:32+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"runOnSelectionChange":true,"title":false,"checkEmpty":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h3>4. Back to our main class</h3>\n<h4>4.1. We can now create our second DataStream, that will call our new Tokenizer class to split the raw input text into 2-Tuples (word,1):</h4>\n</div>"}]},"apps":[],"progressUpdateIntervalMs":500,"jobName":"paragraph_1583778752195_64953815","id":"paragraph_1563893535531_830722549","dateCreated":"2020-03-09T18:32:32+0000","status":"READY","$$hashKey":"object:188"},{"text":"%md\n#### 4.2. We must now group and sum the pairs per word. \n**In comparison to the batch mode, the grouping on DataStreams is performed via the **`keyBy`** operator (instead of groupBy).**\nGrouping per word is done with the help of the **`keyBy`** operator, on the Tuple “word” key. After grouping the different words into different partitions, we just have to sum them up, using the **`sum`** operator, on the Tuple “value” field, that was previously initialized at 1 for each one of them:","user":"anonymous","dateUpdated":"2020-03-09T18:32:32+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"runOnSelectionChange":true,"title":false,"checkEmpty":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h4>4.2. We must now group and sum the pairs per word.</h4>\n<p><strong>In comparison to the batch mode, the grouping on DataStreams is performed via the <strong><code>keyBy</code></strong> operator (instead of groupBy).</strong><br/>Grouping per word is done with the help of the <strong><code>keyBy</code></strong> operator, on the Tuple “word” key. After grouping the different words into different partitions, we just have to sum them up, using the <strong><code>sum</code></strong> operator, on the Tuple “value” field, that was previously initialized at 1 for each one of them:</p>\n</div>"}]},"apps":[],"progressUpdateIntervalMs":500,"jobName":"paragraph_1583778752195_-1150082803","id":"paragraph_1563896256215_-1171261385","dateCreated":"2020-03-09T18:32:32+0000","status":"READY","$$hashKey":"object:189"},{"text":"%java\n\nimport org.apache.flink.api.common.functions.FlatMapFunction;\nimport org.apache.flink.api.java.tuple.Tuple2;\nimport org.apache.flink.api.java.utils.ParameterTool;\nimport org.apache.flink.streaming.api.datastream.DataStream;\nimport org.apache.flink.streaming.api.environment.StreamExecutionEnvironment;\nimport org.apache.flink.util.Collector;\n\nimport java.util.Arrays;\n\npublic class StreamingWordCount {\n\n    public static void main(String[] args) throws Exception {\n    \n        //1. Set up the execution environment\n\t\tfinal StreamExecutionEnvironment env = StreamExecutionEnvironment.getExecutionEnvironment();\n        \n        //2. Read input text file\n        DataStream<String> text = env.readTextFile(\"./data/batch-exercise-1-loremipsup.txt\");\n        \n        //4. Word Count\n\t\tDataStream<Tuple2<String, Integer>> counts = text\n\t\t\t// 4.1. TO-DO: split up the lines in pairs (2-tuples) containing: (word,1)\n\t\t\t.flatMap(new Tokenizer())\n\t\t\t\n\t\t\t// 4.2. TO-DO: group by the tuple field \"0\" and sum up tuple field \"1\"\n\t\t\t.keyBy(0).sum(1);  \n    }\n\n\tpublic static final class Tokenizer implements FlatMapFunction<String, Tuple2<String, Integer>> {\n\n\t\t@Override\n\t\tpublic void flatMap(String value, Collector<Tuple2<String, Integer>> out) {\n\t\t\n\t\t\tString[] tokens = value.toLowerCase().split(\"\\\\W+\");\n\t\t\t\n            Arrays.stream(tokens)\n              .filter(token -> token.length() > 0)\n              .forEach(token -> out.collect(new Tuple2<>(token, 1)));\n\t\t}\n\t}\n\n}\n","user":"anonymous","dateUpdated":"2020-03-13T13:12:31+0000","config":{"lineNumbers":true,"editorSetting":{"language":"java","editOnDblClick":false,"completionSupport":false},"colWidth":12,"editorMode":"ace/mode/java","fontSize":9,"runOnSelectionChange":true,"title":false,"checkEmpty":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[]},"apps":[],"progressUpdateIntervalMs":500,"jobName":"paragraph_1583778752196_26807813","id":"paragraph_1563957962392_773400092","dateCreated":"2020-03-09T18:32:32+0000","dateStarted":"2020-03-13T13:12:31+0000","dateFinished":"2020-03-13T13:12:31+0000","status":"FINISHED","$$hashKey":"object:190"},{"text":"%md\n### 5.Let’s trigger the computation and output the results to stdout","user":"anonymous","dateUpdated":"2020-03-09T18:32:32+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"runOnSelectionChange":true,"title":false,"checkEmpty":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h3>5.Let’s trigger the computation and output the results to stdout</h3>\n</div>"}]},"apps":[],"progressUpdateIntervalMs":500,"jobName":"paragraph_1583778752196_-1739081475","id":"paragraph_1563957659376_-1478806636","dateCreated":"2020-03-09T18:32:32+0000","status":"READY","$$hashKey":"object:191"},{"text":"%md\n### 6. Finally, let’s execute our Word Count program!\n    \n### And you will expect a similar output\n![output-ex1](http://193.190.127.227/img/streaming/output1.png)","user":"anonymous","dateUpdated":"2020-03-10T07:35:22+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"runOnSelectionChange":true,"title":false,"checkEmpty":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h3>6. Finally, let’s execute our Word Count program!</h3>\n<h3>And you will expect a similar output</h3>\n<p><img src=\"http://193.190.127.227/img/streaming/output1.png\" alt=\"output-ex1\" /></p>\n</div>"}]},"apps":[],"progressUpdateIntervalMs":500,"jobName":"paragraph_1583778752196_-1371024071","id":"paragraph_1563957725372_-1699695369","dateCreated":"2020-03-09T18:32:32+0000","dateStarted":"2020-03-10T07:35:22+0000","dateFinished":"2020-03-10T07:35:22+0000","status":"FINISHED","$$hashKey":"object:192"},{"text":"%java\n\nimport org.apache.flink.api.common.functions.FlatMapFunction;\nimport org.apache.flink.api.java.tuple.Tuple2;\nimport org.apache.flink.api.java.utils.ParameterTool;\nimport org.apache.flink.streaming.api.datastream.DataStream;\nimport org.apache.flink.streaming.api.environment.StreamExecutionEnvironment;\nimport org.apache.flink.util.Collector;\n\nimport java.util.Arrays;\n\npublic class StreamingWordCount {\n\n    public static void main(String[] args) throws Exception {\n    \n        //1. Set up the execution environment\n\t\tfinal StreamExecutionEnvironment env = StreamExecutionEnvironment.getExecutionEnvironment();\n        \n        //2. Read input text file\n        DataStream<String> text = env.readTextFile(\"./data/batch-exercise-1-loremipsup.txt\");\n        \n        //4. Word Count\n\t\tDataStream<Tuple2<String, Integer>> counts = text\n\t\t\t// split up the lines in pairs (2-tuples) containing: (word,1)\n\t\t\t.flatMap(new Tokenizer())\n\t\t\t// group by the tuple field \"0\" and sum up tuple field \"1\"\n\t\t\t.keyBy(0).sum(1);\n        \n        //5. TO-DO: Execute and print results            \n        counts.print();\n        \n        //6. TO-DO: execute program\n\t\tenv.execute(\"StreamingWordCount\");\n        \n    }\n\n\tpublic static final class Tokenizer implements FlatMapFunction<String, Tuple2<String, Integer>> {\n\n\t\t@Override\n\t\tpublic void flatMap(String value, Collector<Tuple2<String, Integer>> out) {\n\t\t\t\n\t\t\tString[] tokens = value.toLowerCase().split(\"\\\\W+\");\n\t\t\t\n            Arrays.stream(tokens)\n              .filter(token -> token.length() > 0)\n              .forEach(token -> out.collect(new Tuple2<>(token, 1)));\n\t\t}\n\t}\n\n}","user":"anonymous","dateUpdated":"2020-03-13T13:37:40+0000","config":{"editorSetting":{"language":"java","editOnDblClick":false,"completionSupport":false},"colWidth":12,"editorMode":"ace/mode/java","fontSize":9,"runOnSelectionChange":true,"title":false,"checkEmpty":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"1> (nunc,1)\n1> (sem,1)\n1> (finibus,1)\n1> (suscipit,1)\n1> (leo,1)\n1> (interdum,1)\n1> (leo,2)\n1> (ac,1)\n1> (ultrices,1)\n1> (enim,1)\n1> (ipsum,1)\n1> (adipiscing,1)\n1> (massa,1)\n1> (sem,2)\n1> (ut,1)\n1> (ipsum,2)\n1> (nunc,2)\n1> (ut,2)\n1> (enim,2)\n1> (ut,3)\n1> (posuere,1)\n1> (quisque,1)\n1> (nunc,3)\n1> (leo,3)\n1> (ut,4)\n1> (venenatis,1)\n1> (ut,5)\n1> (rutrum,1)\n1> (ipsum,3)\n1> (fusce,1)\n1> (suscipit,2)\n1> (nunc,4)\n1> (ut,6)\n1> (enim,3)\n1> (suspendisse,1)\n1> (neque,1)\n1> (sem,3)\n1> (turpis,1)\n1> (maecenas,1)\n1> (finibus,2)\n1> (dignissim,1)\n1> (praesent,1)\n1> (turpis,2)\n1> (nunc,5)\n1> (neque,2)\n1> (penatibus,1)\n1> (montes,1)\n1> (mus,1)\n1> (ipsum,4)\n1> (nec,1)\n1> (maecenas,2)\n1> (leo,4)\n1> (nunc,6)\n1> (sapien,1)\n1> (mollis,1)\n1> (neque,3)\n1> (nunc,7)\n1> (sem,4)\n1> (leo,5)\n1> (sem,5)\n1> (magna,1)\n1> (nec,2)\n1> (magna,2)\n1> (sapien,2)\n1> (morbi,1)\n1> (posuere,2)\n1> (leo,6)\n1> (praesent,2)\n1> (libero,1)\n1> (maecenas,3)\n1> (neque,4)\n1> (fusce,2)\n1> (sem,6)\n1> (venenatis,2)\n1> (sem,7)\n1> (ultrices,2)\n1> (posuere,3)\n1> (nec,3)\n1> (nec,4)\n1> (quisque,2)\n1> (arcu,1)\n1> (arcu,2)\n1> (suspendisse,2)\n1> (suspendisse,3)\n1> (maecenas,4)\n1> (finibus,3)\n1> (neque,5)\n1> (turpis,3)\n1> (nec,5)\n1> (praesent,3)\n1> (suscipit,3)\n1> (morbi,2)\n1> (mollis,2)\n1> (posuere,4)\n1> (quisque,3)\n1> (mollis,3)\n1> (neque,6)\n1> (suspendisse,4)\n1> (suscipit,4)\n1> (praesent,4)\n1> (suscipit,5)\n1> (venenatis,3)\n1> (magna,3)\n1> (ut,7)\n1> (nunc,8)\n1> (nunc,9)\n1> (nec,6)\n1> (nunc,10)\n1> (suscipit,6)\n1> (ultrices,3)\n1> (nec,7)\n1> (ut,8)\n1> (ipsum,5)\n1> (maecenas,5)\n1> (ut,9)\n1> (ut,10)\n1> (ultrices,4)\n1> (ac,2)\n1> (nunc,11)\n1> (enim,4)\n1> (ut,11)\n1> (venenatis,4)\n1> (rutrum,2)\n1> (ac,3)\n1> (fusce,3)\n1> (dignissim,2)\n1> (morbi,3)\n1> (posuere,5)\n1> (nec,8)\n1> (ut,12)\n1> (sem,8)\n1> (eleifend,1)\n1> (magna,4)\n1> (dignissim,3)\n1> (ut,13)\n1> (dignissim,4)\n1> (arcu,3)\n1> (nec,9)\n1> (interdum,2)\n1> (dignissim,5)\n1> (finibus,4)\n1> (ac,4)\n1> (dignissim,6)\n1> (praesent,5)\n1> (magna,5)\n1> (venenatis,5)\n1> (magna,6)\n1> (fusce,4)\n1> (ac,5)\n1> (interdum,3)\n1> (sapien,3)\n1> (neque,7)\n1> (ac,6)\n1> (mollis,4)\n1> (eleifend,2)\n1> (eleifend,3)\n1> (nec,10)\n1> (maecenas,6)\n1> (ut,14)\n1> (enim,5)\n1> (neque,8)\n1> (mollis,5)\n1> (libero,2)\n1> (morbi,4)\n1> (senectus,1)\n1> (fames,1)\n1> (ac,7)\n1> (turpis,4)\n1> (quisque,4)\n1> (leo,7)\n1> (ut,15)\n1> (leo,8)\n1> (nec,11)\n1> (maecenas,7)\n1> (nunc,12)\n1> (arcu,4)\n1> (morbi,5)\n1> (nunc,13)\n1> (posuere,6)\n1> (morbi,6)\n1> (finibus,5)\n1> (ac,8)\n1> (massa,2)\n1> (ultrices,5)\n1> (nec,12)\n1> (ipsum,6)\n1> (arcu,5)\n1> (quisque,5)\n1> (ut,16)\n1> (rutrum,3)\n1> (ut,17)\n1> (leo,9)\n1> (suspendisse,5)\n1> (interdum,4)\n1> (sapien,4)\n1> (ut,18)\n1> (arcu,6)\n1> (ultrices,6)\n1> (finibus,6)\n1> (arcu,7)\n1> (sem,9)\n1> (massa,3)\n1> (dignissim,7)\n1> (sapien,5)\n1> (interdum,5)\n1> (fames,2)\n1> (ac,9)\n1> (ipsum,7)\n1> (primis,1)\n1> (neque,9)\n1> (praesent,6)\n1> (neque,10)\n1> (suscipit,7)\n1> (magna,7)\n1> (maecenas,8)\n1> (ut,19)\n1> (ut,20)\n1> (interdum,6)\n1> (ut,21)\n1> (ipsum,8)\n1> (suscipit,8)\n1> (fusce,5)\n1> (neque,11)\n1> (finibus,7)\n1> (nec,13)\n1> (libero,3)\n1> (praesent,7)\n1> (enim,6)\n1> (massa,4)\n1> (morbi,7)\n1> (maecenas,9)\n1> (arcu,8)\n1> (eleifend,4)\n1> (fusce,6)\n1> (libero,4)\n1> (ut,22)\n1> (ipsum,9)\n1> (ut,23)\n1> (interdum,7)\n1> (sapien,6)\n1> (praesent,8)\n1> (posuere,7)\n1> (finibus,8)\n1> (sapien,7)\n1> (sapien,8)\n1> (posuere,8)\n1> (suspendisse,6)\n1> (ut,24)\n1> (nunc,14)\n1> (enim,7)\n1> (nec,14)\n1> (libero,5)\n1> (praesent,9)\n1> (ut,25)\n1> (sapien,9)\n1> (morbi,8)\n1> (sem,10)\n1> (suscipit,9)\n1> (rutrum,4)\n1> (neque,12)\n1> (ac,10)\n1> (finibus,9)\n1> (neque,13)\n1> (sapien,10)\n1> (ipsum,10)\n1> (praesent,10)\n1> (mollis,6)\n1> (leo,10)\n1> (dignissim,8)\n1> (magna,8)\n1> (mollis,7)\n1> (sem,11)\n1> (leo,11)\n1> (ut,26)\n1> (arcu,9)\n1> (leo,12)\n1> (nec,15)\n1> (enim,8)\n1> (nec,16)\n1> (nec,17)\n1> (massa,5)\n1> (quisque,6)\n1> (ut,27)\n1> (ipsum,11)\n1> (massa,6)\n1> (praesent,11)\n1> (magna,9)\n1> (massa,7)\n1> (ac,11)\n1> (sem,12)\n1> (nec,18)\n1> (morbi,9)\n1> (posuere,9)\n1> (nec,19)\n1> (ut,28)\n1> (massa,8)\n1> (enim,9)\n1> (nunc,15)\n1> (turpis,5)\n1> (ut,29)\n1> (turpis,6)\n1> (massa,9)\n1> (massa,10)\n1> (ipsum,12)\n1> (turpis,7)\n1> (leo,13)\n1> (leo,14)\n1> (ipsum,13)\n1> (posuere,10)\n1> (nunc,16)\n1> (nec,20)\n1> (neque,14)\n1> (fusce,7)\n1> (libero,6)\n1> (rutrum,5)\n1> (arcu,10)\n1> (nunc,17)\n1> (nec,21)\n1> (penatibus,2)\n1> (montes,2)\n1> (mus,2)\n1> (finibus,10)\n1> (turpis,8)\n1> (quisque,7)\n1> (massa,11)\n1> (eleifend,5)\n1> (sociosqu,1)\n1> (inceptos,1)\n1> (himenaeos,1)\n1> (suspendisse,7)\n1> (libero,7)\n1> (maecenas,10)\n1> (turpis,9)\n1> (mollis,8)\n1> (sem,13)\n1> (venenatis,6)\n1> (nunc,18)\n1> (eleifend,6)\n1> (sapien,11)\n1> (sapien,12)\n1> (turpis,10)\n1> (nec,22)\n1> (magna,10)\n1> (praesent,12)\n1> (sem,14)\n1> (enim,10)\n1> (ut,30)\n1> (sapien,13)\n1> (ut,31)\n1> (dignissim,9)\n1> (suscipit,10)\n1> (sem,15)\n1> (maecenas,11)\n1> (neque,15)\n1> (quisque,8)\n1> (finibus,11)\n1> (dignissim,10)\n1> (suspendisse,8)\n1> (ac,12)\n1> (ac,13)\n1> (nunc,19)\n1> (maecenas,12)\n1> (massa,12)\n1> (ut,32)\n1> (magna,11)\n1> (arcu,11)\n1> (maecenas,13)\n1> (rutrum,6)\n1> (ut,33)\n1> (eleifend,7)\n1> (nunc,20)\n1> (posuere,11)\n1> (arcu,12)\n1> (finibus,12)\n1> (morbi,10)\n1> (senectus,2)\n1> (fames,3)\n1> (ac,14)\n1> (turpis,11)\n1> (rutrum,7)\n1> (nec,23)\n1> (libero,8)\n1> (ipsum,14)\n1> (ipsum,15)\n1> (arcu,13)\n1> (leo,15)\n1> (praesent,13)\n1> (ultrices,7)\n1> (posuere,12)\n1> (neque,16)\n1> (posuere,13)\n1> (massa,13)\n1> (nec,24)\n1> (leo,16)\n1> (ut,34)\n1> (libero,9)\n1> (quisque,9)\n1> (arcu,14)\n1> (suspendisse,9)\n1> (eleifend,8)\n1> (enim,11)\n1> (nec,25)\n1> (sociosqu,2)\n1> (inceptos,2)\n1> (himenaeos,2)\n1> (maecenas,14)\n1> (ac,15)\n1> (libero,10)\n1> (nec,26)\n1> (leo,17)\n1> (sapien,14)\n1> (ut,35)\n1> (morbi,11)\n1> (interdum,8)\n1> (sem,16)\n1> (turpis,12)\n1> (rutrum,8)\n1> (massa,14)\n1> (ipsum,16)\n1> (libero,11)\n1> (leo,18)\n1> (libero,12)\n1> (ut,36)\n1> (mollis,9)\n1> (posuere,14)\n1> (interdum,9)\n1> (interdum,10)\n1> (arcu,15)\n1> (ut,37)\n1> (interdum,11)\n1> (fusce,8)\n1> (ipsum,17)\n1> (leo,19)\n1> (ac,16)\n1> (suscipit,11)\n1> (nunc,21)\n1> (nunc,22)\n1> (sapien,15)\n1> (dignissim,11)\n1> (ac,17)\n1> (quisque,10)\n1> (nec,27)\n1> (sem,17)\n1> (leo,20)\n1> (praesent,14)\n1> (ac,18)\n1> (interdum,12)\n1> (suspendisse,10)\n1> (finibus,13)\n1> (suscipit,12)\n1> (fusce,9)\n1> (maecenas,15)\n1> (nunc,23)\n1> (enim,12)\n1> (nunc,24)\n1> (sem,18)\n1> (nunc,25)\n1> (ultrices,8)\n1> (turpis,13)\n1> (finibus,14)\n1> (eleifend,9)\n1> (nunc,26)\n1> (turpis,14)\n1> (nec,28)\n1> (nec,29)\n1> (nunc,27)\n1> (turpis,15)\n1> (turpis,16)\n1> (leo,21)\n1> (neque,17)\n1> (posuere,15)\n1> (nunc,28)\n1> (enim,13)\n1> (arcu,16)\n1> (libero,13)\n1> (ut,38)\n1> (interdum,13)\n1> (ipsum,18)\n1> (eleifend,10)\n1> (fusce,10)\n1> (sem,19)\n1> (libero,14)\n1> (turpis,17)\n1> (massa,15)\n1> (libero,15)\n1> (suscipit,13)\n1> (praesent,15)\n1> (ultrices,9)\n1> (nunc,29)\n1> (ut,39)\n1> (praesent,16)\n1> (nec,30)\n1> (finibus,15)\n1> (eleifend,11)\n1> (neque,18)\n1> (suspendisse,11)\n1> (magna,12)\n1> (finibus,16)\n1> (sapien,16)\n1> (maecenas,16)\n1> (ac,19)\n1> (leo,22)\n1> (ut,40)\n1> (posuere,16)\n1> (ipsum,19)\n1> (nunc,30)\n1> (sapien,17)\n1> (magna,13)\n1> (morbi,12)\n1> (senectus,3)\n1> (fames,4)\n1> (ac,20)\n1> (turpis,18)\n1> (sem,20)\n1> (enim,14)\n1> (mollis,10)\n1> (quisque,11)\n1> (ut,41)\n1> (nec,31)\n1> (rutrum,9)\n1> (nec,32)\n1> (magna,14)\n1> (sociosqu,3)\n1> (inceptos,3)\n1> (himenaeos,3)\n1> (ut,42)\n1> (rutrum,10)\n1> (maecenas,17)\n1> (sapien,18)\n1> (massa,16)\n1> (ipsum,20)\n1> (primis,2)\n1> (ultrices,10)\n1> (posuere,17)\n1> (curae,1)\n1> (sapien,19)\n1> (ac,21)\n1> (nec,33)\n1> (fusce,11)\n1> (massa,17)\n1> (massa,18)\n1> (neque,19)\n1> (nunc,31)\n1> (nec,34)\n1> (ac,22)\n1> (nec,35)\n1> (libero,16)\n1> (libero,17)\n1> (sapien,20)\n1> (ac,23)\n1> (arcu,17)\n1> (arcu,18)\n1> (suspendisse,12)\n1> (mollis,11)\n1> (ac,24)\n1> (venenatis,7)\n1> (fusce,12)\n1> (suscipit,14)\n1> (ac,25)\n1> (nec,36)\n1> (massa,19)\n1> (enim,15)\n1> (ut,43)\n1> (massa,20)\n1> (rutrum,11)\n1> (morbi,13)\n1> (venenatis,8)\n1> (magna,15)\n1> (interdum,14)\n1> (sapien,21)\n1> (nunc,32)\n1> (massa,21)\n1> (ultrices,11)\n1> (magna,16)\n1> (nunc,33)\n1> (ipsum,21)\n1> (ut,44)\n1> (arcu,19)\n1> (ac,26)\n1> (turpis,19)\n1> (enim,16)\n1> (venenatis,9)\n1> (nec,37)\n1> (massa,22)\n1> (libero,18)\n1> (ut,45)\n1> (ac,27)\n1> (venenatis,10)\n1> (turpis,20)\n1> (ac,28)\n1> (nunc,34)\n1> (venenatis,11)\n1> (ac,29)\n1> (mollis,12)\n1> (suspendisse,13)\n1> (sem,21)\n1> (magna,17)\n1> (ut,46)\n1> (massa,23)\n1> (ac,30)\n1> (nunc,35)\n1> (ac,31)\n1> (arcu,20)\n1> (interdum,15)\n1> (nunc,36)\n1> (dignissim,12)\n1> (nec,38)\n1> (nec,39)\n1> (mollis,13)\n1> (ipsum,22)\n1> (sapien,22)\n1> (neque,20)\n1> (libero,19)\n1> (rutrum,12)\n1> (ac,32)\n1> (arcu,21)\n1> (quisque,12)\n1> (libero,20)\n1> (praesent,17)\n1> (libero,21)\n1> (ut,47)\n1> (nunc,37)\n1> (mollis,14)\n1> (magna,18)\n1> (fusce,13)\n1> (neque,21)\n1> (mollis,15)\n1> (sem,22)\n1> (ut,48)\n1> (ac,33)\n1> (leo,23)\n1> (praesent,18)\n1> (interdum,16)\n1> (ac,34)\n1> (fusce,14)\n1> (maecenas,18)\n1> (sapien,23)\n1> (nec,40)\n1> (sem,23)\n1> (nec,41)\n1> (rutrum,13)\n1> (leo,24)\n1> (nec,42)\n1> (sem,24)\n1> (ut,49)\n1> (suspendisse,14)\n1> (libero,22)\n1> (quisque,13)\n1> (sem,25)\n1> (turpis,21)\n1> (ut,50)\n1> (suspendisse,15)\n1> (nunc,38)\n1> (ut,51)\n1> (nec,43)\n1> (ut,52)\n1> (quisque,14)\n1> (praesent,19)\n1> (nec,44)\n1> (leo,25)\n1> (massa,24)\n1> (suspendisse,16)\n1> (mollis,16)\n1> (sem,26)\n1> (mollis,17)\n1> (libero,23)\n1> (nunc,39)\n1> (praesent,20)\n1> (interdum,17)\n1> (nunc,40)\n1> (enim,17)\n1> (arcu,22)\n1> (rutrum,14)\n1> (enim,18)\n1> (mollis,18)\n1> (ac,35)\n1> (arcu,23)\n1> (eleifend,12)\n1> (ut,53)\n1> (sociosqu,4)\n1> (inceptos,4)\n1> (himenaeos,4)\n1> (maecenas,19)\n1> (leo,26)\n1> (ut,54)\n1> (dignissim,13)\n1> (sem,27)\n1> (ut,55)\n1> (enim,19)\n1> (magna,19)\n1> (nec,45)\n1> (ut,56)\n1> (enim,20)\n1> (interdum,18)\n1> (suscipit,15)\n1> (massa,25)\n1> (sem,28)\n1> (ultrices,12)\n1> (magna,20)\n1> (nec,46)\n1> (rutrum,15)\n1> (morbi,14)\n1> (nec,47)\n1> (morbi,15)\n1> (arcu,24)\n1> (quisque,15)\n1> (fusce,15)\n1> (suspendisse,17)\n1> (ultrices,13)\n1> (ac,36)\n1> (neque,22)\n1> (nec,48)\n1> (sem,29)\n1> (fusce,16)\n1> (libero,24)\n1> (ipsum,23)\n1> (fusce,17)\n1> (neque,23)\n1> (leo,27)\n1> (ut,57)\n1> (suscipit,16)\n1> (ac,37)\n1> (sem,30)\n1> (dignissim,14)\n1> (maecenas,20)\n1> (leo,28)\n1> (ut,58)\n1> (suspendisse,18)\n1> (dignissim,15)\n1> (ut,59)\n1> (ut,60)\n1> (magna,21)\n1> (suscipit,17)\n1> (sapien,24)\n1> (praesent,21)\n1> (turpis,22)\n1> (suspendisse,19)\n1> (massa,26)\n1> (enim,21)\n1> (morbi,16)\n1> (praesent,22)\n1> (suscipit,18)\n1> (sapien,25)\n1> (nunc,41)\n1> (mollis,19)\n1> (nunc,42)\n1> (posuere,18)\n1> (venenatis,12)\n1> (ut,61)\n1> (maecenas,21)\n1> (nec,49)\n1> (magna,22)\n1> (posuere,19)\n1> (turpis,23)\n1> (sem,31)\n1> (mollis,20)\n1> (ipsum,24)\n1> (primis,3)\n1> (ultrices,14)\n1> (posuere,20)\n1> (curae,2)\n1> (quisque,16)\n1> (ut,62)\n1> (sem,32)\n1> (nec,50)\n1> (mollis,21)\n1> (ipsum,25)\n1> (ultrices,15)\n1> (suspendisse,20)\n1> (ac,38)\n1> (quisque,17)\n1> (ut,63)\n1> (morbi,17)\n1> (sapien,26)\n1> (nunc,43)\n1> (ut,64)\n1> (sem,33)\n1> (nec,51)\n1> (magna,23)\n1> (mollis,22)\n1> (praesent,23)\n1> (neque,24)\n1> (turpis,24)\n1> (interdum,19)\n1> (suspendisse,21)\n1> (leo,29)\n1> (nec,52)\n1> (suspendisse,22)\n1> (sem,34)\n1> (interdum,20)\n1> (fusce,18)\n1> (turpis,25)\n1> (sapien,27)\n1> (sem,35)\n1> (eleifend,13)\n1> (nec,53)\n1> (eleifend,14)\n1> (rutrum,16)\n1> (enim,22)\n1> (magna,24)\n1> (ac,39)\n1> (sapien,28)\n1> (massa,27)\n1> (neque,25)\n1> (interdum,21)\n1> (magna,25)\n1> (nec,54)\n1> (ultrices,16)\n1> (posuere,21)\n1> (turpis,26)\n1> (rutrum,17)\n1> (finibus,17)\n1> (nec,55)\n1> (nunc,44)\n1> (sapien,29)\n1> (morbi,18)\n1> (ipsum,26)\n1> (posuere,22)\n1> (rutrum,18)\n1> (interdum,22)\n1> (leo,30)\n1> (ac,40)\n1> (sem,36)\n1> (nunc,45)\n1> (eleifend,15)\n1> (morbi,19)\n1> (finibus,18)\n1> (suspendisse,23)\n1> (ipsum,27)\n1> (magna,26)\n1> (eleifend,16)\n1> (rutrum,19)\n1> (ut,65)\n1> (nunc,46)\n1> (sem,37)\n1> (ultrices,17)\n1> (eleifend,17)\n1> (arcu,25)\n1> (posuere,23)\n1> (arcu,26)\n1> (ut,66)\n1> (leo,31)\n1> (ac,41)\n1> (ut,67)\n1> (nunc,47)\n1> (enim,23)\n1> (nec,56)\n1> (dignissim,16)\n1> (massa,28)\n1> (posuere,24)\n1> (finibus,19)\n1> (enim,24)\n1> (ut,68)\n1> (dignissim,17)\n1> (nunc,48)\n1> (finibus,20)\n1> (suscipit,19)\n1> (suspendisse,24)\n1> (rutrum,20)\n1> (maecenas,22)\n1> (finibus,21)\n1> (sem,38)\n1> (magna,27)\n1> (suscipit,20)\n1> (enim,25)\n1> (sapien,30)\n1> (sociosqu,5)\n1> (inceptos,5)\n1> (himenaeos,5)\n1> (ipsum,28)\n1> (ac,42)\n1> (enim,26)\n1> (magna,28)\n1> (arcu,27)\n1> (ac,43)\n1> (ac,44)\n1> (ac,45)\n1> (morbi,20)\n1> (senectus,4)\n1> (fames,5)\n1> (ac,46)\n1> (turpis,27)\n1> (maecenas,23)\n1> (arcu,28)\n1> (libero,25)\n1> (fusce,19)\n1> (turpis,28)\n1> (enim,27)\n1> (neque,26)\n1> (ut,69)\n1> (libero,26)\n1> (sapien,31)\n1> (rutrum,21)\n1> (sapien,32)\n1> (turpis,29)\n1> (ipsum,29)\n1> (venenatis,13)\n1> (turpis,30)\n1> (suspendisse,25)\n1> (morbi,21)\n1> (enim,28)\n1> (praesent,24)\n1> (arcu,29)\n1> (sem,39)\n1> (finibus,22)\n1> (maecenas,24)\n1> (arcu,30)\n1> (suspendisse,26)\n1> (turpis,31)\n1> (dignissim,18)\n1> (massa,29)\n1> (maecenas,25)\n1> (leo,32)\n1> (praesent,25)\n1> (interdum,23)\n1> (suspendisse,27)\n1> (ut,70)\n1> (posuere,25)\n1> (ut,71)\n1> (rutrum,22)\n1> (nec,57)\n1> (interdum,24)\n1> (ut,72)\n1> (ut,73)\n1> (ut,74)\n1> (nunc,49)\n1> (neque,27)\n1> (neque,28)\n1> (sem,40)\n1> (turpis,32)\n1> (ut,75)\n1> (sapien,33)\n1> (nec,58)\n1> (ut,76)\n1> (sapien,34)\n1> (posuere,26)\n1> (eleifend,18)\n1> (ultrices,18)\n1> (interdum,25)\n1> (fames,6)\n1> (ac,47)\n1> (ipsum,30)\n1> (primis,4)\n1> (suspendisse,28)\n1> (nec,59)\n1> (nec,60)\n1> (massa,30)\n1> (sapien,35)\n1> (nec,61)\n1> (ut,77)\n1> (magna,29)\n1> (nec,62)\n1> (sapien,36)\n1> (ac,48)\n1> (sapien,37)\n1> (ut,78)\n1> (fusce,20)\n1> (ac,49)\n1> (turpis,33)\n1> (ipsum,31)\n1> (rutrum,23)\n1> (ut,79)\n1> (praesent,26)\n1> (magna,30)\n1> (leo,33)\n1> (praesent,27)\n1> (mollis,23)\n1> (libero,27)\n1> (suspendisse,29)\n1> (nunc,50)\n1> (ut,80)\n1> (eleifend,19)\n1> (dignissim,19)\n1> (sapien,38)\n1> (libero,28)\n1> (nec,63)\n1> (massa,31)\n1> (nunc,51)\n1> (rutrum,24)\n1> (nec,64)\n1> (praesent,28)\n1> (ipsum,32)\n1> (ultrices,19)\n1> (ac,50)\n1> (nec,65)\n1> (magna,31)\n1> (nec,66)\n1> (rutrum,25)\n1> (sem,41)\n1> (nunc,52)\n1> (arcu,31)\n1> (ut,81)\n1> (arcu,32)\n1> (praesent,29)\n1> (sapien,39)\n1> (libero,29)\n1> (venenatis,14)\n1> (morbi,22)\n1> (massa,32)\n1> (finibus,23)\n1> (quisque,18)\n1> (ipsum,33)\n1> (ipsum,34)\n1> (nec,67)\n1> (sem,42)\n1> (morbi,23)\n1> (sem,43)\n1> (ipsum,35)\n1> (adipiscing,2)\n1> (posuere,27)\n1> (neque,29)\n1> (suspendisse,30)\n1> (ipsum,36)\n1> (arcu,33)\n1> (ac,51)\n1> (rutrum,26)\n1> (turpis,34)\n1> (nunc,53)\n1> (nunc,54)\n1> (venenatis,15)\n1> (sem,44)\n1> (magna,32)\n1> (leo,34)\n1> (enim,29)\n1> (ipsum,37)\n1> (suscipit,21)\n1> (magna,33)\n1> (fusce,21)\n1> (arcu,34)\n1> (ut,82)\n1> (nec,68)\n1> (ipsum,38)\n1> (interdum,26)\n1> (interdum,27)\n1> (libero,30)\n1> (venenatis,16)\n1> (quisque,19)\n1> (neque,30)\n1> (dignissim,20)\n1> (ipsum,39)\n1> (suspendisse,31)\n1> (sapien,40)\n1> (finibus,24)\n1> (nec,69)\n1> (nunc,55)\n1> (nec,70)\n1> (nec,71)\n1> (nunc,56)\n1> (leo,35)\n1> (ac,52)\n1> (magna,34)\n1> (nec,72)\n1> (mollis,24)\n1> (morbi,24)\n1> (suscipit,22)\n1> (ultrices,20)\n1> (suspendisse,32)\n1> (ut,83)\n1> (ultrices,21)\n1> (massa,33)\n1> (leo,36)\n1> (suscipit,23)\n1> (neque,31)\n1> (neque,32)\n1> (massa,34)\n1> (ut,84)\n1> (suscipit,24)\n1> (arcu,35)\n1> (maecenas,26)\n1> (nec,73)\n1> (suspendisse,33)\n1> (sapien,41)\n1> (interdum,28)\n1> (sem,45)\n1> (ipsum,40)\n1> (massa,35)\n1> (sem,46)\n1> (ut,85)\n1> (magna,35)\n1> (ipsum,41)\n1> (primis,5)\n1> (ultrices,22)\n1> (posuere,28)\n1> (curae,3)\n1> (sapien,42)\n1> (ut,86)\n1> (sapien,43)\n1> (sem,47)\n1> (maecenas,27)\n1> (morbi,25)\n1> (senectus,5)\n1> (fames,7)\n1> (ac,53)\n1> (turpis,35)\n1> (maecenas,28)\n1> (praesent,30)\n1> (nunc,57)\n1> (ipsum,42)\n1> (ac,54)\n1> (penatibus,3)\n1> (montes,3)\n1> (mus,3)\n1> (nec,74)\n1> (finibus,25)\n1> (ipsum,43)\n1> (fusce,22)\n1> (magna,36)\n1> (magna,37)\n1> (nec,75)\n1> (ut,87)\n1> (morbi,26)\n1> (senectus,6)\n1> (fames,8)\n1> (ac,55)\n1> (turpis,36)\n1> (libero,31)\n1> (interdum,29)\n1> (mollis,25)\n1> (maecenas,29)\n1> (posuere,29)\n1> (turpis,37)\n1> (sem,48)\n1> (ultrices,23)\n1> (massa,36)\n1> (finibus,26)\n1> (dignissim,21)\n1> (ut,88)\n1> (nunc,58)\n1> (nec,76)\n1> (enim,30)\n1> (quisque,20)\n1> (finibus,27)\n1> (ipsum,44)\n1> (turpis,38)\n1> (posuere,30)\n1> (ipsum,45)\n1> (morbi,27)\n1> (senectus,7)\n1> (fames,9)\n1> (ac,56)\n1> (turpis,39)\n1> (arcu,36)\n1> (dignissim,22)\n1> (massa,37)\n1> (sem,49)\n1> (nec,77)\n1> (sem,50)\n1> (fusce,23)\n1> (ut,89)\n1> (interdum,30)\n1> (sapien,44)\n1> (enim,31)\n1> (finibus,28)\n1> (nunc,59)\n1> (finibus,29)\n1> (nunc,60)\n1> (ipsum,46)\n1> (ultrices,24)\n1> (sapien,45)\n1> (posuere,31)\n1> (sem,51)\n1> (sem,52)\n1> (quisque,21)\n1> (ut,90)\n1> (penatibus,4)\n1> (montes,4)\n1> (mus,4)\n1> (interdum,31)\n1> (fames,10)\n1> (ac,57)\n1> (ipsum,47)\n1> (primis,6)\n1> (nunc,61)\n1> (ac,58)\n1> (arcu,37)\n1> (venenatis,17)\n1> (turpis,40)\n1> (venenatis,18)\n1> (fusce,24)\n1> (venenatis,19)\n1> (finibus,30)\n1> (nunc,62)\n1> (libero,32)\n1> (ac,59)\n1> (sapien,46)\n1> (ipsum,48)\n1> (rutrum,27)\n1> (ipsum,49)\n1> (nec,78)\n1> (fusce,25)\n1> (ipsum,50)\n1> (suspendisse,34)\n1> (nec,79)\n1> (ipsum,51)\n1> (posuere,32)\n1> (suspendisse,35)\n1> (dignissim,23)\n1> (ipsum,52)\n1> (nec,80)\n1> (neque,33)\n1> (ut,91)\n1> (massa,38)\n1> (venenatis,20)\n1> (libero,33)\n1> (neque,34)\n1> (ac,60)\n1> (rutrum,28)\n1> (arcu,38)\n1> (libero,34)\n1> (leo,37)\n1> (magna,38)\n1> (ut,92)\n1> (posuere,33)\n1> (libero,35)\n1> (maecenas,30)\n1> (ipsum,53)\n1> (adipiscing,3)\n1> (maecenas,31)\n1> (leo,38)\n1> (ipsum,54)\n1> (venenatis,21)\n1> (ut,93)\n1> (libero,36)\n1> (neque,35)\n1> (nec,81)\n1> (enim,32)\n1> (massa,39)\n1> (ut,94)\n1> (turpis,41)\n1> (nec,82)\n1> (nunc,63)\n1> (ipsum,55)\n1> (interdum,32)\n1> (ut,95)\n1> (leo,39)\n1> (dignissim,24)\n1> (ut,96)\n1> (posuere,34)\n1> (massa,40)\n1> (ipsum,56)\n1> (leo,40)\n1> (dignissim,25)\n1> (turpis,42)\n1> (sapien,47)\n1> (suspendisse,36)\n1> (venenatis,22)\n1> (enim,33)\n1> (dignissim,26)\n1> (venenatis,23)\n1> (fusce,26)\n1> (enim,34)\n1> (libero,37)\n1> (enim,35)\n1> (sapien,48)\n1> (ipsum,57)\n1> (leo,41)\n1> (posuere,35)\n1> (ultrices,25)\n1> (nunc,64)\n1> (arcu,39)\n1> (nec,83)\n1> (posuere,36)\n1> (ut,97)\n1> (posuere,37)\n1> (maecenas,32)\n1> (posuere,38)\n1> (arcu,40)\n1> (magna,39)\n1> (ac,61)\n1> (ipsum,58)\n1> (nunc,65)\n1> (nec,84)\n1> (arcu,41)\n1> (libero,38)\n1> (morbi,28)\n1> (senectus,8)\n1> (fames,11)\n1> (ac,62)\n1> (turpis,43)\n1> (morbi,29)\n1> (suscipit,25)\n1> (turpis,44)\n1> (ac,63)\n1> (morbi,30)\n1> (rutrum,29)\n1> (venenatis,24)\n1> (magna,40)\n1> (ultrices,26)\n1> (neque,36)\n1> (ultrices,27)\n1> (maecenas,33)\n1> (suscipit,26)\n1> (sapien,49)\n1> (nec,85)\n1> (ac,64)\n1> (mollis,26)\n1> (maecenas,34)\n1> (suspendisse,37)\n1> (nec,86)\n1> (finibus,31)\n1> (rutrum,30)\n1> (magna,41)\n1> (ut,98)\n1> (leo,42)\n1> (nunc,66)\n1> (ipsum,59)\n1> (venenatis,25)\n1> (neque,37)\n1> (nunc,67)\n1> (sapien,50)\n1> (ut,99)\n1> (massa,41)\n1> (morbi,31)\n1> (ut,100)\n1> (ac,65)\n1> (libero,39)\n1> (ultrices,28)\n1> (dignissim,27)\n1> (ut,101)\n1> (enim,36)\n1> (rutrum,31)\n1> (ut,102)\n1> (neque,38)\n1> (sapien,51)\n1> (nunc,68)\n1> (finibus,32)\n1> (nec,87)\n1> (venenatis,26)\n1> (ipsum,60)\n1> (mollis,27)\n1> (libero,40)\n1> (nec,88)\n1> (interdum,33)\n1> (ultrices,29)\n1> (suspendisse,38)\n1> (ipsum,61)\n1> (interdum,34)\n1> (suscipit,27)\n1> (ipsum,62)\n1> (nunc,69)\n1> (enim,37)\n1> (suscipit,28)\n1> (ac,66)\n1> (sapien,52)\n1> (sem,53)\n1> (dignissim,28)\n1> (eleifend,20)\n1> (ipsum,63)\n1> (ut,103)\n1> (morbi,32)\n1> (leo,43)\n1> (sapien,53)\n1> (interdum,35)\n1> (nunc,70)\n1> (ultrices,30)\n1> (dignissim,29)\n1> (leo,44)\n1> (ultrices,31)\n1> (turpis,45)\n1> (suspendisse,39)\n1> (ut,104)\n1> (sapien,54)\n1> (sapien,55)\n1> (ipsum,64)\n1> (eleifend,21)\n1> (praesent,31)\n1> (neque,39)\n1> (morbi,33)\n1> (senectus,9)\n1> (fames,12)\n1> (ac,67)\n1> (turpis,46)\n1> (ipsum,65)\n1> (primis,7)\n1> (ultrices,32)\n1> (posuere,39)\n1> (curae,4)\n1> (interdum,36)\n1> (eleifend,22)\n1> (nunc,71)\n1> (magna,42)\n1> (nunc,72)\n1> (arcu,42)\n1> (morbi,34)\n1> (rutrum,32)\n1> (nec,89)\n1> (ac,68)\n1> (sem,54)\n1> (massa,42)\n1> (interdum,37)\n1> (ut,105)\n1> (dignissim,30)\n1> (morbi,35)\n1> (senectus,10)\n1> (fames,13)\n1> (ac,69)\n1> (turpis,47)\n1> (morbi,36)\n1> (neque,40)\n1> (turpis,48)\n1> (ut,106)\n1> (rutrum,33)\n1> (suspendisse,40)\n1> (nec,90)\n1> (ipsum,66)\n1> (mollis,28)\n1> (quisque,22)\n1> (ut,107)\n1> (libero,41)\n1> (massa,43)\n1> (ultrices,33)\n1> (libero,42)\n1> (neque,41)\n1> (mollis,29)\n1> (ac,70)\n1> (dignissim,31)\n1> (ipsum,67)\n1> (arcu,43)\n1> (ut,108)\n1> (sapien,56)\n1> (quisque,23)\n1> (magna,43)\n1> (finibus,33)\n1> (ultrices,34)\n1> (ultrices,35)\n1> (nec,91)\n1> (ac,71)\n1> (ipsum,68)\n1> (turpis,49)\n1> (praesent,32)\n1> (magna,44)\n1> (ultrices,36)\n1> (dignissim,32)\n1> (neque,42)\n1> (venenatis,27)\n1> (magna,45)\n1> (massa,44)\n1> (eleifend,23)\n1> (leo,45)\n1> (massa,45)\n1> (massa,46)\n1> (quisque,24)\n1> (arcu,44)\n1> (libero,43)\n1> (ut,109)\n1> (ac,72)\n1> (finibus,34)\n1> (rutrum,34)\n1> (enim,38)\n1> (dignissim,33)\n1> (libero,44)\n1> (eleifend,24)\n1> (ultrices,37)\n1> (nec,92)\n1> (suspendisse,41)\n1> (nec,93)\n1> (nunc,73)\n1> (ut,110)\n1> (arcu,45)\n1> (ut,111)\n1> (eleifend,25)\n1> (nec,94)\n1> (mollis,30)\n1> (ac,73)\n1> (suspendisse,42)\n1> (interdum,38)\n1> (sapien,57)\n1> (sem,55)\n1> (maecenas,35)\n1> (eleifend,26)\n1> (posuere,40)\n3> (pellentesque,1)\n3> (dolor,1)\n3> (ultricies,1)\n3> (vitae,1)\n3> (nisi,1)\n3> (metus,1)\n3> (pellentesque,2)\n3> (lorem,1)\n3> (dolor,2)\n3> (lorem,2)\n3> (tristique,1)\n3> (fringilla,1)\n3> (facilisis,1)\n3> (vitae,2)\n3> (facilisis,2)\n3> (dolor,3)\n3> (fringilla,2)\n3> (metus,2)\n3> (vitae,3)\n3> (vitae,4)\n3> (volutpat,1)\n3> (nullam,1)\n3> (ultricies,2)\n3> (vitae,5)\n3> (ornare,1)\n3> (ligula,1)\n3> (nascetur,1)\n3> (facilisis,3)\n3> (facilisis,4)\n3> (phasellus,1)\n3> (non,1)\n3> (nisi,2)\n3> (ligula,2)\n3> (consequat,1)\n3> (fringilla,3)\n3> (volutpat,2)\n3> (metus,3)\n3> (purus,1)\n3> (lorem,3)\n3> (vitae,6)\n3> (imperdiet,1)\n3> (tristique,2)\n3> (ornare,2)\n3> (ligula,3)\n3> (non,2)\n3> (vitae,7)\n3> (iaculis,1)\n3> (fringilla,4)\n3> (porta,1)\n3> (fringilla,5)\n3> (non,3)\n3> (nisi,3)\n3> (ornare,3)\n3> (iaculis,2)\n3> (dolor,4)\n3> (ornare,4)\n3> (imperdiet,2)\n3> (phasellus,2)\n3> (pellentesque,3)\n3> (lorem,4)\n3> (purus,2)\n3> (pellentesque,4)\n3> (facilisis,5)\n3> (lorem,5)\n3> (nisi,4)\n3> (consequat,2)\n3> (nisi,5)\n3> (nullam,2)\n3> (non,4)\n3> (nisi,6)\n3> (porta,2)\n3> (volutpat,3)\n3> (metus,4)\n3> (consequat,3)\n3> (pellentesque,5)\n3> (non,5)\n3> (pellentesque,6)\n3> (tristique,3)\n3> (facilisis,6)\n3> (vitae,8)\n3> (non,6)\n3> (dolor,5)\n3> (vitae,9)\n3> (non,7)\n3> (dolor,6)\n3> (consequat,4)\n3> (vitae,10)\n3> (ligula,4)\n3> (tristique,4)\n3> (non,8)\n3> (non,9)\n3> (pellentesque,7)\n3> (dolor,7)\n3> (iaculis,3)\n3> (imperdiet,3)\n3> (non,10)\n3> (ornare,5)\n3> (volutpat,4)\n3> (iaculis,4)\n3> (iaculis,5)\n3> (pellentesque,8)\n3> (fringilla,6)\n3> (pellentesque,9)\n3> (fringilla,7)\n3> (facilisis,7)\n3> (iaculis,6)\n3> (vitae,11)\n3> (facilisis,8)\n3> (non,11)\n3> (non,12)\n3> (lorem,6)\n3> (consequat,5)\n3> (hac,1)\n3> (habitasse,1)\n3> (dictumst,1)\n3> (tristique,5)\n3> (iaculis,7)\n3> (nisi,7)\n3> (vitae,12)\n3> (non,13)\n3> (metus,5)\n3> (non,14)\n3> (vitae,13)\n3> (dolor,8)\n3> (non,15)\n3> (iaculis,8)\n3> (ligula,5)\n3> (imperdiet,4)\n3> (vitae,14)\n3> (facilisis,9)\n3> (dolor,9)\n3> (consequat,6)\n3> (pellentesque,10)\n3> (imperdiet,5)\n3> (vitae,15)\n3> (pellentesque,11)\n3> (ultricies,3)\n3> (nisi,8)\n3> (phasellus,3)\n3> (purus,3)\n3> (purus,4)\n3> (ligula,6)\n3> (non,16)\n3> (lorem,7)\n3> (vitae,16)\n3> (volutpat,5)\n3> (vitae,17)\n3> (dolor,10)\n3> (fringilla,8)\n3> (dolor,11)\n3> (ultricies,4)\n3> (phasellus,4)\n3> (dolor,12)\n3> (ornare,6)\n3> (ligula,7)\n3> (ligula,8)\n3> (non,17)\n3> (tristique,6)\n3> (imperdiet,6)\n3> (nisi,9)\n3> (facilisis,10)\n3> (fringilla,9)\n3> (imperdiet,7)\n3> (tristique,7)\n3> (porta,3)\n3> (phasellus,5)\n3> (vitae,18)\n3> (pellentesque,12)\n3> (dolor,13)\n3> (nisi,10)\n3> (ultricies,5)\n3> (ligula,9)\n3> (ultricies,6)\n3> (vitae,19)\n3> (tristique,8)\n3> (nisi,11)\n3> (vitae,20)\n3> (nascetur,2)\n3> (pellentesque,13)\n3> (purus,5)\n3> (vitae,21)\n3> (volutpat,6)\n3> (non,18)\n3> (dolor,14)\n3> (metus,6)\n3> (nullam,3)\n3> (non,19)\n3> (pellentesque,14)\n3> (tristique,9)\n3> (vitae,22)\n3> (lorem,8)\n3> (nullam,4)\n3> (ultricies,7)\n3> (nullam,5)\n3> (ligula,10)\n3> (ligula,11)\n3> (non,20)\n3> (consequat,7)\n3> (metus,7)\n3> (iaculis,9)\n3> (ligula,12)\n3> (non,21)\n3> (fringilla,10)\n3> (dolor,15)\n3> (volutpat,7)\n3> (fringilla,11)\n3> (vitae,23)\n3> (volutpat,8)\n3> (non,22)\n3> (nisi,12)\n3> (pellentesque,15)\n3> (tristique,10)\n3> (hac,2)\n3> (habitasse,2)\n3> (dictumst,2)\n3> (dolor,16)\n3> (hac,3)\n3> (habitasse,3)\n3> (dictumst,3)\n3> (non,23)\n3> (non,24)\n3> (ornare,7)\n3> (lorem,9)\n3> (vitae,24)\n3> (tristique,11)\n3> (purus,6)\n3> (vitae,25)\n3> (vitae,26)\n3> (pellentesque,16)\n3> (ligula,13)\n3> (pellentesque,17)\n3> (non,25)\n3> (phasellus,6)\n3> (imperdiet,8)\n3> (ornare,8)\n3> (tristique,12)\n3> (purus,7)\n3> (consequat,8)\n3> (vitae,27)\n3> (ligula,14)\n3> (non,26)\n3> (nisi,13)\n3> (porta,4)\n3> (vitae,28)\n3> (non,27)\n3> (ornare,9)\n3> (nullam,6)\n3> (metus,8)\n3> (iaculis,10)\n3> (ligula,15)\n3> (facilisis,11)\n3> (lorem,10)\n3> (non,28)\n3> (consequat,9)\n3> (dolor,17)\n3> (consequat,10)\n3> (vitae,29)\n3> (ultricies,8)\n3> (nisi,14)\n3> (non,29)\n3> (nisi,15)\n3> (fringilla,12)\n3> (dolor,18)\n3> (facilisis,12)\n3> (ligula,16)\n3> (nullam,7)\n3> (lorem,11)\n3> (facilisis,13)\n3> (non,30)\n3> (ornare,10)\n3> (purus,8)\n3> (pellentesque,18)\n3> (iaculis,11)\n3> (ligula,17)\n3> (vitae,30)\n3> (non,31)\n3> (purus,9)\n3> (vitae,31)\n3> (ligula,18)\n3> (tristique,13)\n3> (tristique,14)\n3> (fringilla,13)\n3> (lorem,12)\n3> (iaculis,12)\n3> (fringilla,14)\n3> (tristique,15)\n3> (non,32)\n3> (purus,10)\n3> (vitae,32)\n3> (nullam,8)\n3> (consequat,11)\n3> (vitae,33)\n3> (ornare,11)\n3> (phasellus,7)\n3> (vitae,34)\n3> (metus,9)\n3> (imperdiet,9)\n3> (nisi,16)\n3> (non,33)\n3> (fringilla,15)\n3> (pellentesque,19)\n3> (ornare,12)\n3> (non,34)\n3> (non,35)\n3> (imperdiet,10)\n3> (purus,11)\n3> (nisi,17)\n3> (iaculis,13)\n3> (vitae,35)\n3> (pellentesque,20)\n3> (tristique,16)\n3> (ornare,13)\n3> (ligula,19)\n3> (lorem,13)\n3> (nisi,18)\n3> (dolor,19)\n3> (vitae,36)\n3> (consequat,12)\n3> (ligula,20)\n3> (consequat,13)\n3> (vitae,37)\n3> (volutpat,9)\n3> (vitae,38)\n3> (nullam,9)\n3> (dolor,20)\n3> (facilisis,14)\n3> (ligula,21)\n3> (pellentesque,21)\n3> (volutpat,10)\n3> (non,36)\n3> (tristique,17)\n3> (facilisis,15)\n3> (vitae,39)\n3> (non,37)\n3> (purus,12)\n3> (fringilla,16)\n3> (ornare,14)\n3> (nullam,10)\n3> (non,38)\n3> (consequat,14)\n3> (vitae,40)\n3> (metus,10)\n3> (volutpat,11)\n3> (pellentesque,22)\n3> (tristique,18)\n3> (facilisis,16)\n3> (tristique,19)\n3> (imperdiet,11)\n3> (ornare,15)\n3> (porta,5)\n3> (non,39)\n3> (tristique,20)\n3> (non,40)\n3> (fringilla,17)\n3> (non,41)\n3> (imperdiet,12)\n3> (metus,11)\n3> (imperdiet,13)\n3> (vitae,41)\n3> (tristique,21)\n3> (volutpat,12)\n3> (vitae,42)\n3> (porta,6)\n3> (imperdiet,14)\n3> (vitae,43)\n3> (consequat,15)\n3> (iaculis,14)\n3> (ultricies,9)\n3> (nisi,19)\n3> (iaculis,15)\n3> (volutpat,13)\n3> (consequat,16)\n3> (pellentesque,23)\n3> (purus,13)\n3> (nisi,20)\n3> (ultricies,10)\n3> (non,42)\n3> (iaculis,16)\n3> (dolor,21)\n3> (porta,7)\n3> (vitae,44)\n3> (purus,14)\n3> (ligula,22)\n3> (iaculis,17)\n3> (iaculis,18)\n3> (lorem,14)\n3> (metus,12)\n3> (tristique,22)\n3> (vitae,45)\n3> (ultricies,11)\n3> (ligula,23)\n3> (nullam,11)\n3> (nisi,21)\n3> (metus,13)\n3> (consequat,17)\n3> (consequat,18)\n3> (imperdiet,15)\n3> (purus,15)\n3> (non,43)\n3> (consequat,19)\n3> (phasellus,8)\n3> (pellentesque,24)\n3> (ultricies,12)\n3> (ligula,24)\n3> (purus,16)\n3> (ligula,25)\n3> (consequat,20)\n3> (nullam,12)\n3> (volutpat,14)\n3> (dolor,22)\n3> (iaculis,19)\n3> (porta,8)\n3> (nisi,22)\n3> (volutpat,15)\n3> (ultricies,13)\n3> (metus,14)\n3> (lorem,15)\n3> (volutpat,16)\n3> (fringilla,18)\n3> (non,44)\n3> (ornare,16)\n3> (porta,9)\n3> (pellentesque,25)\n3> (non,45)\n3> (ornare,17)\n3> (metus,15)\n3> (nullam,13)\n3> (pellentesque,26)\n3> (volutpat,17)\n3> (vitae,46)\n3> (ligula,26)\n3> (dolor,23)\n3> (vitae,47)\n3> (fringilla,19)\n3> (ligula,27)\n3> (non,46)\n3> (ornare,18)\n3> (ultricies,14)\n3> (phasellus,9)\n3> (pellentesque,27)\n3> (nullam,14)\n3> (non,47)\n3> (lorem,16)\n3> (phasellus,10)\n3> (iaculis,20)\n3> (vitae,48)\n3> (volutpat,18)\n3> (metus,16)\n3> (metus,17)\n3> (non,48)\n3> (tristique,23)\n3> (lorem,17)\n3> (ultricies,15)\n3> (dolor,24)\n3> (consequat,21)\n3> (vitae,49)\n3> (vitae,50)\n3> (metus,18)\n3> (metus,19)\n3> (dolor,25)\n3> (lorem,18)\n3> (vitae,51)\n3> (vitae,52)\n3> (facilisis,17)\n3> (ornare,19)\n3> (non,49)\n3> (consequat,22)\n3> (fringilla,20)\n3> (purus,17)\n3> (vitae,53)\n3> (porta,10)\n3> (non,50)\n3> (nisi,23)\n3> (nisi,24)\n3> (pellentesque,28)\n3> (lorem,19)\n3> (consequat,23)\n3> (iaculis,21)\n3> (vitae,54)\n3> (purus,18)\n3> (non,51)\n3> (lorem,20)\n3> (non,52)\n3> (ultricies,16)\n3> (ultricies,17)\n3> (nullam,15)\n3> (facilisis,18)\n3> (tristique,24)\n3> (pellentesque,29)\n3> (non,53)\n3> (lorem,21)\n3> (metus,20)\n3> (dolor,26)\n3> (tristique,25)\n3> (nisi,25)\n3> (facilisis,19)\n3> (imperdiet,16)\n3> (purus,19)\n3> (dolor,27)\n3> (nullam,16)\n3> (pellentesque,30)\n3> (tristique,26)\n3> (lorem,22)\n3> (facilisis,20)\n3> (vitae,55)\n3> (pellentesque,31)\n3> (pellentesque,32)\n3> (fringilla,21)\n3> (dolor,28)\n3> (pellentesque,33)\n3> (lorem,23)\n3> (dolor,29)\n3> (imperdiet,17)\n3> (non,54)\n3> (phasellus,11)\n3> (tristique,27)\n3> (nisi,26)\n3> (non,55)\n3> (dolor,30)\n3> (lorem,24)\n3> (purus,20)\n3> (phasellus,12)\n3> (phasellus,13)\n3> (non,56)\n3> (non,57)\n3> (lorem,25)\n3> (fringilla,22)\n3> (lorem,26)\n3> (tristique,28)\n3> (purus,21)\n3> (imperdiet,18)\n3> (imperdiet,19)\n3> (imperdiet,20)\n3> (facilisis,21)\n3> (phasellus,14)\n3> (fringilla,23)\n3> (nisi,27)\n3> (dolor,31)\n3> (ultricies,18)\n3> (ligula,28)\n3> (metus,21)\n3> (facilisis,22)\n3> (pellentesque,34)\n3> (imperdiet,21)\n3> (nisi,28)\n3> (dolor,32)\n3> (lorem,27)\n3> (ornare,20)\n3> (vitae,56)\n3> (consequat,24)\n3> (metus,22)\n3> (iaculis,22)\n3> (lorem,28)\n3> (non,58)\n3> (non,59)\n3> (iaculis,23)\n3> (iaculis,24)\n3> (non,60)\n3> (porta,11)\n3> (non,61)\n3> (purus,22)\n3> (pellentesque,35)\n3> (consequat,25)\n3> (purus,23)\n3> (consequat,26)\n3> (volutpat,19)\n3> (phasellus,15)\n3> (consequat,27)\n3> (nullam,17)\n3> (tristique,29)\n3> (purus,24)\n3> (nullam,18)\n3> (facilisis,23)\n3> (lorem,29)\n3> (dolor,33)\n3> (nisi,29)\n3> (ligula,29)\n3> (dolor,34)\n3> (non,62)\n3> (nullam,19)\n3> (imperdiet,22)\n3> (purus,25)\n3> (vitae,57)\n3> (dolor,35)\n3> (ornare,21)\n3> (pellentesque,36)\n3> (pellentesque,37)\n3> (ultricies,19)\n3> (consequat,28)\n3> (pellentesque,38)\n3> (vitae,58)\n3> (nisi,30)\n3> (tristique,30)\n3> (nullam,20)\n3> (pellentesque,39)\n3> (imperdiet,23)\n3> (vitae,59)\n3> (nullam,21)\n3> (purus,26)\n3> (non,63)\n3> (tristique,31)\n3> (tristique,32)\n3> (nisi,31)\n3> (nullam,22)\n3> (ligula,30)\n3> (nisi,32)\n3> (non,64)\n3> (ornare,22)\n3> (consequat,29)\n3> (vitae,60)\n3> (pellentesque,40)\n3> (ornare,23)\n3> (lorem,30)\n3> (non,65)\n3> (vitae,61)\n3> (lorem,31)\n3> (vitae,62)\n3> (vitae,63)\n3> (hac,4)\n3> (habitasse,4)\n3> (dictumst,4)\n3> (pellentesque,41)\n3> (metus,23)\n3> (fringilla,24)\n3> (vitae,64)\n3> (ultricies,20)\n3> (non,66)\n3> (pellentesque,42)\n3> (tristique,33)\n3> (nisi,33)\n3> (tristique,34)\n3> (fringilla,25)\n3> (nascetur,3)\n3> (hac,5)\n3> (habitasse,5)\n3> (dictumst,5)\n3> (pellentesque,43)\n3> (tristique,35)\n3> (nullam,23)\n3> (volutpat,20)\n3> (facilisis,24)\n3> (ornare,24)\n3> (ultricies,21)\n3> (iaculis,25)\n3> (volutpat,21)\n3> (tristique,36)\n3> (non,67)\n3> (pellentesque,44)\n3> (tristique,37)\n3> (pellentesque,45)\n3> (non,68)\n3> (tristique,38)\n3> (ultricies,22)\n3> (lorem,32)\n3> (volutpat,22)\n3> (metus,24)\n3> (consequat,30)\n3> (purus,27)\n3> (fringilla,26)\n3> (dolor,36)\n3> (phasellus,16)\n3> (ultricies,23)\n3> (dolor,37)\n3> (imperdiet,24)\n3> (nascetur,4)\n3> (purus,28)\n3> (lorem,33)\n3> (metus,25)\n3> (imperdiet,25)\n3> (pellentesque,46)\n3> (pellentesque,47)\n3> (fringilla,27)\n3> (non,69)\n3> (vitae,65)\n3> (pellentesque,48)\n3> (pellentesque,49)\n3> (pellentesque,50)\n3> (vitae,66)\n3> (volutpat,23)\n3> (metus,26)\n3> (vitae,67)\n3> (non,70)\n3> (dolor,38)\n3> (volutpat,24)\n3> (dolor,39)\n3> (non,71)\n3> (lorem,34)\n3> (dolor,40)\n3> (tristique,39)\n3> (phasellus,17)\n3> (non,72)\n3> (nisi,34)\n3> (facilisis,25)\n3> (vitae,68)\n3> (iaculis,26)\n3> (pellentesque,51)\n3> (pellentesque,52)\n3> (purus,29)\n3> (dolor,41)\n3> (phasellus,18)\n3> (nisi,35)\n3> (nisi,36)\n3> (facilisis,26)\n3> (non,73)\n3> (imperdiet,26)\n3> (iaculis,27)\n3> (vitae,69)\n3> (lorem,35)\n3> (metus,27)\n3> (tristique,40)\n3> (lorem,36)\n3> (non,74)\n3> (tristique,41)\n3> (tristique,42)\n3> (dolor,42)\n3> (ligula,31)\n3> (porta,12)\n3> (purus,30)\n3> (pellentesque,53)\n3> (consequat,31)\n3> (porta,13)\n3> (vitae,70)\n3> (porta,14)\n3> (iaculis,28)\n3> (pellentesque,54)\n3> (tristique,43)\n3> (vitae,71)\n3> (iaculis,29)\n3> (nisi,37)\n3> (nullam,24)\n3> (non,75)\n3> (nisi,38)\n3> (metus,28)\n3> (facilisis,27)\n3> (metus,29)\n3> (metus,30)\n3> (dolor,43)\n3> (lorem,37)\n3> (vitae,72)\n3> (tristique,44)\n3> (phasellus,19)\n3> (non,76)\n3> (vitae,73)\n3> (vitae,74)\n3> (ornare,25)\n3> (ligula,32)\n3> (imperdiet,27)\n3> (non,77)\n3> (non,78)\n3> (purus,31)\n3> (dolor,44)\n3> (vitae,75)\n3> (nisi,39)\n3> (tristique,45)\n3> (ligula,33)\n3> (non,79)\n3> (non,80)\n3> (imperdiet,28)\n3> (iaculis,30)\n3> (non,81)\n3> (purus,32)\n3> (ultricies,24)\n3> (dolor,45)\n3> (iaculis,31)\n3> (tristique,46)\n3> (pellentesque,55)\n3> (vitae,76)\n3> (non,82)\n3> (metus,31)\n3> (metus,32)\n3> (vitae,77)\n3> (porta,15)\n3> (pellentesque,56)\n3> (ligula,34)\n3> (fringilla,28)\n3> (ligula,35)\n3> (pellentesque,57)\n3> (tristique,47)\n3> (pellentesque,58)\n3> (vitae,78)\n3> (pellentesque,59)\n3> (pellentesque,60)\n3> (imperdiet,29)\n3> (ultricies,25)\n3> (non,83)\n3> (pellentesque,61)\n3> (porta,16)\n3> (facilisis,28)\n3> (pellentesque,62)\n3> (tristique,48)\n3> (nisi,40)\n3> (phasellus,20)\n3> (imperdiet,30)\n3> (porta,17)\n3> (lorem,38)\n3> (facilisis,29)\n3> (vitae,79)\n3> (ligula,36)\n3> (pellentesque,63)\n3> (nullam,25)\n3> (purus,33)\n3> (tristique,49)\n3> (porta,18)\n3> (nisi,41)\n3> (lorem,39)\n3> (nisi,42)\n3> (metus,33)\n3> (purus,34)\n3> (volutpat,25)\n3> (consequat,32)\n3> (iaculis,32)\n3> (tristique,50)\n3> (ligula,37)\n3> (phasellus,21)\n3> (pellentesque,64)\n3> (fringilla,29)\n3> (nisi,43)\n3> (nullam,26)\n3> (facilisis,30)\n3> (pellentesque,65)\n3> (ultricies,26)\n3> (lorem,40)\n3> (non,84)\n3> (dolor,46)\n3> (nisi,44)\n3> (ligula,38)\n3> (tristique,51)\n3> (porta,19)\n3> (pellentesque,66)\n3> (non,85)\n3> (metus,34)\n3> (lorem,41)\n5> (molestie,1)\n5> (lacinia,1)\n5> (sodales,1)\n5> (id,1)\n5> (tortor,1)\n5> (luctus,1)\n5> (eget,1)\n5> (blandit,1)\n5> (nulla,1)\n5> (malesuada,1)\n5> (in,1)\n5> (sollicitudin,1)\n5> (eget,2)\n5> (id,2)\n5> (in,2)\n5> (eget,3)\n5> (dapibus,1)\n5> (sollicitudin,2)\n5> (eget,4)\n5> (luctus,2)\n5> (sodales,2)\n5> (tortor,2)\n5> (sodales,3)\n5> (orci,1)\n5> (eget,5)\n5> (blandit,2)\n5> (orci,2)\n5> (magnis,1)\n5> (in,3)\n5> (efficitur,1)\n5> (quam,1)\n5> (velit,1)\n5> (id,3)\n5> (sodales,4)\n5> (eget,6)\n5> (blandit,3)\n5> (molestie,2)\n5> (etiam,1)\n5> (orci,3)\n5> (quam,2)\n5> (id,4)\n5> (sollicitudin,3)\n5> (molestie,3)\n5> (orci,4)\n5> (molestie,4)\n5> (molestie,5)\n5> (pharetra,1)\n5> (blandit,4)\n5> (nulla,2)\n5> (in,4)\n5> (sodales,5)\n5> (pharetra,2)\n5> (tortor,3)\n5> (molestie,6)\n5> (nulla,3)\n5> (quam,3)\n5> (id,5)\n5> (eget,7)\n5> (pharetra,3)\n5> (id,6)\n5> (dapibus,2)\n5> (sollicitudin,4)\n5> (sollicitudin,5)\n5> (pharetra,4)\n5> (luctus,3)\n5> (quam,4)\n5> (sagittis,1)\n5> (eget,8)\n5> (quam,5)\n5> (tortor,4)\n5> (velit,2)\n5> (nulla,4)\n5> (quam,6)\n5> (nulla,5)\n5> (luctus,4)\n5> (sodales,6)\n5> (eget,9)\n5> (blandit,5)\n5> (pharetra,5)\n5> (velit,3)\n5> (nulla,6)\n5> (orci,5)\n5> (eget,10)\n5> (quam,7)\n5> (eget,11)\n5> (etiam,2)\n5> (id,7)\n5> (lacinia,2)\n5> (etiam,3)\n5> (id,8)\n5> (velit,4)\n5> (sollicitudin,6)\n5> (lacinia,3)\n5> (in,5)\n5> (etiam,4)\n5> (tortor,5)\n5> (malesuada,2)\n5> (orci,6)\n5> (in,6)\n5> (in,7)\n5> (nulla,7)\n5> (habitant,1)\n5> (netus,1)\n5> (malesuada,3)\n5> (sodales,7)\n5> (quam,8)\n5> (id,9)\n5> (velit,5)\n5> (efficitur,2)\n5> (luctus,5)\n5> (in,8)\n5> (quam,9)\n5> (in,9)\n5> (malesuada,4)\n5> (sodales,8)\n5> (nisl,1)\n5> (nulla,8)\n5> (dapibus,3)\n5> (velit,6)\n5> (lacinia,4)\n5> (etiam,5)\n5> (tortor,6)\n5> (eget,12)\n5> (malesuada,5)\n5> (in,10)\n5> (nulla,9)\n5> (velit,7)\n5> (quam,10)\n5> (etiam,6)\n5> (in,11)\n5> (dapibus,4)\n5> (orci,7)\n5> (in,12)\n5> (velit,8)\n5> (quam,11)\n5> (nisl,2)\n5> (luctus,6)\n5> (in,13)\n5> (platea,1)\n5> (in,14)\n5> (nisl,3)\n5> (malesuada,6)\n5> (sagittis,2)\n5> (efficitur,3)\n5> (dapibus,5)\n5> (efficitur,4)\n5> (sollicitudin,7)\n5> (nisl,4)\n5> (eget,13)\n5> (quam,12)\n5> (blandit,6)\n5> (pharetra,6)\n5> (molestie,7)\n5> (id,10)\n5> (eget,14)\n5> (quam,13)\n5> (nisl,5)\n5> (in,15)\n5> (orci,8)\n5> (tortor,7)\n5> (in,16)\n5> (pharetra,7)\n5> (dapibus,6)\n5> (nulla,10)\n5> (id,11)\n5> (molestie,8)\n5> (in,17)\n5> (nulla,11)\n5> (eget,15)\n5> (nisl,6)\n5> (id,12)\n5> (tortor,8)\n5> (in,18)\n5> (id,13)\n5> (lacinia,5)\n5> (nisl,7)\n5> (quam,14)\n5> (id,14)\n5> (tortor,9)\n5> (luctus,7)\n5> (in,19)\n5> (nulla,12)\n5> (in,20)\n5> (nisl,8)\n5> (sollicitudin,8)\n5> (id,15)\n5> (sagittis,3)\n5> (sagittis,4)\n5> (orci,9)\n5> (in,21)\n5> (velit,9)\n5> (pharetra,8)\n5> (eget,16)\n5> (luctus,8)\n5> (nulla,13)\n5> (nulla,14)\n5> (velit,10)\n5> (in,22)\n5> (dapibus,7)\n5> (lacinia,6)\n5> (in,23)\n5> (luctus,9)\n5> (eget,17)\n5> (sagittis,5)\n5> (dapibus,8)\n5> (quam,15)\n5> (orci,10)\n5> (magnis,2)\n5> (eget,18)\n5> (tortor,10)\n5> (class,1)\n5> (aptent,1)\n5> (taciti,1)\n5> (nostra,1)\n5> (in,24)\n5> (in,25)\n5> (sollicitudin,9)\n5> (sagittis,6)\n5> (id,16)\n5> (sollicitudin,10)\n5> (nisl,9)\n5> (sodales,9)\n5> (molestie,9)\n5> (blandit,7)\n5> (id,17)\n5> (id,18)\n5> (efficitur,5)\n5> (id,19)\n5> (luctus,10)\n5> (in,26)\n5> (eget,19)\n5> (sodales,10)\n5> (eget,20)\n5> (in,27)\n5> (orci,11)\n5> (velit,11)\n5> (id,20)\n5> (eget,21)\n5> (nulla,15)\n5> (dapibus,9)\n5> (habitant,2)\n5> (netus,2)\n5> (malesuada,7)\n5> (in,28)\n5> (platea,2)\n5> (pharetra,9)\n5> (malesuada,8)\n5> (in,29)\n5> (platea,3)\n5> (sagittis,7)\n5> (lacinia,7)\n5> (lacinia,8)\n5> (id,21)\n5> (lacinia,9)\n5> (lacinia,10)\n5> (nisl,10)\n5> (velit,12)\n5> (eget,22)\n5> (sodales,11)\n5> (quam,16)\n5> (nulla,16)\n5> (sagittis,8)\n5> (sagittis,9)\n5> (sagittis,10)\n5> (molestie,10)\n5> (class,2)\n5> (aptent,2)\n5> (taciti,2)\n5> (nostra,2)\n5> (tortor,11)\n5> (nisl,11)\n5> (in,30)\n5> (sodales,12)\n5> (velit,13)\n5> (id,22)\n5> (in,31)\n5> (eget,23)\n5> (quam,17)\n5> (in,32)\n5> (molestie,11)\n5> (efficitur,6)\n5> (molestie,12)\n5> (pharetra,10)\n5> (nulla,17)\n5> (etiam,7)\n5> (eget,24)\n5> (sagittis,11)\n5> (eget,25)\n5> (id,23)\n5> (quam,18)\n5> (pharetra,11)\n5> (eget,26)\n5> (nulla,18)\n5> (velit,14)\n5> (eget,27)\n5> (nulla,19)\n5> (sollicitudin,11)\n5> (in,33)\n5> (in,34)\n5> (in,35)\n5> (eget,28)\n5> (id,24)\n5> (in,36)\n5> (id,25)\n5> (id,26)\n5> (eget,29)\n5> (sodales,13)\n5> (id,27)\n5> (in,37)\n5> (tortor,12)\n5> (blandit,8)\n5> (molestie,13)\n5> (malesuada,9)\n5> (id,28)\n5> (nulla,20)\n5> (eget,30)\n5> (quam,19)\n5> (malesuada,10)\n5> (eget,31)\n5> (id,29)\n5> (nulla,21)\n5> (in,38)\n5> (etiam,8)\n5> (id,30)\n5> (velit,15)\n5> (blandit,9)\n5> (in,39)\n5> (nulla,22)\n5> (luctus,11)\n5> (etiam,9)\n5> (eget,32)\n5> (nulla,23)\n5> (velit,16)\n5> (in,40)\n5> (orci,12)\n5> (nisl,12)\n5> (quam,20)\n5> (in,41)\n5> (lacinia,11)\n5> (eget,33)\n5> (id,31)\n5> (pharetra,12)\n5> (luctus,12)\n5> (malesuada,11)\n5> (habitant,3)\n5> (netus,3)\n5> (malesuada,12)\n5> (eget,34)\n5> (nulla,24)\n5> (id,32)\n5> (id,33)\n5> (id,34)\n5> (dapibus,10)\n5> (nulla,25)\n5> (quam,21)\n5> (in,42)\n5> (class,3)\n5> (aptent,3)\n5> (taciti,3)\n5> (nostra,3)\n5> (id,35)\n5> (dapibus,11)\n5> (blandit,10)\n5> (sagittis,12)\n5> (sagittis,13)\n5> (nisl,13)\n5> (eget,35)\n5> (in,43)\n5> (orci,13)\n5> (luctus,13)\n5> (sodales,14)\n5> (dapibus,12)\n5> (orci,14)\n5> (eget,36)\n5> (in,44)\n5> (id,36)\n5> (tortor,13)\n5> (eget,37)\n5> (sollicitudin,12)\n5> (eget,38)\n5> (pharetra,13)\n5> (pharetra,14)\n5> (efficitur,7)\n5> (orci,15)\n5> (nisl,14)\n5> (nisl,15)\n5> (in,45)\n5> (lacinia,12)\n5> (lacinia,13)\n5> (molestie,14)\n5> (nulla,26)\n5> (molestie,15)\n5> (sodales,15)\n5> (efficitur,8)\n5> (luctus,14)\n5> (tortor,14)\n5> (dapibus,13)\n5> (nulla,27)\n5> (id,37)\n5> (efficitur,9)\n5> (in,46)\n5> (in,47)\n5> (luctus,15)\n5> (molestie,16)\n5> (sollicitudin,13)\n5> (velit,17)\n5> (orci,16)\n5> (in,48)\n5> (tortor,15)\n5> (id,38)\n5> (pharetra,15)\n5> (tortor,16)\n5> (in,49)\n5> (quam,22)\n5> (velit,18)\n5> (malesuada,13)\n5> (sollicitudin,14)\n5> (sodales,16)\n5> (orci,17)\n5> (molestie,17)\n5> (eget,39)\n5> (velit,19)\n5> (dapibus,14)\n5> (lacinia,14)\n5> (etiam,10)\n5> (quam,23)\n5> (etiam,11)\n5> (nisl,16)\n5> (nisl,17)\n5> (in,50)\n5> (efficitur,10)\n5> (nisl,18)\n5> (tortor,17)\n5> (orci,18)\n5> (nulla,28)\n5> (pharetra,16)\n5> (dapibus,15)\n5> (nisl,19)\n5> (lacinia,15)\n5> (sagittis,14)\n5> (eget,40)\n5> (tortor,18)\n5> (sollicitudin,15)\n5> (in,51)\n5> (orci,19)\n5> (orci,20)\n5> (id,39)\n5> (quam,24)\n5> (sollicitudin,16)\n5> (eget,41)\n5> (nulla,29)\n5> (in,52)\n5> (sodales,17)\n5> (velit,20)\n5> (id,40)\n5> (nulla,30)\n5> (class,4)\n5> (aptent,4)\n5> (taciti,4)\n5> (nostra,4)\n5> (sollicitudin,17)\n5> (nulla,31)\n5> (id,41)\n5> (tortor,19)\n5> (id,42)\n5> (eget,42)\n5> (efficitur,11)\n5> (etiam,12)\n5> (eget,43)\n5> (quam,25)\n5> (molestie,18)\n5> (id,43)\n5> (efficitur,12)\n5> (lacinia,16)\n5> (orci,21)\n5> (in,53)\n5> (in,54)\n5> (sollicitudin,18)\n5> (nulla,32)\n5> (nulla,33)\n5> (luctus,16)\n5> (tortor,20)\n5> (in,55)\n5> (nulla,34)\n5> (in,56)\n5> (in,57)\n5> (in,58)\n5> (in,59)\n5> (tortor,21)\n5> (nulla,35)\n5> (quam,26)\n5> (id,44)\n5> (nisl,20)\n5> (in,60)\n5> (eget,44)\n5> (sollicitudin,19)\n5> (tortor,22)\n5> (nisl,21)\n5> (tortor,23)\n5> (velit,21)\n5> (in,61)\n5> (velit,22)\n5> (eget,45)\n5> (id,45)\n5> (eget,46)\n5> (lacinia,17)\n5> (eget,47)\n5> (dapibus,16)\n5> (id,46)\n5> (id,47)\n5> (in,62)\n5> (sollicitudin,20)\n5> (in,63)\n5> (orci,22)\n5> (luctus,17)\n5> (in,64)\n5> (nulla,36)\n5> (velit,23)\n5> (malesuada,14)\n5> (sagittis,15)\n5> (lacinia,18)\n5> (in,65)\n5> (orci,23)\n5> (id,48)\n5> (nisl,22)\n5> (id,49)\n5> (molestie,19)\n5> (velit,24)\n5> (orci,24)\n5> (in,66)\n5> (efficitur,13)\n5> (eget,48)\n5> (sagittis,16)\n5> (dapibus,17)\n5> (eget,49)\n5> (orci,25)\n5> (orci,26)\n5> (eget,50)\n5> (eget,51)\n5> (efficitur,14)\n5> (nulla,37)\n5> (pharetra,17)\n5> (luctus,18)\n5> (tortor,24)\n5> (id,50)\n5> (blandit,11)\n5> (nisl,23)\n5> (malesuada,15)\n5> (eget,52)\n5> (efficitur,15)\n5> (quam,27)\n5> (luctus,19)\n5> (velit,25)\n5> (sodales,18)\n5> (nulla,38)\n5> (eget,53)\n5> (nulla,39)\n5> (nisl,24)\n5> (malesuada,16)\n5> (etiam,13)\n5> (in,67)\n5> (id,51)\n5> (in,68)\n5> (in,69)\n5> (id,52)\n5> (eget,54)\n5> (sagittis,17)\n5> (orci,27)\n5> (luctus,20)\n5> (sagittis,18)\n5> (malesuada,17)\n5> (eget,55)\n5> (sollicitudin,21)\n5> (pharetra,18)\n5> (in,70)\n5> (in,71)\n5> (orci,28)\n5> (velit,26)\n5> (pharetra,19)\n5> (eget,56)\n5> (dapibus,18)\n5> (etiam,14)\n5> (orci,29)\n5> (in,72)\n5> (eget,57)\n5> (sagittis,19)\n5> (sollicitudin,22)\n5> (class,5)\n5> (aptent,5)\n5> (taciti,5)\n5> (nostra,5)\n5> (id,53)\n5> (sagittis,20)\n5> (sodales,19)\n5> (malesuada,18)\n5> (nisl,25)\n5> (dapibus,19)\n5> (efficitur,16)\n5> (in,73)\n5> (molestie,20)\n5> (tortor,25)\n5> (id,54)\n5> (tortor,26)\n5> (id,55)\n5> (eget,58)\n5> (sollicitudin,23)\n5> (habitant,4)\n5> (netus,4)\n5> (malesuada,19)\n5> (sodales,20)\n5> (eget,59)\n5> (in,74)\n5> (nisl,26)\n5> (pharetra,20)\n5> (nulla,40)\n5> (sollicitudin,24)\n5> (lacinia,19)\n5> (id,56)\n5> (in,75)\n5> (id,57)\n5> (dapibus,20)\n5> (dapibus,21)\n5> (sodales,21)\n5> (efficitur,17)\n5> (in,76)\n5> (quam,28)\n5> (in,77)\n5> (malesuada,20)\n5> (in,78)\n5> (luctus,21)\n5> (sodales,22)\n5> (orci,30)\n5> (dapibus,22)\n5> (id,58)\n5> (quam,29)\n5> (blandit,12)\n5> (sagittis,21)\n5> (id,59)\n5> (in,79)\n5> (in,80)\n5> (nisl,27)\n5> (malesuada,21)\n5> (in,81)\n5> (in,82)\n5> (molestie,21)\n5> (velit,27)\n5> (quam,30)\n5> (eget,60)\n5> (orci,31)\n5> (blandit,13)\n5> (id,60)\n5> (molestie,22)\n5> (eget,61)\n5> (etiam,15)\n5> (eget,62)\n5> (efficitur,18)\n5> (nulla,41)\n5> (efficitur,19)\n5> (eget,63)\n5> (sagittis,22)\n5> (nulla,42)\n5> (in,83)\n5> (eget,64)\n5> (eget,65)\n5> (tortor,27)\n5> (nisl,28)\n5> (sollicitudin,25)\n5> (velit,28)\n5> (sodales,23)\n5> (blandit,14)\n5> (pharetra,21)\n5> (in,84)\n5> (sollicitudin,26)\n5> (quam,31)\n5> (id,61)\n5> (nulla,43)\n5> (dapibus,23)\n5> (luctus,22)\n5> (dapibus,24)\n5> (velit,29)\n5> (eget,66)\n5> (molestie,23)\n5> (in,85)\n5> (efficitur,20)\n5> (in,86)\n5> (malesuada,22)\n5> (eget,67)\n5> (in,87)\n5> (eget,68)\n5> (sollicitudin,27)\n5> (quam,32)\n5> (sodales,24)\n5> (quam,33)\n5> (eget,69)\n5> (blandit,15)\n5> (nulla,44)\n5> (in,88)\n5> (tortor,28)\n5> (tortor,29)\n5> (id,62)\n5> (quam,34)\n5> (orci,32)\n5> (sodales,25)\n5> (lacinia,20)\n5> (sagittis,23)\n5> (quam,35)\n5> (in,89)\n5> (in,90)\n5> (efficitur,21)\n5> (blandit,16)\n5> (luctus,23)\n5> (sagittis,24)\n5> (eget,70)\n5> (tortor,30)\n5> (nulla,45)\n5> (eget,71)\n5> (luctus,24)\n5> (nisl,29)\n5> (luctus,25)\n5> (nulla,46)\n5> (eget,72)\n5> (tortor,31)\n5> (eget,73)\n5> (eget,74)\n5> (in,91)\n5> (platea,4)\n5> (dapibus,25)\n5> (nisl,30)\n5> (sodales,26)\n5> (in,92)\n5> (orci,33)\n5> (luctus,26)\n5> (sodales,27)\n5> (orci,34)\n5> (in,93)\n5> (habitant,5)\n5> (netus,5)\n5> (malesuada,23)\n5> (sollicitudin,28)\n5> (id,63)\n5> (quam,36)\n5> (orci,35)\n5> (magnis,3)\n5> (in,94)\n5> (platea,5)\n5> (dapibus,26)\n5> (nulla,47)\n5> (luctus,27)\n5> (molestie,24)\n5> (eget,75)\n5> (sodales,28)\n5> (lacinia,21)\n5> (habitant,6)\n5> (netus,6)\n5> (malesuada,24)\n5> (velit,30)\n5> (blandit,17)\n5> (malesuada,25)\n5> (eget,76)\n5> (eget,77)\n5> (nulla,48)\n5> (sollicitudin,29)\n5> (id,64)\n5> (sollicitudin,30)\n5> (id,65)\n5> (nulla,49)\n5> (lacinia,22)\n5> (habitant,7)\n5> (netus,7)\n5> (malesuada,26)\n5> (sagittis,25)\n5> (sollicitudin,31)\n5> (id,66)\n5> (id,67)\n5> (eget,78)\n5> (velit,31)\n5> (nulla,50)\n5> (id,68)\n5> (tortor,32)\n5> (molestie,25)\n5> (tortor,33)\n5> (sodales,29)\n5> (lacinia,23)\n5> (nisl,31)\n5> (sagittis,26)\n5> (id,69)\n5> (luctus,28)\n5> (nisl,32)\n5> (dapibus,27)\n5> (orci,36)\n5> (nisl,33)\n5> (in,95)\n5> (id,70)\n5> (orci,37)\n5> (magnis,4)\n5> (malesuada,27)\n5> (in,96)\n5> (sodales,30)\n5> (eget,79)\n5> (efficitur,22)\n5> (id,71)\n4> (eu,1)\n5> (efficitur,23)\n4> (convallis,1)\n5> (eget,80)\n4> (diam,1)\n5> (sodales,31)\n4> (a,1)\n5> (nulla,51)\n4> (convallis,2)\n5> (dapibus,28)\n4> (vulputate,1)\n5> (in,97)\n4> (vel,1)\n5> (tortor,34)\n4> (gravida,1)\n5> (id,72)\n4> (donec,1)\n5> (pharetra,22)\n4> (mauris,1)\n5> (blandit,18)\n4> (mauris,2)\n5> (velit,32)\n4> (diam,2)\n5> (efficitur,24)\n4> (accumsan,1)\n5> (velit,33)\n4> (risus,1)\n5> (nisl,34)\n4> (est,1)\n5> (sodales,32)\n4> (a,2)\n5> (velit,34)\n4> (dui,1)\n5> (dapibus,29)\n4> (est,2)\n5> (sollicitudin,32)\n4> (eros,1)\n5> (eget,81)\n4> (eros,2)\n5> (nisl,35)\n4> (mauris,3)\n5> (malesuada,28)\n4> (est,3)\n5> (nulla,52)\n4> (ex,1)\n5> (in,98)\n4> (a,3)\n5> (quam,37)\n4> (rhoncus,1)\n5> (luctus,29)\n4> (eros,3)\n5> (pharetra,23)\n4> (pretium,1)\n5> (nulla,53)\n4> (aliquet,1)\n5> (efficitur,25)\n4> (a,4)\n5> (eget,82)\n4> (risus,2)\n5> (eget,83)\n4> (dui,2)\n5> (id,73)\n4> (tincidunt,1)\n5> (orci,38)\n4> (ante,1)\n5> (orci,39)\n4> (aenean,1)\n5> (nulla,54)\n4> (hendrerit,1)\n5> (id,74)\n4> (mauris,4)\n5> (eget,84)\n4> (gravida,2)\n5> (quam,38)\n4> (pretium,2)\n5> (orci,40)\n4> (mi,1)\n5> (eget,85)\n4> (natoque,1)\n5> (eget,86)\n4> (dis,1)\n5> (velit,35)\n4> (ridiculus,1)\n5> (luctus,30)\n4> (eu,2)\n5> (pharetra,24)\n4> (vel,2)\n5> (eget,87)\n4> (eu,3)\n5> (id,75)\n4> (mi,2)\n5> (luctus,31)\n4> (mauris,5)\n5> (id,76)\n4> (rhoncus,2)\n5> (in,99)\n4> (vel,3)\n5> (molestie,26)\n4> (aliquet,2)\n5> (malesuada,29)\n4> (eu,4)\n5> (blandit,19)\n4> (gravida,3)\n5> (orci,41)\n4> (a,5)\n5> (malesuada,30)\n4> (ex,2)\n5> (eget,88)\n4> (eu,5)\n5> (etiam,16)\n4> (dui,3)\n5> (nulla,55)\n4> (vel,4)\n5> (orci,42)\n4> (semper,1)\n5> (eget,89)\n4> (mauris,6)\n5> (etiam,17)\n4> (a,6)\n5> (pharetra,25)\n4> (semper,2)\n5> (nulla,56)\n4> (diam,3)\n5> (molestie,27)\n4> (mauris,7)\n5> (molestie,28)\n4> (ante,2)\n4> (gravida,4)\n5> (velit,36)\n4> (ante,3)\n5> (id,77)\n4> (a,7)\n5> (in,100)\n4> (ante,4)\n5> (luctus,32)\n4> (potenti,1)\n5> (nulla,57)\n4> (dui,4)\n5> (in,101)\n4> (mi,3)\n5> (nulla,58)\n4> (eu,6)\n5> (habitant,8)\n4> (vulputate,2)\n5> (netus,8)\n4> (ante,5)\n5> (malesuada,31)\n4> (rhoncus,3)\n5> (eget,90)\n4> (mi,4)\n5> (sodales,33)\n4> (felis,1)\n5> (id,78)\n4> (est,4)\n5> (quam,39)\n4> (tincidunt,2)\n5> (molestie,29)\n4> (felis,2)\n5> (id,79)\n4> (rhoncus,4)\n5> (in,102)\n4> (eros,4)\n5> (quam,40)\n4> (congue,1)\n5> (luctus,33)\n4> (diam,4)\n5> (eget,91)\n4> (pretium,3)\n5> (id,80)\n4> (ex,3)\n5> (efficitur,26)\n4> (porttitor,1)\n5> (blandit,20)\n4> (elementum,1)\n5> (nulla,59)\n4> (diam,5)\n5> (id,81)\n4> (donec,2)\n5> (luctus,34)\n4> (felis,3)\n5> (velit,37)\n4> (eu,7)\n5> (sollicitudin,33)\n4> (diam,6)\n5> (efficitur,27)\n4> (aliquet,3)\n5> (eget,92)\n4> (pretium,4)\n5> (in,103)\n4> (aenean,2)\n5> (tortor,35)\n4> (felis,4)\n5> (in,104)\n4> (elementum,2)\n5> (luctus,35)\n4> (elementum,3)\n5> (malesuada,32)\n4> (semper,3)\n5> (in,105)\n4> (diam,7)\n5> (nisl,36)\n4> (diam,8)\n5> (luctus,36)\n4> (tincidunt,3)\n5> (sollicitudin,34)\n4> (eu,8)\n5> (in,106)\n4> (aliquet,4)\n5> (tortor,36)\n4> (mauris,8)\n5> (blandit,21)\n4> (porttitor,2)\n5> (nulla,60)\n4> (hendrerit,2)\n5> (nulla,61)\n4> (eu,9)\n5> (sollicitudin,35)\n4> (risus,3)\n5> (molestie,30)\n4> (pretium,5)\n5> (sagittis,27)\n4> (dui,5)\n5> (in,107)\n4> (tincidunt,4)\n5> (in,108)\n4> (eu,10)\n5> (sagittis,28)\n4> (vel,5)\n5> (eget,93)\n4> (risus,4)\n5> (eget,94)\n4> (aenean,3)\n5> (in,109)\n4> (eu,11)\n5> (blandit,22)\n4> (tincidunt,5)\n5> (in,110)\n4> (eu,12)\n5> (etiam,18)\n4> (aliquet,5)\n5> (malesuada,33)\n4> (felis,5)\n5> (id,82)\n4> (vel,6)\n5> (nisl,37)\n4> (mauris,9)\n5> (eget,95)\n4> (accumsan,2)\n5> (sollicitudin,36)\n4> (risus,5)\n5> (in,111)\n4> (eu,13)\n5> (molestie,31)\n4> (a,8)\n5> (velit,38)\n4> (eu,14)\n5> (orci,43)\n4> (ex,4)\n5> (id,83)\n4> (eu,15)\n5> (velit,39)\n4> (hendrerit,3)\n5> (in,112)\n4> (vulputate,3)\n5> (id,84)\n4> (mauris,10)\n5> (habitant,9)\n4> (eu,16)\n5> (netus,9)\n4> (porttitor,3)\n5> (malesuada,34)\n4> (est,5)\n5> (in,113)\n4> (rhoncus,5)\n5> (orci,44)\n4> (a,9)\n5> (luctus,37)\n4> (risus,6)\n5> (nulla,62)\n4> (pretium,6)\n5> (in,114)\n4> (tincidunt,6)\n5> (eget,96)\n4> (vel,7)\n5> (orci,45)\n4> (pretium,7)\n5> (malesuada,35)\n4> (porttitor,4)\n5> (sodales,34)\n4> (mauris,11)\n5> (sodales,35)\n4> (elementum,4)\n5> (sodales,36)\n4> (mi,5)\n5> (orci,46)\n4> (hendrerit,4)\n5> (sollicitudin,37)\n4> (pretium,8)\n5> (quam,41)\n4> (mi,6)\n5> (luctus,38)\n4> (ex,5)\n5> (dapibus,30)\n4> (risus,7)\n5> (habitant,10)\n4> (vel,8)\n5> (netus,10)\n4> (semper,4)\n5> (malesuada,36)\n4> (gravida,5)\n5> (lacinia,24)\n4> (mauris,12)\n5> (eget,97)\n4> (tincidunt,7)\n5> (eget,98)\n4> (donec,3)\n5> (id,85)\n4> (a,10)\n5> (luctus,39)\n4> (ullamcorper,1)\n5> (luctus,40)\n4> (diam,9)\n5> (nisl,38)\n4> (mi,7)\n5> (id,86)\n4> (mauris,13)\n5> (velit,40)\n4> (eu,17)\n5> (in,115)\n5> (eget,99)\n4> (tincidunt,8)\n5> (dapibus,31)\n4> (donec,4)\n5> (velit,41)\n4> (convallis,3)\n5> (sodales,37)\n4> (eros,5)\n5> (dapibus,32)\n4> (rhoncus,6)\n5> (quam,42)\n4> (hendrerit,5)\n5> (nisl,39)\n4> (est,6)\n5> (id,87)\n4> (eros,6)\n5> (malesuada,37)\n4> (accumsan,3)\n5> (eget,100)\n4> (ante,6)\n5> (sodales,38)\n4> (aliquet,6)\n5> (sagittis,29)\n4> (a,11)\n5> (eget,101)\n4> (vulputate,4)\n5> (etiam,19)\n4> (tincidunt,9)\n5> (id,88)\n4> (risus,8)\n5> (nulla,63)\n4> (ex,6)\n5> (nisl,40)\n4> (vel,9)\n5> (id,89)\n4> (mi,8)\n5> (pharetra,26)\n4> (tincidunt,10)\n5> (sollicitudin,38)\n4> (eu,18)\n5> (quam,43)\n4> (diam,10)\n5> (pharetra,27)\n4> (mauris,14)\n5> (blandit,23)\n4> (ante,7)\n5> (id,90)\n4> (hendrerit,6)\n5> (velit,42)\n4> (eros,7)\n5> (nulla,64)\n4> (mi,9)\n5> (nulla,65)\n4> (eu,19)\n5> (nulla,66)\n4> (tincidunt,11)\n5> (tortor,37)\n4> (semper,5)\n5> (id,91)\n4> (convallis,4)\n5> (molestie,32)\n4> (a,12)\n5> (nisl,41)\n4> (congue,2)\n5> (in,116)\n4> (congue,3)\n5> (tortor,38)\n4> (a,13)\n5> (eget,102)\n4> (mi,10)\n5> (in,117)\n4> (risus,9)\n5> (quam,44)\n4> (mauris,15)\n5> (id,92)\n4> (convallis,5)\n5> (sollicitudin,39)\n4> (eu,20)\n5> (malesuada,38)\n4> (pretium,9)\n5> (orci,47)\n4> (mauris,16)\n5> (dapibus,33)\n4> (porttitor,5)\n5> (sollicitudin,40)\n4> (ex,7)\n5> (in,118)\n4> (eu,21)\n5> (eget,103)\n4> (est,7)\n5> (eget,104)\n4> (mauris,17)\n5> (nulla,67)\n4> (eu,22)\n5> (nulla,68)\n4> (potenti,2)\n5> (blandit,24)\n4> (risus,10)\n5> (malesuada,39)\n4> (vulputate,5)\n5> (eget,105)\n4> (semper,6)\n5> (quam,45)\n4> (donec,5)\n4> (est,8)\n4> (eu,23)\n5> (quam,46)\n4> (porttitor,6)\n4> (vel,10)\n4> (dui,6)\n4> (gravida,6)\n4> (vel,11)\n4> (tincidunt,12)\n4> (tincidunt,13)\n4> (eu,24)\n4> (accumsan,4)\n4> (ullamcorper,2)\n4> (eros,8)\n4> (ullamcorper,3)\n4> (felis,6)\n4> (congue,4)\n4> (mauris,18)\n4> (est,9)\n4> (donec,6)\n4> (vel,12)\n4> (rhoncus,7)\n4> (convallis,6)\n4> (a,14)\n4> (aliquet,7)\n4> (ullamcorper,4)\n4> (eros,9)\n4> (eros,10)\n4> (dui,7)\n4> (convallis,7)\n4> (dui,8)\n4> (tincidunt,14)\n4> (mauris,19)\n4> (vel,13)\n4> (hendrerit,7)\n4> (tincidunt,15)\n4> (convallis,8)\n4> (felis,7)\n4> (convallis,9)\n4> (est,10)\n4> (tincidunt,16)\n4> (porttitor,7)\n4> (pretium,10)\n4> (est,11)\n4> (mauris,20)\n4> (dui,9)\n4> (mauris,21)\n4> (ex,8)\n4> (a,15)\n4> (a,16)\n4> (vel,14)\n4> (mauris,22)\n4> (vel,15)\n4> (ex,9)\n4> (dui,10)\n4> (risus,11)\n4> (mi,11)\n4> (congue,5)\n4> (tincidunt,17)\n4> (accumsan,5)\n4> (convallis,10)\n4> (dui,11)\n4> (semper,7)\n4> (eros,11)\n4> (hendrerit,8)\n4> (ante,8)\n4> (dui,12)\n4> (vel,16)\n4> (donec,7)\n4> (a,17)\n4> (convallis,11)\n4> (natoque,2)\n4> (dis,2)\n4> (ridiculus,2)\n4> (gravida,7)\n4> (est,12)\n4> (mauris,23)\n4> (ex,10)\n4> (litora,1)\n4> (torquent,1)\n4> (conubia,1)\n4> (semper,8)\n4> (vel,17)\n4> (mauris,24)\n4> (vel,18)\n4> (eros,12)\n4> (risus,12)\n4> (dui,13)\n4> (elementum,5)\n4> (vel,19)\n4> (tincidunt,18)\n4> (felis,8)\n4> (convallis,12)\n4> (vel,20)\n4> (semper,9)\n4> (felis,9)\n4> (vel,21)\n4> (vel,22)\n4> (diam,11)\n4> (mauris,25)\n4> (est,13)\n4> (pretium,11)\n4> (vel,23)\n4> (semper,10)\n4> (felis,10)\n4> (aenean,4)\n4> (hendrerit,9)\n4> (diam,12)\n4> (elementum,6)\n4> (donec,8)\n4> (pretium,12)\n4> (ullamcorper,5)\n4> (mi,12)\n4> (mauris,26)\n4> (accumsan,6)\n4> (vel,24)\n4> (accumsan,7)\n4> (vel,25)\n4> (porttitor,8)\n4> (mauris,27)\n4> (donec,9)\n4> (hendrerit,10)\n4> (porttitor,9)\n4> (hendrerit,11)\n4> (diam,13)\n4> (hendrerit,12)\n4> (mi,13)\n4> (diam,14)\n4> (mauris,28)\n4> (eu,25)\n4> (mauris,29)\n4> (ex,11)\n4> (eu,26)\n4> (porttitor,10)\n4> (mauris,30)\n4> (risus,13)\n4> (accumsan,8)\n4> (a,18)\n4> (convallis,13)\n4> (donec,10)\n4> (a,19)\n4> (est,14)\n4> (tincidunt,19)\n4> (a,20)\n4> (a,21)\n4> (felis,11)\n4> (tincidunt,20)\n4> (donec,11)\n4> (diam,15)\n4> (ullamcorper,6)\n4> (mi,14)\n4> (litora,2)\n4> (torquent,2)\n4> (conubia,2)\n4> (mauris,31)\n4> (pretium,13)\n4> (est,15)\n4> (vel,26)\n4> (a,22)\n4> (dui,14)\n4> (tincidunt,21)\n4> (eu,27)\n4> (eu,28)\n4> (vel,27)\n4> (felis,12)\n4> (ante,9)\n4> (eu,29)\n4> (aenean,5)\n4> (mi,15)\n4> (ullamcorper,7)\n4> (semper,11)\n4> (vulputate,6)\n4> (elementum,7)\n4> (mauris,32)\n4> (accumsan,9)\n4> (tincidunt,22)\n4> (ullamcorper,8)\n4> (donec,12)\n4> (hendrerit,13)\n4> (hendrerit,14)\n4> (donec,13)\n4> (diam,16)\n4> (congue,6)\n4> (porttitor,11)\n4> (felis,13)\n4> (risus,14)\n4> (diam,17)\n4> (mauris,33)\n4> (diam,18)\n4> (diam,19)\n4> (ullamcorper,9)\n4> (eu,30)\n4> (a,23)\n4> (hendrerit,15)\n4> (eros,13)\n4> (eros,14)\n4> (eu,31)\n4> (hendrerit,16)\n4> (risus,15)\n4> (tincidunt,23)\n4> (rhoncus,8)\n4> (elementum,8)\n4> (donec,14)\n4> (mauris,34)\n4> (dui,15)\n4> (donec,15)\n4> (a,24)\n4> (rhoncus,9)\n4> (eu,32)\n4> (pretium,14)\n4> (mauris,35)\n4> (dui,16)\n4> (a,25)\n4> (semper,12)\n4> (ante,10)\n4> (mauris,36)\n4> (convallis,14)\n4> (mauris,37)\n4> (tincidunt,24)\n4> (dui,17)\n4> (hendrerit,17)\n4> (aliquet,8)\n4> (vel,28)\n4> (semper,13)\n4> (risus,16)\n4> (aenean,6)\n4> (eu,33)\n4> (a,26)\n4> (congue,7)\n4> (tincidunt,25)\n4> (gravida,8)\n4> (pretium,15)\n4> (eu,34)\n4> (elementum,9)\n4> (dui,18)\n4> (a,27)\n4> (felis,14)\n4> (dui,19)\n4> (accumsan,10)\n4> (tincidunt,26)\n4> (mauris,38)\n4> (vel,29)\n4> (rhoncus,10)\n4> (gravida,9)\n4> (vel,30)\n4> (convallis,15)\n4> (mauris,39)\n4> (donec,16)\n4> (vulputate,7)\n4> (rhoncus,11)\n4> (a,28)\n4> (eros,15)\n4> (a,29)\n4> (donec,17)\n4> (diam,20)\n4> (aliquet,9)\n4> (dui,20)\n4> (litora,3)\n4> (torquent,3)\n4> (conubia,3)\n4> (diam,21)\n4> (mauris,40)\n4> (tincidunt,27)\n4> (eu,35)\n4> (ante,11)\n4> (pretium,16)\n4> (convallis,16)\n4> (aenean,7)\n4> (vel,31)\n4> (felis,15)\n4> (congue,8)\n4> (vel,32)\n4> (tincidunt,28)\n4> (felis,16)\n4> (risus,17)\n4> (a,30)\n4> (ex,12)\n4> (mi,16)\n4> (eu,36)\n4> (aliquet,10)\n4> (semper,14)\n4> (est,16)\n4> (gravida,10)\n4> (elementum,10)\n4> (dui,21)\n4> (dui,22)\n4> (eros,16)\n4> (a,31)\n4> (ante,12)\n4> (congue,9)\n4> (est,17)\n4> (ante,13)\n4> (aliquet,11)\n4> (aenean,8)\n4> (hendrerit,18)\n4> (felis,17)\n4> (vulputate,8)\n4> (congue,10)\n4> (ante,14)\n4> (rhoncus,12)\n4> (aenean,9)\n4> (convallis,17)\n4> (convallis,18)\n4> (a,32)\n4> (a,33)\n4> (ante,15)\n4> (porttitor,12)\n4> (aliquet,12)\n4> (aenean,10)\n4> (donec,18)\n4> (vulputate,9)\n4> (pretium,17)\n4> (donec,19)\n4> (eu,37)\n4> (eros,17)\n4> (a,34)\n4> (mauris,41)\n4> (mauris,42)\n4> (elementum,11)\n4> (aenean,11)\n4> (risus,18)\n4> (hendrerit,19)\n4> (est,18)\n4> (diam,22)\n4> (felis,18)\n4> (hendrerit,20)\n4> (ante,16)\n4> (a,35)\n4> (diam,23)\n4> (a,36)\n4> (ullamcorper,10)\n4> (donec,20)\n4> (ullamcorper,11)\n4> (tincidunt,29)\n4> (vel,33)\n4> (ex,13)\n4> (rhoncus,13)\n4> (accumsan,11)\n4> (convallis,19)\n4> (rhoncus,14)\n4> (eros,18)\n4> (ex,14)\n4> (eros,19)\n4> (accumsan,12)\n4> (risus,19)\n4> (tincidunt,30)\n4> (vulputate,10)\n4> (convallis,20)\n4> (eros,20)\n4> (vulputate,11)\n4> (eu,38)\n4> (felis,19)\n4> (felis,20)\n4> (donec,21)\n4> (aliquet,13)\n4> (ullamcorper,12)\n4> (vel,34)\n4> (eu,39)\n4> (congue,11)\n4> (ante,17)\n4> (a,37)\n4> (risus,20)\n4> (vel,35)\n4> (potenti,3)\n4> (eu,40)\n4> (mauris,43)\n4> (mauris,44)\n4> (mi,17)\n4> (porttitor,13)\n4> (diam,24)\n4> (vulputate,12)\n4> (eros,21)\n4> (eu,41)\n4> (semper,15)\n4> (eros,22)\n4> (convallis,21)\n4> (risus,21)\n4> (ante,18)\n4> (tincidunt,31)\n4> (dui,23)\n4> (felis,21)\n4> (tincidunt,32)\n4> (aliquet,14)\n4> (vulputate,13)\n4> (porttitor,14)\n4> (mauris,45)\n4> (donec,22)\n4> (felis,22)\n4> (convallis,22)\n4> (donec,23)\n4> (donec,24)\n4> (ex,15)\n4> (tincidunt,33)\n4> (mauris,46)\n4> (litora,4)\n4> (torquent,4)\n4> (conubia,4)\n4> (porttitor,15)\n4> (felis,23)\n4> (convallis,23)\n4> (porttitor,16)\n4> (vel,36)\n4> (eu,42)\n4> (convallis,24)\n4> (convallis,25)\n4> (a,38)\n4> (eros,23)\n4> (ex,16)\n4> (vulputate,14)\n4> (vel,37)\n4> (risus,22)\n4> (vel,38)\n4> (aliquet,15)\n4> (diam,25)\n4> (hendrerit,21)\n4> (aliquet,16)\n4> (felis,24)\n4> (a,39)\n4> (tincidunt,34)\n4> (aliquet,17)\n4> (ex,17)\n4> (porttitor,17)\n4> (donec,25)\n4> (a,40)\n4> (mi,18)\n4> (tincidunt,35)\n4> (mauris,47)\n4> (ex,18)\n4> (est,19)\n4> (semper,16)\n4> (a,41)\n4> (rhoncus,15)\n4> (risus,23)\n4> (aliquet,18)\n4> (ante,19)\n4> (vulputate,15)\n4> (ullamcorper,13)\n4> (hendrerit,22)\n4> (donec,26)\n4> (accumsan,13)\n4> (ex,19)\n4> (semper,17)\n4> (a,42)\n4> (mauris,48)\n4> (ex,20)\n4> (gravida,11)\n4> (a,43)\n4> (pretium,18)\n4> (a,44)\n4> (ex,21)\n4> (vulputate,16)\n4> (vel,39)\n4> (aliquet,19)\n4> (a,45)\n4> (convallis,26)\n4> (tincidunt,36)\n4> (convallis,27)\n4> (aenean,12)\n4> (est,20)\n4> (felis,25)\n4> (tincidunt,37)\n4> (mi,19)\n4> (ex,22)\n4> (risus,24)\n4> (ex,23)\n4> (a,46)\n4> (vulputate,17)\n4> (diam,26)\n4> (accumsan,14)\n4> (eu,43)\n4> (ante,20)\n4> (eu,44)\n4> (mauris,49)\n4> (eu,45)\n4> (aliquet,20)\n4> (porttitor,18)\n4> (vel,40)\n4> (congue,12)\n4> (vulputate,18)\n4> (porttitor,19)\n4> (a,47)\n4> (tincidunt,38)\n4> (risus,25)\n4> (vel,41)\n4> (vel,42)\n4> (mauris,50)\n4> (pretium,19)\n4> (vel,43)\n4> (porttitor,20)\n4> (ante,21)\n4> (accumsan,15)\n4> (est,21)\n4> (rhoncus,16)\n4> (mi,20)\n4> (vulputate,19)\n4> (donec,27)\n4> (a,48)\n4> (elementum,12)\n4> (mauris,51)\n4> (eros,24)\n4> (porttitor,21)\n4> (porttitor,22)\n4> (pretium,20)\n4> (elementum,13)\n4> (risus,26)\n4> (risus,27)\n4> (tincidunt,39)\n4> (felis,26)\n4> (risus,28)\n4> (est,22)\n4> (donec,28)\n4> (mauris,52)\n4> (ex,24)\n4> (elementum,14)\n4> (convallis,28)\n4> (ullamcorper,14)\n4> (diam,27)\n4> (diam,28)\n4> (a,49)\n4> (mauris,53)\n4> (hendrerit,23)\n4> (donec,29)\n4> (eu,46)\n4> (felis,27)\n4> (rhoncus,17)\n4> (gravida,12)\n4> (vel,44)\n4> (mi,21)\n4> (eu,47)\n4> (ex,25)\n4> (eu,48)\n4> (donec,30)\n4> (eu,49)\n4> (donec,31)\n4> (est,23)\n4> (a,50)\n4> (a,51)\n4> (felis,28)\n4> (eros,25)\n4> (ex,26)\n4> (vel,45)\n4> (donec,32)\n4> (eros,26)\n4> (semper,18)\n4> (tincidunt,40)\n4> (semper,19)\n4> (est,24)\n4> (congue,13)\n4> (donec,33)\n4> (eu,50)\n4> (ante,22)\n4> (gravida,13)\n4> (pretium,21)\n4> (a,52)\n4> (mi,22)\n4> (litora,5)\n4> (torquent,5)\n4> (conubia,5)\n4> (aenean,13)\n4> (semper,20)\n4> (felis,29)\n4> (eu,51)\n4> (eros,27)\n4> (vel,46)\n4> (risus,29)\n4> (tincidunt,41)\n4> (ante,23)\n4> (eu,52)\n4> (dui,24)\n4> (a,53)\n4> (ex,27)\n4> (eu,53)\n4> (vel,47)\n4> (convallis,29)\n4> (eros,28)\n4> (mauris,54)\n4> (pretium,22)\n4> (aenean,14)\n4> (aenean,15)\n4> (diam,29)\n4> (convallis,30)\n4> (vel,48)\n4> (est,25)\n4> (accumsan,16)\n4> (dui,25)\n4> (aliquet,21)\n4> (convallis,31)\n4> (a,54)\n4> (est,26)\n4> (aliquet,22)\n4> (mauris,55)\n4> (vulputate,20)\n4> (risus,30)\n4> (aliquet,23)\n4> (porttitor,23)\n4> (eu,54)\n4> (aliquet,24)\n4> (dui,26)\n4> (vel,49)\n4> (elementum,15)\n4> (vel,50)\n4> (convallis,32)\n4> (semper,21)\n4> (accumsan,17)\n4> (est,27)\n4> (a,55)\n4> (gravida,14)\n4> (risus,31)\n4> (eu,55)\n4> (felis,30)\n4> (porttitor,24)\n4> (porttitor,25)\n4> (mi,23)\n4> (diam,30)\n4> (aenean,16)\n4> (ullamcorper,15)\n4> (a,56)\n4> (porttitor,26)\n4> (dui,27)\n4> (vulputate,21)\n4> (ullamcorper,16)\n4> (mauris,56)\n4> (aenean,17)\n4> (aenean,18)\n4> (a,57)\n4> (diam,31)\n4> (mauris,57)\n4> (dui,28)\n4> (vel,51)\n4> (aenean,19)\n4> (ante,24)\n4> (donec,34)\n4> (vel,52)\n4> (a,58)\n4> (diam,32)\n4> (aenean,20)\n4> (a,59)\n4> (vulputate,22)\n4> (a,60)\n4> (eros,29)\n4> (rhoncus,18)\n4> (eros,30)\n4> (vulputate,23)\n4> (eu,56)\n4> (a,61)\n4> (semper,22)\n4> (eu,57)\n4> (pretium,23)\n4> (ante,25)\n4> (donec,35)\n4> (dui,29)\n4> (a,62)\n4> (dui,30)\n4> (a,63)\n4> (ante,26)\n4> (est,28)\n4> (mauris,58)\n4> (donec,36)\n4> (diam,33)\n4> (convallis,33)\n4> (a,64)\n4> (eros,31)\n4> (a,65)\n4> (tincidunt,42)\n4> (vel,53)\n4> (ex,28)\n4> (dui,31)\n4> (congue,14)\n4> (gravida,15)\n4> (donec,37)\n4> (felis,31)\n4> (ex,29)\n4> (diam,34)\n4> (gravida,16)\n4> (tincidunt,43)\n4> (eu,58)\n4> (eu,59)\n4> (aenean,21)\n4> (a,66)\n4> (mauris,59)\n4> (vel,54)\n4> (tincidunt,44)\n4> (tincidunt,45)\n4> (risus,32)\n4> (a,67)\n4> (accumsan,18)\n4> (vel,55)\n4> (accumsan,19)\n4> (donec,38)\n4> (eros,32)\n4> (mauris,60)\n4> (hendrerit,24)\n4> (felis,32)\n4> (a,68)\n4> (est,29)\n4> (vulputate,24)\n4> (pretium,24)\n4> (donec,39)\n4> (est,30)\n4> (donec,40)\n4> (elementum,16)\n4> (tincidunt,46)\n4> (eros,33)\n4> (tincidunt,47)\n4> (risus,33)\n4> (ante,27)\n4> (vel,56)\n4> (pretium,25)\n4> (est,31)\n4> (eu,60)\n4> (aliquet,25)\n4> (rhoncus,19)\n4> (convallis,34)\n4> (aliquet,26)\n4> (eros,34)\n4> (ex,30)\n4> (pretium,26)\n4> (semper,23)\n4> (diam,35)\n4> (donec,41)\n4> (pretium,27)\n4> (a,69)\n4> (ex,31)\n4> (eu,61)\n4> (ullamcorper,17)\n4> (mauris,61)\n4> (a,70)\n4> (vel,57)\n4> (hendrerit,25)\n4> (eu,62)\n4> (tincidunt,48)\n4> (dui,32)\n4> (eros,35)\n4> (gravida,17)\n4> (eu,63)\n4> (vulputate,25)\n4> (mauris,62)\n4> (convallis,35)\n4> (aenean,22)\n4> (pretium,28)\n4> (eu,64)\n4> (ante,28)\n4> (vel,58)\n4> (a,71)\n4> (donec,42)\n4> (elementum,17)\n4> (vel,59)\n4> (gravida,18)\n4> (felis,33)\n4> (ex,32)\n4> (ullamcorper,18)\n4> (est,32)\n4> (felis,34)\n4> (semper,24)\n4> (donec,43)\n4> (eros,36)\n4> (natoque,3)\n4> (dis,3)\n4> (ridiculus,3)\n4> (aenean,23)\n4> (mauris,63)\n4> (felis,35)\n4> (porttitor,27)\n4> (semper,25)\n4> (est,33)\n4> (elementum,18)\n4> (ante,29)\n4> (a,72)\n4> (pretium,29)\n4> (felis,36)\n4> (rhoncus,20)\n4> (a,73)\n4> (ex,33)\n4> (accumsan,20)\n4> (eu,65)\n4> (eros,37)\n4> (convallis,36)\n4> (vel,60)\n4> (aliquet,27)\n4> (est,34)\n4> (tincidunt,49)\n4> (a,74)\n4> (aliquet,28)\n4> (porttitor,28)\n4> (congue,15)\n4> (mauris,64)\n4> (vel,61)\n4> (felis,37)\n4> (mauris,65)\n4> (porttitor,29)\n4> (a,75)\n4> (natoque,4)\n4> (dis,4)\n4> (ridiculus,4)\n4> (a,76)\n4> (congue,16)\n4> (felis,38)\n4> (ante,30)\n4> (vel,62)\n4> (vel,63)\n4> (ante,31)\n4> (risus,34)\n4> (vel,64)\n4> (vel,65)\n4> (ex,34)\n4> (eu,66)\n4> (accumsan,21)\n4> (gravida,19)\n4> (a,77)\n4> (rhoncus,21)\n4> (convallis,37)\n4> (felis,39)\n4> (dui,33)\n4> (ex,35)\n4> (elementum,19)\n4> (elementum,20)\n4> (mauris,66)\n4> (potenti,4)\n4> (mauris,67)\n4> (mauris,68)\n4> (mauris,69)\n4> (eros,38)\n4> (felis,40)\n4> (donec,44)\n4> (vel,66)\n4> (vel,67)\n4> (risus,35)\n4> (hendrerit,26)\n4> (ullamcorper,19)\n4> (a,78)\n4> (porttitor,30)\n4> (eu,67)\n4> (mi,24)\n4> (dui,34)\n4> (vulputate,26)\n4> (est,35)\n4> (hendrerit,27)\n4> (diam,36)\n4> (est,36)\n4> (mi,25)\n4> (donec,45)\n4> (tincidunt,50)\n4> (est,37)\n4> (elementum,21)\n4> (est,38)\n4> (elementum,22)\n4> (tincidunt,51)\n4> (aenean,24)\n4> (felis,41)\n4> (eros,39)\n4> (est,39)\n4> (convallis,38)\n4> (ex,36)\n4> (pretium,30)\n4> (a,79)\n4> (eu,68)\n4> (donec,46)\n4> (mauris,70)\n4> (ex,37)\n4> (semper,26)\n4> (vel,68)\n4> (hendrerit,28)\n4> (ex,38)\n4> (eu,69)\n4> (est,40)\n4> (vulputate,27)\n4> (donec,47)\n4> (vel,69)\n4> (ullamcorper,20)\n4> (accumsan,22)\n4> (eros,40)\n4> (vel,70)\n4> (rhoncus,22)\n4> (vel,71)\n4> (ex,39)\n4> (vel,72)\n4> (aliquet,29)\n4> (mi,26)\n4> (vel,73)\n4> (congue,17)\n4> (rhoncus,23)\n4> (aenean,25)\n4> (vel,74)\n4> (mauris,71)\n4> (porttitor,31)\n4> (vel,75)\n4> (ex,40)\n4> (donec,48)\n4> (eu,70)\n4> (elementum,23)\n4> (donec,49)\n4> (ante,32)\n4> (accumsan,23)\n4> (eu,71)\n4> (vel,76)\n4> (eu,72)\n4> (aenean,26)\n4> (ullamcorper,21)\n4> (risus,36)\n4> (diam,37)\n4> (mauris,72)\n4> (tincidunt,52)\n4> (felis,42)\n4> (vulputate,28)\n4> (congue,18)\n4> (ex,41)\n4> (a,80)\n4> (mi,27)\n4> (ante,33)\n4> (donec,50)\n4> (rhoncus,24)\n4> (elementum,24)\n4> (elementum,25)\n4> (a,81)\n4> (ante,34)\n4> (vulputate,29)\n4> (a,82)\n4> (porttitor,32)\n4> (diam,38)\n4> (mauris,73)\n4> (rhoncus,25)\n4> (congue,19)\n4> (eu,73)\n4> (est,41)\n4> (hendrerit,29)\n4> (congue,20)\n4> (a,83)\n4> (porttitor,33)\n4> (semper,27)\n4> (eu,74)\n4> (est,42)\n4> (mauris,74)\n4> (felis,43)\n4> (mi,28)\n4> (mauris,75)\n4> (a,84)\n4> (est,43)\n4> (aliquet,30)\n4> (ante,35)\n4> (vulputate,30)\n4> (ullamcorper,22)\n4> (mauris,76)\n4> (aenean,27)\n4> (convallis,39)\n4> (vel,77)\n4> (semper,28)\n4> (semper,29)\n4> (mauris,77)\n4> (mi,29)\n4> (ullamcorper,23)\n4> (mauris,78)\n4> (eros,41)\n4> (eu,75)\n4> (risus,37)\n4> (semper,30)\n4> (vel,78)\n4> (est,44)\n4> (aliquet,31)\n4> (hendrerit,30)\n4> (a,85)\n4> (ex,42)\n4> (donec,51)\n4> (vel,79)\n4> (tincidunt,53)\n4> (eu,76)\n4> (potenti,5)\n4> (convallis,40)\n4> (eu,77)\n4> (a,86)\n4> (rhoncus,26)\n4> (mauris,79)\n4> (ante,36)\n4> (est,45)\n4> (aenean,28)\n4> (vel,80)\n4> (dui,35)\n4> (elementum,26)\n4> (ante,37)\n4> (ante,38)\n4> (mi,30)\n4> (donec,52)\n4> (gravida,20)\n4> (vel,81)\n4> (ullamcorper,24)\n4> (hendrerit,31)\n4> (diam,39)\n4> (tincidunt,54)\n4> (risus,38)\n4> (ullamcorper,25)\n4> (mi,31)\n4> (a,87)\n4> (porttitor,34)\n4> (pretium,31)\n4> (eros,42)\n4> (donec,53)\n4> (ante,39)\n4> (hendrerit,32)\n4> (accumsan,24)\n4> (semper,31)\n4> (congue,21)\n4> (est,46)\n4> (risus,39)\n4> (pretium,32)\n4> (semper,32)\n4> (donec,54)\n4> (vel,82)\n4> (aenean,29)\n4> (congue,22)\n4> (ullamcorper,26)\n4> (mauris,80)\n4> (ullamcorper,27)\n4> (eros,43)\n4> (ante,40)\n4> (tincidunt,55)\n4> (gravida,21)\n4> (est,47)\n4> (mauris,81)\n4> (a,88)\n4> (mauris,82)\n4> (mi,32)\n4> (vel,83)\n4> (porttitor,35)\n4> (congue,23)\n4> (ullamcorper,28)\n4> (semper,33)\n4> (vel,84)\n4> (rhoncus,27)\n4> (eu,78)\n4> (vel,85)\n4> (diam,40)\n4> (ante,41)\n4> (tincidunt,56)\n4> (vel,86)\n4> (eu,79)\n4> (donec,55)\n4> (eu,80)\n4> (a,89)\n4> (donec,56)\n4> (ante,42)\n4> (diam,41)\n4> (ullamcorper,29)\n4> (felis,44)\n4> (mauris,83)\n4> (accumsan,25)\n4> (vulputate,31)\n4> (congue,24)\n4> (mi,33)\n4> (rhoncus,28)\n4> (risus,40)\n4> (mauris,84)\n4> (hendrerit,33)\n4> (hendrerit,34)\n6> (nam,1)\n6> (sed,1)\n6> (nam,2)\n6> (lectus,1)\n6> (tellus,1)\n6> (nam,3)\n6> (sed,2)\n6> (nam,4)\n6> (sit,1)\n6> (amet,1)\n6> (consectetur,1)\n6> (sed,3)\n6> (viverra,1)\n6> (sit,2)\n6> (amet,2)\n6> (lobortis,1)\n6> (odio,1)\n6> (sit,3)\n6> (amet,3)\n6> (sit,4)\n6> (amet,4)\n6> (faucibus,1)\n6> (urna,1)\n6> (sed,4)\n6> (odio,2)\n6> (sed,5)\n6> (lobortis,2)\n6> (tellus,2)\n6> (justo,1)\n6> (faucibus,2)\n6> (lobortis,3)\n6> (sed,6)\n6> (laoreet,1)\n6> (parturient,1)\n6> (nam,5)\n6> (erat,1)\n6> (viverra,2)\n6> (sit,5)\n6> (amet,5)\n6> (sed,7)\n6> (sed,8)\n6> (justo,2)\n6> (lobortis,4)\n6> (urna,2)\n6> (sed,9)\n6> (feugiat,1)\n6> (sit,6)\n6> (amet,6)\n6> (erat,2)\n6> (sit,7)\n6> (amet,7)\n6> (nam,6)\n6> (erat,3)\n6> (urna,3)\n6> (lobortis,5)\n6> (curabitur,1)\n6> (sit,8)\n6> (amet,8)\n6> (sed,10)\n6> (tellus,3)\n6> (sed,11)\n6> (auctor,1)\n6> (sit,9)\n6> (amet,9)\n6> (faucibus,3)\n6> (facilisi,1)\n6> (sed,12)\n6> (nam,7)\n6> (sit,10)\n6> (amet,10)\n6> (integer,1)\n6> (sed,13)\n6> (sit,11)\n6> (amet,11)\n6> (odio,3)\n6> (proin,1)\n6> (sed,14)\n6> (erat,4)\n6> (sit,12)\n6> (amet,12)\n6> (lectus,2)\n6> (auctor,2)\n6> (proin,2)\n6> (lectus,3)\n6> (sit,13)\n6> (amet,13)\n6> (justo,3)\n6> (urna,4)\n6> (erat,5)\n6> (consectetur,2)\n6> (viverra,3)\n6> (sed,15)\n6> (consectetur,3)\n6> (tellus,4)\n6> (consectetur,4)\n6> (tellus,5)\n6> (laoreet,2)\n6> (erat,6)\n6> (feugiat,2)\n6> (sed,16)\n6> (justo,4)\n6> (lobortis,6)\n6> (sed,17)\n6> (lectus,4)\n6> (lectus,5)\n6> (nam,8)\n6> (faucibus,4)\n6> (consectetur,5)\n6> (auctor,3)\n6> (curabitur,2)\n6> (sed,18)\n6> (erat,7)\n6> (lobortis,7)\n6> (faucibus,5)\n6> (sed,19)\n6> (sit,14)\n6> (amet,14)\n6> (erat,8)\n6> (justo,5)\n6> (feugiat,3)\n6> (lobortis,8)\n6> (lobortis,9)\n6> (odio,4)\n6> (sit,15)\n6> (amet,15)\n6> (sit,16)\n6> (amet,16)\n6> (sed,20)\n6> (urna,5)\n6> (sed,21)\n6> (lobortis,10)\n6> (sed,22)\n6> (lectus,6)\n6> (tellus,6)\n6> (consectetur,6)\n6> (sit,17)\n6> (amet,17)\n6> (auctor,4)\n6> (tellus,7)\n6> (curabitur,3)\n6> (laoreet,3)\n6> (odio,5)\n6> (lectus,7)\n6> (auctor,5)\n6> (sit,18)\n6> (amet,18)\n6> (justo,6)\n6> (integer,2)\n6> (urna,6)\n6> (sit,19)\n6> (amet,19)\n6> (lobortis,11)\n6> (curabitur,4)\n6> (proin,3)\n6> (laoreet,4)\n6> (proin,4)\n6> (feugiat,4)\n6> (faucibus,6)\n6> (urna,7)\n6> (faucibus,7)\n6> (odio,6)\n6> (consectetur,7)\n6> (auctor,6)\n6> (sed,23)\n6> (feugiat,5)\n6> (sed,24)\n6> (viverra,4)\n6> (nam,9)\n6> (sed,25)\n6> (erat,9)\n6> (sit,20)\n6> (amet,20)\n6> (feugiat,6)\n6> (laoreet,5)\n6> (tellus,8)\n6> (sit,21)\n6> (amet,21)\n6> (sed,26)\n6> (laoreet,6)\n6> (faucibus,8)\n6> (sed,27)\n6> (sed,28)\n6> (erat,10)\n6> (sed,29)\n6> (sit,22)\n6> (amet,22)\n6> (proin,5)\n6> (sed,30)\n6> (erat,11)\n6> (odio,7)\n6> (sed,31)\n6> (sed,32)\n6> (proin,6)\n6> (erat,12)\n6> (lobortis,12)\n6> (parturient,2)\n6> (feugiat,7)\n6> (faucibus,9)\n6> (sed,33)\n6> (sed,34)\n6> (justo,7)\n6> (per,1)\n6> (per,2)\n6> (integer,3)\n6> (lectus,8)\n6> (erat,13)\n6> (proin,7)\n6> (integer,4)\n6> (justo,8)\n6> (sed,35)\n6> (auctor,7)\n6> (sed,36)\n6> (curabitur,5)\n6> (laoreet,7)\n6> (sit,23)\n6> (amet,23)\n6> (odio,8)\n6> (lectus,9)\n6> (nam,10)\n6> (sed,37)\n6> (faucibus,10)\n6> (viverra,5)\n6> (curabitur,6)\n6> (tellus,9)\n6> (lectus,10)\n6> (erat,14)\n6> (lobortis,13)\n6> (odio,9)\n6> (sed,38)\n6> (faucibus,11)\n6> (justo,9)\n6> (sed,39)\n6> (proin,8)\n6> (sed,40)\n6> (odio,10)\n6> (sit,24)\n6> (amet,24)\n6> (consectetur,8)\n6> (sed,41)\n6> (sit,25)\n6> (amet,25)\n6> (odio,11)\n6> (faucibus,12)\n6> (nam,11)\n6> (laoreet,8)\n6> (tellus,10)\n6> (erat,15)\n6> (sit,26)\n6> (amet,26)\n6> (tellus,11)\n6> (erat,16)\n6> (lectus,11)\n6> (justo,10)\n6> (sed,42)\n6> (justo,11)\n6> (sit,27)\n6> (amet,27)\n6> (per,3)\n6> (per,4)\n6> (justo,12)\n6> (auctor,8)\n6> (sed,43)\n6> (integer,5)\n6> (tellus,12)\n6> (sit,28)\n6> (amet,28)\n6> (sed,44)\n6> (nam,12)\n6> (erat,17)\n6> (nam,13)\n6> (sed,45)\n6> (feugiat,8)\n6> (sed,46)\n6> (feugiat,9)\n6> (sed,47)\n6> (viverra,6)\n6> (odio,12)\n6> (sed,48)\n6> (viverra,7)\n6> (viverra,8)\n6> (nam,14)\n6> (sit,29)\n6> (amet,29)\n6> (facilisi,2)\n6> (faucibus,13)\n6> (faucibus,14)\n6> (sed,49)\n6> (tellus,13)\n6> (curabitur,7)\n6> (odio,13)\n6> (sit,30)\n6> (amet,30)\n6> (justo,13)\n6> (laoreet,9)\n6> (erat,18)\n6> (sed,50)\n6> (sit,31)\n6> (amet,31)\n6> (nam,15)\n6> (feugiat,10)\n6> (sed,51)\n6> (sit,32)\n6> (amet,32)\n6> (consectetur,9)\n6> (sed,52)\n6> (feugiat,11)\n6> (proin,9)\n6> (odio,14)\n6> (justo,14)\n6> (odio,15)\n6> (lectus,12)\n6> (integer,6)\n6> (erat,19)\n6> (erat,20)\n6> (sed,53)\n6> (justo,15)\n6> (justo,16)\n6> (sed,54)\n6> (lectus,13)\n6> (integer,7)\n6> (sed,55)\n6> (auctor,9)\n6> (facilisi,3)\n6> (per,5)\n6> (per,6)\n6> (viverra,9)\n6> (sit,33)\n6> (amet,33)\n6> (urna,8)\n6> (urna,9)\n6> (lectus,14)\n6> (faucibus,15)\n6> (cubilia,1)\n6> (viverra,10)\n6> (viverra,11)\n6> (feugiat,12)\n6> (integer,8)\n6> (laoreet,10)\n6> (justo,17)\n6> (viverra,12)\n6> (faucibus,16)\n6> (sed,56)\n6> (sit,34)\n6> (amet,34)\n6> (auctor,10)\n6> (lectus,15)\n6> (consectetur,10)\n6> (odio,16)\n6> (sit,35)\n6> (amet,35)\n6> (faucibus,17)\n6> (sed,57)\n6> (justo,18)\n6> (curabitur,8)\n6> (viverra,13)\n6> (laoreet,11)\n6> (sed,58)\n6> (sit,36)\n6> (amet,36)\n6> (laoreet,12)\n6> (tellus,14)\n6> (odio,17)\n6> (sed,59)\n6> (sit,37)\n6> (amet,37)\n6> (integer,9)\n6> (lectus,16)\n6> (faucibus,18)\n6> (feugiat,13)\n6> (curabitur,9)\n6> (odio,18)\n6> (tellus,15)\n6> (sed,60)\n6> (auctor,11)\n6> (sed,61)\n6> (faucibus,19)\n6> (erat,21)\n6> (sit,38)\n6> (amet,38)\n6> (sit,39)\n6> (amet,39)\n6> (justo,19)\n6> (urna,10)\n6> (consectetur,11)\n6> (sed,62)\n6> (erat,22)\n6> (sit,40)\n6> (amet,40)\n6> (consectetur,12)\n6> (integer,10)\n6> (lectus,17)\n6> (faucibus,20)\n6> (laoreet,13)\n6> (lectus,18)\n6> (consectetur,13)\n6> (justo,20)\n6> (consectetur,14)\n6> (auctor,12)\n6> (proin,10)\n6> (sit,41)\n6> (amet,41)\n6> (curabitur,10)\n6> (lobortis,14)\n6> (sed,63)\n6> (feugiat,14)\n6> (tellus,16)\n6> (sed,64)\n6> (urna,11)\n6> (lectus,19)\n6> (justo,21)\n6> (odio,19)\n6> (erat,23)\n6> (sed,65)\n6> (per,7)\n6> (per,8)\n6> (viverra,14)\n6> (faucibus,21)\n6> (erat,24)\n6> (viverra,15)\n6> (sed,66)\n6> (tellus,17)\n6> (curabitur,11)\n6> (erat,25)\n6> (proin,11)\n6> (sed,67)\n6> (sed,68)\n6> (sit,42)\n6> (amet,42)\n6> (sed,69)\n6> (sit,43)\n6> (amet,43)\n6> (sit,44)\n6> (amet,44)\n6> (odio,20)\n6> (feugiat,15)\n6> (sit,45)\n6> (amet,45)\n6> (sed,70)\n6> (sit,46)\n6> (amet,46)\n6> (auctor,13)\n6> (proin,12)\n6> (urna,12)\n6> (auctor,14)\n6> (sed,71)\n6> (justo,22)\n6> (laoreet,14)\n6> (viverra,16)\n6> (odio,21)\n6> (auctor,15)\n6> (proin,13)\n6> (faucibus,22)\n6> (justo,23)\n6> (auctor,16)\n6> (lectus,20)\n6> (proin,14)\n6> (odio,22)\n6> (integer,11)\n6> (sit,47)\n6> (amet,47)\n6> (tellus,18)\n6> (sit,48)\n6> (amet,48)\n6> (lectus,21)\n6> (faucibus,23)\n6> (cubilia,2)\n6> (feugiat,16)\n6> (justo,24)\n6> (odio,23)\n6> (sed,72)\n6> (integer,12)\n6> (lobortis,15)\n6> (odio,24)\n6> (lobortis,16)\n6> (sed,73)\n6> (justo,25)\n6> (sit,49)\n6> (amet,49)\n6> (odio,25)\n6> (lobortis,17)\n6> (consectetur,15)\n6> (urna,13)\n6> (erat,26)\n6> (laoreet,15)\n6> (auctor,17)\n6> (sed,74)\n6> (sed,75)\n6> (curabitur,12)\n6> (sed,76)\n6> (lectus,22)\n6> (proin,15)\n6> (justo,26)\n6> (odio,26)\n6> (proin,16)\n6> (sit,50)\n6> (amet,50)\n6> (feugiat,17)\n6> (sed,77)\n6> (tellus,19)\n6> (sit,51)\n6> (amet,51)\n6> (sed,78)\n6> (feugiat,18)\n6> (feugiat,19)\n6> (viverra,17)\n6> (sed,79)\n6> (faucibus,24)\n6> (urna,14)\n6> (faucibus,25)\n6> (odio,27)\n6> (feugiat,20)\n6> (sed,80)\n6> (erat,27)\n6> (tellus,20)\n6> (sed,81)\n6> (erat,28)\n6> (auctor,18)\n6> (justo,27)\n6> (integer,13)\n6> (viverra,18)\n6> (per,9)\n6> (per,10)\n6> (consectetur,16)\n6> (viverra,19)\n6> (consectetur,17)\n6> (odio,28)\n6> (lobortis,18)\n6> (odio,29)\n6> (sit,52)\n6> (amet,52)\n6> (sed,82)\n6> (lectus,23)\n6> (lobortis,19)\n6> (sit,53)\n6> (amet,53)\n6> (sit,54)\n6> (amet,54)\n6> (sit,55)\n6> (amet,55)\n6> (erat,29)\n6> (sed,83)\n6> (urna,15)\n6> (auctor,19)\n6> (sit,56)\n6> (amet,56)\n6> (proin,17)\n6> (viverra,20)\n6> (lectus,24)\n6> (curabitur,13)\n6> (odio,30)\n6> (erat,30)\n6> (sed,84)\n6> (sed,85)\n6> (tellus,21)\n6> (sit,57)\n6> (amet,57)\n6> (consectetur,18)\n6> (sed,86)\n6> (lobortis,20)\n6> (sit,58)\n6> (amet,58)\n6> (tellus,22)\n6> (sit,59)\n6> (amet,59)\n6> (odio,31)\n6> (proin,18)\n6> (faucibus,26)\n6> (justo,28)\n6> (auctor,20)\n6> (consectetur,19)\n6> (viverra,21)\n6> (consectetur,20)\n6> (justo,29)\n6> (consectetur,21)\n6> (sed,87)\n6> (nam,16)\n6> (justo,30)\n6> (tellus,23)\n6> (sit,60)\n6> (amet,60)\n6> (justo,31)\n6> (feugiat,21)\n6> (auctor,21)\n6> (sed,88)\n6> (odio,32)\n6> (sed,89)\n6> (faucibus,27)\n6> (urna,16)\n6> (sit,61)\n6> (amet,61)\n6> (lobortis,21)\n6> (tellus,24)\n6> (feugiat,22)\n6> (justo,32)\n6> (sit,62)\n6> (amet,62)\n6> (lobortis,22)\n6> (sit,63)\n6> (amet,63)\n6> (viverra,22)\n6> (lobortis,23)\n6> (sed,90)\n6> (tellus,25)\n6> (sed,91)\n6> (sit,64)\n6> (amet,64)\n6> (erat,31)\n6> (feugiat,23)\n6> (tellus,26)\n6> (sed,92)\n6> (sit,65)\n6> (amet,65)\n6> (consectetur,22)\n6> (sed,93)\n6> (sit,66)\n6> (amet,66)\n6> (sed,94)\n6> (consectetur,23)\n6> (sed,95)\n6> (urna,17)\n6> (lectus,25)\n6> (proin,19)\n6> (urna,18)\n6> (odio,33)\n6> (tellus,27)\n6> (sed,96)\n6> (sit,67)\n6> (amet,67)\n6> (tellus,28)\n6> (sed,97)\n6> (laoreet,16)\n6> (tellus,29)\n6> (faucibus,28)\n6> (urna,19)\n6> (curabitur,14)\n6> (sed,98)\n6> (erat,32)\n6> (proin,20)\n6> (sed,99)\n6> (urna,20)\n6> (viverra,23)\n6> (sed,100)\n6> (lectus,26)\n6> (sed,101)\n6> (lectus,27)\n6> (erat,33)\n6> (erat,34)\n6> (lobortis,24)\n6> (sed,102)\n6> (faucibus,29)\n6> (cubilia,3)\n6> (curabitur,15)\n6> (justo,33)\n6> (sit,68)\n6> (amet,68)\n6> (odio,34)\n6> (lobortis,25)\n6> (sed,103)\n6> (parturient,3)\n6> (sit,69)\n6> (amet,69)\n6> (sed,104)\n6> (sit,70)\n6> (amet,70)\n2> (aliquam,1)\n2> (pulvinar,1)\n6> (viverra,24)\n2> (vivamus,1)\n6> (erat,35)\n2> (vestibulum,1)\n6> (curabitur,16)\n2> (mattis,1)\n6> (tellus,30)\n2> (cursus,1)\n6> (justo,34)\n2> (maximus,1)\n6> (sed,105)\n2> (placerat,1)\n6> (nam,17)\n2> (elit,1)\n6> (lobortis,26)\n2> (fermentum,1)\n6> (urna,21)\n2> (cursus,2)\n6> (auctor,22)\n2> (augue,1)\n6> (proin,21)\n2> (at,1)\n6> (odio,35)\n2> (vivamus,2)\n6> (curabitur,17)\n2> (condimentum,1)\n6> (sed,106)\n2> (euismod,1)\n6> (lectus,28)\n2> (duis,1)\n6> (facilisi,4)\n2> (scelerisque,1)\n6> (nam,18)\n2> (nibh,1)\n6> (curabitur,18)\n2> (dictum,1)\n6> (faucibus,30)\n2> (commodo,1)\n6> (lectus,29)\n2> (quis,1)\n6> (odio,36)\n2> (lacus,1)\n6> (justo,35)\n2> (euismod,2)\n6> (sed,107)\n2> (dictum,2)\n6> (proin,22)\n2> (vivamus,3)\n6> (lobortis,27)\n2> (aliquam,2)\n6> (sed,108)\n2> (quis,2)\n6> (justo,36)\n2> (fermentum,2)\n6> (parturient,4)\n2> (mattis,2)\n6> (faucibus,31)\n2> (maximus,2)\n6> (odio,37)\n2> (cursus,3)\n6> (sed,109)\n2> (at,2)\n6> (curabitur,19)\n2> (maximus,3)\n6> (auctor,23)\n2> (tempus,1)\n6> (integer,14)\n2> (varius,1)\n6> (sed,110)\n2> (et,1)\n6> (laoreet,17)\n2> (aliquam,3)\n6> (sit,71)\n2> (euismod,3)\n6> (amet,71)\n2> (egestas,1)\n6> (faucibus,32)\n2> (augue,2)\n6> (sed,111)\n2> (elit,2)\n6> (lectus,30)\n2> (bibendum,1)\n6> (auctor,24)\n2> (aliquam,4)\n6> (odio,38)\n2> (at,3)\n6> (sit,72)\n2> (dictum,3)\n6> (amet,72)\n2> (commodo,2)\n6> (sed,112)\n2> (scelerisque,2)\n6> (feugiat,24)\n2> (euismod,4)\n6> (lobortis,28)\n2> (maximus,4)\n6> (sit,73)\n2> (condimentum,2)\n6> (amet,73)\n2> (quis,3)\n6> (sed,113)\n2> (tempus,2)\n6> (lectus,31)\n2> (egestas,2)\n6> (sit,74)\n2> (et,2)\n6> (amet,74)\n2> (et,3)\n6> (faucibus,33)\n2> (tempus,3)\n6> (sit,75)\n2> (quis,4)\n6> (amet,75)\n2> (mattis,3)\n6> (viverra,25)\n2> (egestas,3)\n6> (sit,76)\n2> (dictum,4)\n6> (amet,76)\n2> (tempor,1)\n6> (odio,39)\n2> (at,4)\n6> (sed,114)\n2> (nibh,2)\n6> (sit,77)\n2> (at,5)\n6> (amet,77)\n2> (elit,3)\n6> (consectetur,24)\n2> (duis,2)\n6> (justo,37)\n2> (at,6)\n6> (viverra,26)\n2> (lacus,2)\n6> (auctor,25)\n2> (et,4)\n6> (curabitur,20)\n2> (lacus,3)\n6> (sit,78)\n2> (maximus,5)\n6> (amet,78)\n2> (at,7)\n6> (tellus,31)\n2> (at,8)\n6> (sed,115)\n2> (vestibulum,2)\n6> (odio,40)\n2> (quis,5)\n6> (viverra,27)\n2> (placerat,2)\n6> (sed,116)\n2> (euismod,5)\n6> (sed,117)\n2> (et,5)\n6> (lectus,32)\n2> (quis,6)\n6> (integer,15)\n2> (at,9)\n6> (sed,118)\n2> (bibendum,2)\n6> (proin,23)\n2> (vivamus,4)\n6> (justo,38)\n2> (lacus,4)\n6> (faucibus,34)\n2> (placerat,3)\n6> (sed,119)\n2> (tempor,2)\n6> (tellus,32)\n2> (commodo,3)\n6> (integer,16)\n2> (augue,3)\n6> (faucibus,35)\n2> (lacus,5)\n6> (nam,19)\n2> (dictum,5)\n6> (sit,79)\n2> (fermentum,3)\n6> (amet,79)\n2> (egestas,4)\n6> (tellus,33)\n2> (at,10)\n6> (auctor,26)\n2> (quis,7)\n6> (faucibus,36)\n2> (elit,4)\n6> (laoreet,18)\n2> (lacus,6)\n6> (lobortis,29)\n2> (egestas,5)\n6> (sed,120)\n2> (fermentum,4)\n6> (lobortis,30)\n2> (condimentum,3)\n6> (facilisi,5)\n2> (elit,5)\n6> (proin,24)\n2> (vivamus,5)\n6> (sit,80)\n2> (augue,4)\n6> (amet,80)\n2> (fermentum,5)\n6> (sit,81)\n2> (maximus,6)\n6> (amet,81)\n2> (quis,8)\n6> (odio,41)\n2> (pulvinar,2)\n6> (sed,121)\n2> (augue,5)\n6> (facilisi,6)\n2> (elit,6)\n6> (curabitur,21)\n2> (at,11)\n6> (justo,39)\n2> (scelerisque,3)\n6> (consectetur,25)\n2> (varius,2)\n6> (nam,20)\n2> (vivamus,6)\n6> (tellus,34)\n2> (vestibulum,3)\n6> (erat,36)\n2> (placerat,4)\n6> (sit,82)\n2> (maximus,7)\n6> (amet,82)\n2> (quis,9)\n6> (erat,37)\n2> (lacus,7)\n6> (sit,83)\n2> (elit,7)\n6> (amet,83)\n2> (egestas,6)\n6> (justo,40)\n2> (quis,10)\n6> (sed,122)\n2> (vehicula,1)\n6> (curabitur,22)\n2> (et,6)\n6> (lectus,33)\n2> (at,12)\n6> (justo,41)\n2> (bibendum,3)\n6> (justo,42)\n2> (egestas,7)\n6> (sed,123)\n2> (et,7)\n6> (proin,25)\n2> (et,8)\n6> (faucibus,37)\n2> (egestas,8)\n6> (erat,38)\n2> (commodo,4)\n6> (lobortis,31)\n2> (lacus,8)\n6> (odio,42)\n2> (et,9)\n6> (sed,124)\n2> (duis,3)\n6> (odio,43)\n2> (elit,8)\n6> (justo,43)\n2> (cursus,4)\n6> (lectus,34)\n2> (tempus,4)\n6> (sit,84)\n2> (varius,3)\n6> (amet,84)\n2> (et,10)\n6> (curabitur,23)\n2> (cursus,5)\n6> (sit,85)\n2> (elit,9)\n6> (amet,85)\n2> (condimentum,4)\n6> (odio,44)\n2> (augue,6)\n6> (sit,86)\n2> (et,11)\n6> (amet,86)\n2> (aliquam,5)\n6> (curabitur,24)\n2> (elit,10)\n6> (sed,125)\n2> (quis,11)\n6> (urna,22)\n2> (nibh,3)\n6> (proin,26)\n2> (aliquam,6)\n6> (lobortis,32)\n2> (commodo,5)\n6> (consectetur,26)\n2> (condimentum,5)\n6> (integer,17)\n2> (duis,4)\n6> (lectus,35)\n2> (condimentum,6)\n6> (odio,45)\n2> (quis,12)\n6> (sit,87)\n2> (nibh,4)\n6> (amet,87)\n2> (aliquam,7)\n6> (feugiat,25)\n2> (bibendum,4)\n6> (integer,18)\n2> (maximus,8)\n6> (justo,44)\n2> (placerat,5)\n6> (odio,46)\n2> (dictum,6)\n6> (urna,23)\n2> (at,13)\n6> (lectus,36)\n2> (augue,7)\n6> (sit,88)\n2> (mattis,4)\n6> (amet,88)\n2> (nibh,5)\n6> (urna,24)\n2> (fermentum,6)\n6> (faucibus,38)\n6> (justo,45)\n6> (tellus,35)\n6> (odio,47)\n2> (quis,13)\n6> (faucibus,39)\n2> (et,12)\n6> (cubilia,4)\n2> (vivamus,7)\n6> (sit,89)\n2> (et,13)\n6> (amet,89)\n2> (placerat,6)\n6> (justo,46)\n2> (elit,11)\n6> (sit,90)\n2> (vestibulum,4)\n6> (amet,90)\n2> (at,14)\n6> (lectus,37)\n2> (at,15)\n6> (sed,126)\n2> (cras,1)\n6> (sit,91)\n2> (vestibulum,5)\n6> (amet,91)\n2> (at,16)\n6> (justo,47)\n2> (commodo,6)\n6> (odio,48)\n2> (augue,8)\n6> (sed,127)\n2> (vestibulum,6)\n6> (sed,128)\n2> (quis,14)\n6> (proin,27)\n2> (pulvinar,3)\n6> (nam,21)\n2> (aliquam,8)\n6> (laoreet,19)\n2> (fermentum,7)\n6> (lobortis,33)\n2> (egestas,9)\n6> (sit,92)\n2> (bibendum,5)\n6> (amet,92)\n2> (pulvinar,4)\n6> (auctor,27)\n2> (euismod,6)\n6> (laoreet,20)\n2> (duis,5)\n6> (urna,25)\n2> (et,14)\n6> (sed,129)\n2> (augue,9)\n6> (integer,19)\n2> (maximus,9)\n6> (nam,22)\n2> (et,15)\n6> (viverra,28)\n2> (fermentum,8)\n6> (sit,93)\n2> (elit,12)\n6> (amet,93)\n2> (placerat,7)\n6> (viverra,29)\n2> (tempus,5)\n6> (feugiat,26)\n2> (quis,15)\n6> (odio,49)\n2> (at,17)\n6> (laoreet,21)\n2> (cras,2)\n6> (justo,48)\n2> (vestibulum,7)\n6> (sed,130)\n2> (commodo,7)\n6> (sed,131)\n2> (at,18)\n6> (curabitur,25)\n2> (scelerisque,4)\n6> (urna,26)\n2> (cursus,6)\n6> (lectus,38)\n2> (at,19)\n6> (faucibus,40)\n2> (vivamus,8)\n6> (sed,132)\n2> (quis,16)\n6> (lectus,39)\n2> (condimentum,7)\n6> (sed,133)\n2> (varius,4)\n6> (viverra,30)\n2> (at,20)\n6> (urna,27)\n2> (duis,6)\n6> (sit,94)\n2> (at,21)\n6> (amet,94)\n2> (quis,17)\n6> (justo,49)\n2> (mattis,5)\n6> (faucibus,41)\n2> (vestibulum,8)\n6> (sit,95)\n2> (nibh,6)\n6> (amet,95)\n2> (duis,7)\n6> (urna,28)\n2> (augue,10)\n6> (auctor,28)\n2> (aliquam,9)\n6> (sit,96)\n6> (amet,96)\n6> (urna,29)\n6> (integer,20)\n6> (sit,97)\n6> (amet,97)\n6> (erat,39)\n2> (aliquam,10)\n6> (faucibus,42)\n2> (vestibulum,9)\n6> (curabitur,26)\n2> (quis,18)\n6> (integer,21)\n2> (commodo,8)\n6> (tellus,36)\n2> (egestas,10)\n6> (sed,134)\n2> (pulvinar,5)\n6> (sit,98)\n2> (et,16)\n2> (placerat,8)\n2> (elit,13)\n6> (amet,98)\n2> (vehicula,2)\n2> (varius,5)\n2> (nibh,7)\n2> (dictum,7)\n2> (varius,6)\n2> (cras,3)\n2> (vehicula,3)\n2> (nibh,8)\n2> (et,17)\n2> (lacus,9)\n2> (et,18)\n2> (cursus,7)\n2> (quis,19)\n2> (augue,11)\n2> (cras,4)\n2> (at,22)\n2> (dictum,8)\n2> (vestibulum,10)\n2> (cursus,8)\n2> (quis,20)\n2> (quis,21)\n2> (scelerisque,5)\n2> (egestas,11)\n2> (et,19)\n2> (quis,22)\n2> (vestibulum,11)\n2> (mattis,6)\n2> (lacus,10)\n2> (aliquam,11)\n2> (quis,23)\n2> (varius,7)\n2> (et,20)\n2> (et,21)\n2> (vivamus,9)\n2> (cursus,9)\n2> (elit,14)\n2> (at,23)\n2> (nibh,9)\n2> (fermentum,9)\n2> (bibendum,6)\n2> (ad,1)\n2> (lacus,11)\n2> (tempus,6)\n2> (commodo,9)\n2> (at,24)\n2> (condimentum,8)\n2> (elit,15)\n2> (at,25)\n2> (vehicula,4)\n2> (at,26)\n2> (pulvinar,6)\n2> (quis,24)\n2> (et,22)\n2> (elit,16)\n2> (tempor,3)\n2> (quis,25)\n2> (mattis,7)\n2> (lacus,12)\n2> (euismod,7)\n2> (quis,26)\n2> (at,27)\n2> (quis,27)\n2> (cursus,10)\n2> (condimentum,9)\n2> (quis,28)\n2> (commodo,10)\n2> (euismod,8)\n2> (et,23)\n2> (et,24)\n2> (egestas,12)\n2> (euismod,9)\n2> (bibendum,7)\n2> (vestibulum,12)\n2> (duis,8)\n2> (fermentum,10)\n2> (vehicula,5)\n2> (scelerisque,6)\n2> (quis,29)\n2> (vehicula,6)\n2> (duis,9)\n2> (et,25)\n2> (elit,17)\n2> (quis,30)\n2> (duis,10)\n2> (egestas,13)\n2> (commodo,11)\n2> (egestas,14)\n2> (ad,2)\n2> (tempor,4)\n2> (et,26)\n2> (nibh,10)\n2> (at,28)\n2> (euismod,10)\n2> (placerat,9)\n2> (lacus,13)\n2> (dictum,9)\n2> (lacus,14)\n2> (commodo,12)\n2> (aliquam,12)\n2> (aliquam,13)\n2> (placerat,10)\n2> (aliquam,14)\n2> (at,29)\n2> (lacus,15)\n2> (commodo,13)\n2> (vivamus,10)\n2> (at,30)\n2> (vivamus,11)\n2> (varius,8)\n2> (placerat,11)\n2> (nibh,11)\n2> (mattis,8)\n2> (mattis,9)\n2> (condimentum,10)\n2> (pulvinar,7)\n2> (vehicula,7)\n2> (et,27)\n2> (commodo,14)\n2> (tempor,5)\n2> (varius,9)\n2> (augue,12)\n2> (dictum,10)\n2> (euismod,11)\n2> (bibendum,8)\n2> (quis,31)\n2> (elit,18)\n2> (maximus,10)\n2> (et,28)\n2> (tempor,6)\n2> (scelerisque,7)\n2> (egestas,15)\n2> (nibh,12)\n2> (tempor,7)\n2> (euismod,12)\n2> (aliquam,15)\n2> (bibendum,9)\n2> (maximus,11)\n2> (lacus,16)\n2> (cursus,11)\n2> (at,31)\n2> (vestibulum,13)\n2> (elit,19)\n2> (vehicula,8)\n2> (lacus,17)\n2> (placerat,12)\n2> (euismod,13)\n2> (condimentum,11)\n2> (egestas,16)\n2> (at,32)\n2> (nibh,13)\n2> (euismod,14)\n2> (quis,32)\n2> (cursus,12)\n2> (cras,5)\n2> (tempor,8)\n2> (euismod,15)\n2> (condimentum,12)\n2> (at,33)\n2> (cursus,13)\n2> (at,34)\n2> (scelerisque,8)\n2> (placerat,13)\n2> (quis,33)\n2> (pulvinar,8)\n2> (euismod,16)\n2> (et,29)\n2> (egestas,17)\n2> (duis,11)\n2> (nibh,14)\n2> (condimentum,13)\n2> (elit,20)\n2> (mattis,10)\n2> (bibendum,10)\n2> (bibendum,11)\n2> (et,30)\n2> (augue,13)\n2> (vivamus,12)\n2> (et,31)\n2> (vivamus,13)\n2> (vestibulum,14)\n2> (vehicula,9)\n2> (mattis,11)\n2> (condimentum,14)\n2> (at,35)\n2> (et,32)\n2> (et,33)\n2> (egestas,18)\n2> (et,34)\n2> (vestibulum,15)\n2> (cras,6)\n2> (placerat,14)\n2> (cursus,14)\n2> (lacus,18)\n2> (lacus,19)\n2> (et,35)\n2> (varius,10)\n2> (ad,3)\n2> (vehicula,10)\n2> (scelerisque,9)\n2> (lacus,20)\n2> (maximus,12)\n2> (vestibulum,16)\n2> (et,36)\n2> (aliquam,16)\n2> (augue,14)\n2> (vehicula,11)\n2> (elit,21)\n2> (bibendum,12)\n2> (et,37)\n2> (vestibulum,17)\n2> (commodo,15)\n2> (aliquam,17)\n2> (augue,15)\n2> (mattis,12)\n2> (duis,12)\n2> (commodo,16)\n2> (duis,13)\n2> (vehicula,12)\n2> (et,38)\n2> (elit,22)\n2> (et,39)\n2> (commodo,17)\n2> (at,36)\n2> (tempus,7)\n2> (vehicula,13)\n2> (elit,23)\n2> (elit,24)\n2> (bibendum,13)\n2> (et,40)\n2> (aliquam,18)\n2> (nibh,15)\n2> (scelerisque,10)\n2> (dictum,11)\n2> (maximus,13)\n2> (quis,34)\n2> (vivamus,14)\n2> (dictum,12)\n2> (at,37)\n2> (condimentum,15)\n2> (duis,14)\n2> (vestibulum,18)\n2> (lacus,21)\n2> (quis,35)\n2> (egestas,19)\n2> (tempor,9)\n2> (vestibulum,19)\n2> (commodo,18)\n2> (augue,16)\n2> (commodo,19)\n2> (augue,17)\n2> (tempus,8)\n2> (euismod,17)\n2> (aliquam,19)\n2> (commodo,20)\n2> (placerat,15)\n2> (egestas,20)\n2> (mattis,13)\n2> (vivamus,15)\n2> (commodo,21)\n2> (euismod,18)\n2> (aliquam,20)\n2> (cursus,15)\n2> (lacus,22)\n2> (vivamus,16)\n2> (bibendum,14)\n2> (maximus,14)\n2> (aliquam,21)\n2> (vehicula,14)\n2> (quis,36)\n2> (varius,11)\n2> (placerat,16)\n2> (vestibulum,20)\n2> (pulvinar,9)\n2> (et,41)\n2> (elit,25)\n2> (vestibulum,21)\n2> (dictum,13)\n2> (et,42)\n2> (at,38)\n2> (cursus,16)\n2> (scelerisque,11)\n2> (at,39)\n2> (tempus,9)\n2> (fermentum,11)\n2> (et,43)\n2> (tempus,10)\n2> (condimentum,16)\n2> (mattis,14)\n2> (vivamus,17)\n2> (vehicula,15)\n2> (nibh,16)\n2> (tempor,10)\n2> (bibendum,15)\n2> (mattis,15)\n2> (euismod,19)\n2> (at,40)\n2> (varius,12)\n2> (quis,37)\n2> (vestibulum,22)\n2> (placerat,17)\n2> (placerat,18)\n2> (at,41)\n2> (augue,18)\n2> (vehicula,16)\n2> (et,44)\n2> (augue,19)\n2> (placerat,19)\n2> (quis,38)\n2> (maximus,15)\n2> (at,42)\n2> (at,43)\n2> (maximus,16)\n2> (pulvinar,10)\n2> (at,44)\n2> (et,45)\n2> (tempor,11)\n2> (varius,13)\n2> (commodo,22)\n2> (ad,4)\n2> (at,45)\n2> (vestibulum,23)\n2> (vehicula,17)\n2> (lacus,23)\n2> (augue,20)\n2> (commodo,23)\n2> (pulvinar,11)\n2> (vehicula,18)\n2> (tempus,11)\n2> (egestas,21)\n2> (mattis,16)\n2> (aliquam,22)\n2> (duis,15)\n2> (varius,14)\n2> (aliquam,23)\n2> (augue,21)\n2> (quis,39)\n2> (pulvinar,12)\n2> (commodo,24)\n2> (elit,26)\n2> (scelerisque,12)\n2> (vehicula,19)\n2> (fermentum,12)\n2> (augue,22)\n2> (varius,15)\n2> (fermentum,13)\n2> (et,46)\n2> (aliquam,24)\n2> (et,47)\n2> (condimentum,17)\n2> (dictum,14)\n2> (tempor,12)\n2> (quis,40)\n2> (bibendum,16)\n2> (quis,41)\n2> (cursus,17)\n2> (at,46)\n2> (quis,42)\n2> (dictum,15)\n2> (at,47)\n2> (vehicula,20)\n2> (commodo,25)\n2> (vivamus,18)\n2> (egestas,22)\n2> (euismod,20)\n2> (at,48)\n2> (augue,23)\n2> (pulvinar,13)\n2> (vivamus,19)\n2> (varius,16)\n2> (duis,16)\n2> (vestibulum,24)\n2> (et,48)\n2> (at,49)\n2> (vestibulum,25)\n2> (varius,17)\n2> (placerat,20)\n2> (vestibulum,26)\n2> (condimentum,18)\n2> (elit,27)\n2> (duis,17)\n2> (at,50)\n2> (egestas,23)\n2> (quis,43)\n2> (at,51)\n2> (placerat,21)\n2> (quis,44)\n2> (lacus,24)\n2> (et,49)\n2> (pulvinar,14)\n2> (quis,45)\n2> (euismod,21)\n2> (bibendum,17)\n2> (euismod,22)\n2> (duis,18)\n2> (lacus,25)\n2> (at,52)\n2> (vivamus,20)\n2> (commodo,26)\n2> (tempor,13)\n2> (bibendum,18)\n2> (maximus,17)\n2> (at,53)\n2> (nibh,17)\n2> (vivamus,21)\n2> (dictum,16)\n2> (vestibulum,27)\n2> (vestibulum,28)\n2> (et,50)\n2> (cras,7)\n2> (augue,24)\n2> (vivamus,22)\n2> (et,51)\n2> (lacus,26)\n2> (bibendum,19)\n2> (tempus,12)\n2> (et,52)\n2> (quis,46)\n2> (at,54)\n2> (vivamus,23)\n2> (augue,25)\n2> (bibendum,20)\n2> (fermentum,14)\n2> (egestas,24)\n2> (commodo,27)\n2> (mattis,17)\n2> (at,55)\n2> (et,53)\n2> (tempus,13)\n2> (quis,47)\n2> (cras,8)\n2> (tempus,14)\n2> (bibendum,21)\n2> (vestibulum,29)\n2> (euismod,23)\n2> (egestas,25)\n2> (quis,48)\n2> (at,56)\n2> (vivamus,24)\n2> (quis,49)\n2> (et,54)\n2> (ad,5)\n2> (varius,18)\n2> (vestibulum,30)\n2> (condimentum,19)\n2> (cras,9)\n2> (et,55)\n2> (tempor,14)\n2> (vivamus,25)\n2> (at,57)\n2> (et,56)\n2> (elit,28)\n2> (augue,26)\n2> (vivamus,26)\n2> (vehicula,21)\n2> (et,57)\n2> (et,58)\n2> (egestas,26)\n2> (egestas,27)\n2> (tempor,15)\n2> (quis,50)\n2> (euismod,24)\n2> (lacus,27)\n2> (varius,19)\n2> (euismod,25)\n2> (egestas,28)\n2> (fermentum,15)\n2> (elit,29)\n2> (elit,30)\n2> (lacus,28)\n2> (tempus,15)\n2> (at,58)\n2> (varius,20)\n2> (scelerisque,13)\n2> (et,59)\n2> (et,60)\n2> (et,61)\n2> (quis,51)\n2> (lacus,29)\n2> (mattis,18)\n2> (et,62)\n2> (fermentum,16)\n2> (quis,52)\n2> (tempor,16)\n2> (egestas,29)\n2> (elit,31)\n2> (at,59)\n2> (quis,53)\n2> (vehicula,22)\n2> (et,63)\n2> (quis,54)\n2> (tempor,17)\n2> (at,60)\n2> (at,61)\n2> (euismod,26)\n2> (bibendum,22)\n2> (scelerisque,14)\n2> (augue,27)\n2> (duis,19)\n2> (lacus,30)\n2> (aliquam,25)\n2> (cursus,18)\n2> (nibh,18)\n2> (at,62)\n2> (et,64)\n2> (quis,55)\n2> (lacus,31)\n2> (augue,28)\n2> (quis,56)\n2> (vestibulum,31)\n2> (nibh,19)\n2> (commodo,28)\n2> (vehicula,23)\n2> (mattis,19)\n2> (et,65)\n2> (vehicula,24)\n2> (vivamus,27)\n2> (euismod,27)\n2> (vestibulum,32)\n2> (euismod,28)\n2> (euismod,29)\n2> (at,63)\n2> (euismod,30)\n2> (egestas,30)\n2> (bibendum,23)\n2> (condimentum,20)\n2> (augue,29)\n2> (et,66)\n2> (tempor,18)\n2> (at,64)\n2> (aliquam,26)\n2> (lacus,32)\n2> (elit,32)\n2> (vestibulum,33)\n2> (duis,20)\n2> (nibh,20)\n2> (condimentum,21)\n2> (elit,33)\n2> (placerat,22)\n2> (condimentum,22)\n2> (tempor,19)\n2> (tempus,16)\n2> (et,67)\n2> (tempus,17)\n2> (egestas,31)\n2> (duis,21)\n2> (condimentum,23)\n2> (aliquam,27)\n2> (pulvinar,15)\n2> (vehicula,25)\n2> (at,65)\n2> (et,68)\n2> (commodo,29)\n2> (cras,10)\n2> (elit,34)\n2> (dictum,17)\n2> (elit,35)\n2> (elit,36)\n2> (scelerisque,15)\n2> (scelerisque,16)\n2> (scelerisque,17)\n2> (at,66)\n2> (maximus,18)\n2> (et,69)\n2> (cras,11)\n2> (dictum,18)\n2> (et,70)\n2> (scelerisque,18)\n2> (augue,30)\n2> (lacus,33)\n2> (egestas,32)\n2> (at,67)\n2> (dictum,19)\n2> (pulvinar,16)\n2> (augue,31)\n2> (quis,57)\n2> (et,71)\n2> (elit,37)\n2> (bibendum,24)\n2> (et,72)\n2> (at,68)\n2> (scelerisque,19)\n2> (euismod,31)\n2> (varius,21)\n2> (et,73)\n2> (et,74)\n2> (aliquam,28)\n2> (condimentum,24)\n2> (pulvinar,17)\n2> (egestas,33)\n2> (maximus,19)\n2> (vestibulum,34)\n2> (tempor,20)\n2> (bibendum,25)\n2> (elit,38)\n2> (tempus,18)\n2> (tempus,19)\n2> (et,75)\n2> (vivamus,28)\n2> (quis,58)\n2> (vivamus,29)\n2> (egestas,34)\n2> (duis,22)\n2> (quis,59)\n2> (placerat,23)\n2> (dictum,20)\n2> (egestas,35)\n2> (bibendum,26)\n2> (elit,39)\n2> (elit,40)\n2> (vehicula,26)\n2> (tempor,21)\n2> (vestibulum,35)\n2> (at,69)\n2> (elit,41)\n2> (tempor,22)\n2> (fermentum,17)\n2> (condimentum,25)\n2> (varius,22)\n2> (vivamus,30)\n2> (scelerisque,20)\n2> (cursus,19)\n2> (quis,60)\n2> (egestas,36)\n2> (quis,61)\n2> (quis,62)\n2> (dictum,21)\n2> (vehicula,27)\n2> (dictum,22)\n2> (nibh,21)\n2> (nibh,22)\n2> (dictum,23)\n2> (vestibulum,36)\n2> (et,76)\n2> (vestibulum,37)\n2> (placerat,24)\n2> (condimentum,26)\n2> (vivamus,31)\n2> (et,77)\n2> (cursus,20)\n2> (et,78)\n2> (et,79)\n2> (egestas,37)\n2> (maximus,20)\n2> (at,70)\n2> (maximus,21)\n2> (at,71)\n2> (tempor,23)\n2> (aliquam,29)\n2> (fermentum,18)\n2> (et,80)\n2> (varius,23)\n2> (et,81)\n2> (et,82)\n2> (egestas,38)\n2> (nibh,23)\n2> (fermentum,19)\n2> (scelerisque,21)\n2> (et,83)\n2> (et,84)\n2> (egestas,39)\n2> (fermentum,20)\n2> (augue,32)\n2> (vestibulum,38)\n2> (mattis,20)\n2> (elit,42)\n2> (duis,23)\n2> (duis,24)\n2> (at,72)\n2> (at,73)\n2> (vestibulum,39)\n2> (vehicula,28)\n2> (et,85)\n2> (et,86)\n2> (egestas,40)\n2> (tempus,20)\n2> (fermentum,21)\n2> (cursus,21)\n2> (dictum,24)\n2> (placerat,25)\n2> (at,74)\n2> (duis,25)\n2> (vehicula,29)\n2> (quis,63)\n2> (at,75)\n2> (euismod,32)\n2> (quis,64)\n2> (maximus,22)\n2> (lacus,34)\n2> (euismod,33)\n2> (at,76)\n2> (aliquam,30)\n2> (aliquam,31)\n2> (cursus,22)\n2> (vehicula,30)\n2> (tempus,21)\n2> (varius,24)\n2> (et,87)\n2> (aliquam,32)\n2> (et,88)\n2> (vivamus,32)\n2> (placerat,26)\n2> (euismod,34)\n2> (augue,33)\n2> (et,89)\n2> (commodo,30)\n2> (quis,65)\n2> (tempus,22)\n2> (tempus,23)\n2> (bibendum,27)\n2> (bibendum,28)\n2> (nibh,24)\n2> (condimentum,27)\n2> (condimentum,28)\n2> (et,90)\n2> (bibendum,29)\n2> (duis,26)\n2> (scelerisque,22)\n2> (vestibulum,40)\n2> (tempus,24)\n2> (vivamus,33)\n2> (cras,12)\n2> (scelerisque,23)\n2> (vehicula,31)\n2> (vestibulum,41)\n2> (elit,43)\n2> (fermentum,22)\n2> (et,91)\n2> (commodo,31)\n2> (bibendum,30)\n2> (varius,25)\n2> (elit,44)\n2> (aliquam,33)\n2> (fermentum,23)\n2> (pulvinar,18)\n2> (et,92)\n2> (vestibulum,42)\n2> (scelerisque,24)\n2> (varius,26)\n2> (maximus,23)\n2> (aliquam,34)\n2> (et,93)\n2> (tempor,24)\n2> (at,77)\n2> (at,78)\n2> (bibendum,31)\n2> (et,94)\n2> (dictum,25)\n2> (nibh,25)\n2> (egestas,41)\n2> (scelerisque,25)\n2> (aliquam,35)\n2> (vestibulum,43)\n2> (et,95)\n2> (placerat,27)\n2> (elit,45)\n2> (fermentum,24)\n2> (tempor,25)\n2> (placerat,28)\n2> (at,79)\n2> (vestibulum,44)\n2> (vehicula,32)\n2> (tempor,26)\n2> (dictum,26)\n2> (euismod,35)\n2> (aliquam,36)\n2> (nibh,26)\n2> (at,80)\n2> (egestas,42)\n2> (dictum,27)\n2> (at,81)\n2> (aliquam,37)\n2> (vivamus,34)\n2> (lacus,35)\n2> (commodo,32)\n2> (quis,66)\n2> (dictum,28)\n2> (condimentum,29)\n2> (lacus,36)\n2> (cursus,23)\n2> (tempus,25)\n2> (et,96)\n2> (placerat,29)\n2> (mattis,21)\n2> (nibh,27)\n2> (placerat,30)\n2> (et,97)\n2> (et,98)\n2> (egestas,43)\n2> (fermentum,25)\n2> (euismod,36)\n2> (mattis,22)\n2> (lacus,37)\n2> (euismod,37)\n2> (vehicula,33)\n2> (quis,67)\n2> (tempus,26)\n2> (fermentum,26)\n2> (nibh,28)\n2> (egestas,44)\n2> (bibendum,32)\n2> (vivamus,35)\n2> (varius,27)\n2> (vehicula,34)\n2> (varius,28)\n2> (bibendum,33)\n2> (scelerisque,26)\n2> (tempus,27)\n2> (elit,46)\n2> (at,82)\n2> (maximus,24)\n2> (pulvinar,19)\n2> (varius,29)\n2> (egestas,45)\n2> (quis,68)\n2> (fermentum,27)\n2> (et,99)\n2> (mattis,23)\n2> (condimentum,30)\n2> (dictum,29)\n2> (lacus,38)\n2> (et,100)\n2> (lacus,39)\n2> (euismod,38)\n2> (quis,69)\n2> (condimentum,31)\n2> (at,83)\n2> (aliquam,38)\n2> (augue,34)\n2> (at,84)\n2> (nibh,29)\n2> (quis,70)\n2> (commodo,33)\n2> (commodo,34)\n2> (aliquam,39)\n2> (euismod,39)\n2> (elit,47)\n2> (vivamus,36)\n2> (et,101)\n2> (varius,30)\n2> (lacus,40)\n2> (bibendum,34)\n2> (quis,71)\n2> (lacus,41)\n2> (et,102)\n2> (aliquam,40)\n2> (bibendum,35)\n2> (dictum,30)\n2> (augue,35)\n2> (vestibulum,45)\n2> (maximus,25)\n2> (vehicula,35)\n2> (quis,72)\n2> (bibendum,36)\n2> (aliquam,41)\n2> (vestibulum,46)\n2> (duis,27)\n2> (mattis,24)\n2> (bibendum,37)\n2> (et,103)\n2> (pulvinar,20)\n2> (lacus,42)\n2> (vivamus,37)\n2> (at,85)\n2> (quis,73)\n2> (tempor,27)\n2> (euismod,40)\n2> (placerat,31)\n2> (et,104)\n2> (et,105)\n2> (egestas,46)\n2> (vestibulum,47)\n2> (et,106)\n2> (lacus,43)\n2> (tempor,28)\n2> (egestas,47)\n2> (lacus,44)\n2> (mattis,25)\n2> (et,107)\n2> (quis,74)\n2> (et,108)\n2> (augue,36)\n2> (egestas,48)\n2> (aliquam,42)\n2> (nibh,30)\n2> (et,109)\n2> (et,110)\n2> (egestas,49)\n2> (tempor,29)\n2> (augue,37)\n2> (et,111)\n2> (vivamus,38)\n2> (aliquam,43)\n2> (lacus,45)\n2> (scelerisque,27)\n2> (aliquam,44)\n2> (tempus,28)\n2> (at,86)\n2> (vehicula,36)\n2> (vestibulum,48)\n2> (et,112)\n2> (vestibulum,49)\n2> (vestibulum,50)\n2> (et,113)\n2> (tempus,29)\n2> (lacus,46)\n2> (commodo,35)\n2> (vivamus,39)\n2> (lacus,47)\n2> (commodo,36)\n2> (pulvinar,21)\n2> (tempor,30)\n2> (aliquam,45)\n2> (et,114)\n2> (mattis,26)\n2> (egestas,50)\n2> (lacus,48)\n2> (cursus,24)\n2> (quis,75)\n2> (vehicula,37)\n2> (quis,76)\n2> (duis,28)\n2> (egestas,51)\n2> (maximus,26)\n2> (cras,13)\n2> (condimentum,32)\n2> (at,87)\n2> (tempus,30)\n2> (vehicula,38)\n2> (lacus,49)\n2> (placerat,32)\n2> (euismod,41)\n2> (nibh,31)\n2> (at,88)\n2> (nibh,32)\n2> (dictum,31)\n2> (quis,77)\n2> (nibh,33)\n2> (aliquam,46)\n2> (elit,48)\n2> (at,89)\n2> (maximus,27)\n2> (et,115)\n2> (at,90)\n2> (nibh,34)\n2> (tempus,31)\n2> (nibh,35)\n2> (dictum,32)\n2> (quis,78)\n5> (nulla,69)\n3> (lorem,42)\n5> (molestie,33)\n3> (dolor,47)\n5> (dapibus,34)\n3> (vitae,80)\n2> (elit,49)\n5> (id,93)\n3> (vitae,81)\n2> (nibh,36)\n5> (class,6)\n3> (volutpat,26)\n2> (euismod,42)\n3> (porta,20)\n2> (duis,29)\n3> (porta,21)\n2> (lacus,50)\n2> (ad,6)\n5> (aptent,6)\n2> (vivamus,40)\n3> (facilisis,31)\n5> (taciti,6)\n2> (at,91)\n5> (nostra,6)\n2> (quis,79)\n5> (molestie,34)\n2> (quis,80)\n2> (et,116)\n5> (habitant,11)\n3> (porta,22)\n5> (netus,11)\n2> (et,117)\n5> (malesuada,40)\n3> (pellentesque,67)\n5> (tortor,39)\n3> (pellentesque,68)\n5> (sagittis,30)\n3> (tristique,52)\n3> (pellentesque,69)\n5> (quam,47)\n2> (egestas,52)\n5> (eget,106)\n3> (non,86)\n5> (in,119)\n3> (nisi,45)\n5> (velit,43)\n5> (blandit,25)\n5> (pharetra,28)\n5> (etiam,20)\n5> (efficitur,28)\n5> (quam,48)\n5> (sagittis,31)\n5> (tortor,40)\n5> (luctus,41)\n5> (sollicitudin,41)\n5> (in,120)\n5> (in,121)\n5> (in,122)\n5> (nulla,70)\n5> (luctus,42)\n5> (molestie,35)\n3> (phasellus,22)\n5> (eget,107)\n3> (vitae,82)\n5> (velit,44)\n3> (phasellus,23)\n5> (in,123)\n3> (tristique,53)\n5> (id,94)\n3> (pellentesque,70)\n5> (sagittis,32)\n3> (phasellus,24)\n5> (velit,45)\n3> (consequat,33)\n5> (efficitur,29)\n3> (lorem,43)\n5> (orci,48)\n3> (pellentesque,71)\n5> (eget,108)\n3> (nisi,46)\n5> (in,124)\n3> (imperdiet,31)\n5> (nulla,71)\n3> (lorem,44)\n5> (nulla,72)\n3> (nisi,47)\n5> (in,125)\n6> (sit,99)\n6> (amet,99)\n6> (consectetur,27)\n6> (auctor,29)\n6> (sit,100)\n6> (amet,100)\n6> (consectetur,28)\n6> (sit,101)\n6> (amet,101)\n6> (erat,40)\n6> (urna,30)\n6> (proin,28)\n6> (faucibus,43)\n6> (tellus,37)\n6> (per,11)\n6> (per,12)\n6> (sed,135)\n6> (odio,50)\n6> (tellus,38)\n6> (justo,50)\n6> (sed,136)\n6> (sed,137)\n6> (sed,138)\n6> (tellus,39)\n6> (auctor,30)\n6> (proin,29)\n6> (tellus,40)\n6> (curabitur,27)\n6> (nam,23)\n6> (lobortis,34)\n6> (sed,139)\n6> (sit,102)\n6> (amet,102)\n6> (odio,51)\n6> (faucibus,44)\n6> (erat,41)\n6> (sed,140)\n6> (faucibus,45)\n6> (sed,141)\n6> (sit,103)\n6> (amet,103)\n6> (odio,52)\n6> (lectus,40)\n6> (sed,142)\n6> (erat,42)\n6> (viverra,31)\n6> (auctor,31)\n6> (curabitur,28)\n6> (faucibus,46)\n6> (feugiat,27)\n6> (auctor,32)\n6> (sed,143)\n6> (sit,104)\n6> (amet,104)\n6> (tellus,41)\n6> (lectus,41)\n6> (sed,144)\n6> (sed,145)\n6> (sit,105)\n6> (amet,105)\n6> (faucibus,47)\n6> (cubilia,5)\n6> (viverra,32)\n6> (nam,24)\n6> (urna,31)\n6> (urna,32)\n6> (sed,146)\n6> (odio,53)\n6> (sed,147)\n6> (consectetur,29)\n6> (sit,106)\n6> (amet,106)\n6> (urna,33)\n6> (urna,34)\n6> (sit,107)\n6> (amet,107)\n6> (sed,148)\n6> (erat,43)\n6> (sed,149)\n6> (urna,35)\n6> (odio,54)\n6> (erat,44)\n6> (viverra,33)\n6> (tellus,42)\n6> (odio,55)\n6> (viverra,34)\n6> (sed,150)\n6> (feugiat,28)\n6> (sed,151)\n6> (auctor,33)\n6> (urna,36)\n6> (urna,37)\n6> (sit,108)\n6> (amet,108)\n6> (erat,45)\n6> (sed,152)\n6> (auctor,34)\n6> (proin,30)\n6> (lectus,42)\n6> (tellus,43)\n6> (urna,38)\n6> (per,13)\n6> (per,14)\n6> (sit,109)\n6> (amet,109)\n6> (nam,25)\n6> (consectetur,30)\n6> (sit,110)\n6> (amet,110)\n6> (erat,46)\n6> (laoreet,22)\n6> (lectus,43)\n6> (odio,56)\n6> (sit,111)\n6> (amet,111)\n6> (sed,153)\n6> (justo,51)\n6> (per,15)\n6> (per,16)\n6> (erat,47)\n6> (odio,57)\n6> (faucibus,48)\n6> (curabitur,29)\n6> (per,17)\n6> (per,18)\n6> (sit,112)\n6> (amet,112)\n6> (faucibus,49)\n6> (odio,58)\n6> (curabitur,30)\n6> (faucibus,50)\n6> (viverra,35)\n6> (odio,59)\n6> (sit,113)\n6> (amet,113)\n6> (sed,154)\n6> (urna,39)\n6> (odio,60)\n6> (auctor,35)\n6> (feugiat,29)\n6> (lectus,44)\n6> (tellus,44)\n6> (sed,155)\n6> (justo,52)\n6> (justo,53)\n6> (sed,156)\n6> (feugiat,30)\n6> (justo,54)\n6> (faucibus,51)\n6> (cubilia,6)\n6> (integer,22)\n6> (curabitur,31)\n6> (sed,157)\n6> (consectetur,31)\n6> (tellus,45)\n6> (odio,61)\n6> (viverra,36)\n6> (parturient,5)\n6> (sed,158)\n6> (lectus,45)\n6> (auctor,36)\n6> (lobortis,35)\n6> (curabitur,32)\n6> (lobortis,36)\n6> (sed,159)\n6> (faucibus,52)\n6> (lectus,46)\n6> (consectetur,32)\n6> (odio,62)\n6> (urna,40)\n6> (proin,31)\n6> (sed,160)\n6> (consectetur,33)\n6> (tellus,46)\n6> (tellus,47)\n6> (lobortis,37)\n6> (nam,26)\n6> (erat,48)\n6> (auctor,37)\n6> (justo,55)\n6> (sed,161)\n6> (faucibus,53)\n6> (erat,49)\n6> (justo,56)\n6> (laoreet,23)\n6> (sed,162)\n6> (sit,114)\n6> (amet,114)\n6> (sed,163)\n6> (lectus,47)\n6> (integer,23)\n6> (lobortis,38)\n6> (curabitur,33)\n6> (tellus,48)\n6> (sit,115)\n6> (amet,115)\n6> (consectetur,34)\n6> (sit,116)\n6> (amet,116)\n6> (consectetur,35)\n6> (proin,32)\n6> (erat,50)\n6> (faucibus,54)\n6> (curabitur,34)\n6> (curabitur,35)\n6> (sed,164)\n6> (erat,51)\n6> (odio,63)\n6> (nam,27)\n6> (sed,165)\n6> (odio,64)\n6> (urna,41)\n6> (feugiat,31)\n6> (odio,65)\n6> (sit,117)\n6> (amet,117)\n6> (proin,33)\n6> (erat,52)\n6> (auctor,38)\n6> (nam,28)\n6> (odio,66)\n6> (lectus,48)\n6> (integer,24)\n6> (integer,25)\n6> (lobortis,39)\n6> (sit,118)\n6> (amet,118)\n6> (lobortis,40)\n6> (erat,53)\n6> (proin,34)\n6> (erat,54)\n6> (proin,35)\n6> (erat,55)\n6> (sit,119)\n6> (amet,119)\n6> (sit,120)\n6> (amet,120)\n6> (integer,26)\n6> (faucibus,55)\n6> (sed,166)\n6> (justo,57)\n6> (nam,29)\n6> (erat,56)\n6> (sed,167)\n6> (lectus,49)\n6> (auctor,39)\n6> (lectus,50)\n6> (sit,121)\n6> (amet,121)\n6> (consectetur,36)\n6> (laoreet,24)\n6> (consectetur,37)\n6> (sed,168)\n6> (sed,169)\n6> (faucibus,56)\n6> (sed,170)\n6> (nam,30)\n6> (proin,36)\n6> (consectetur,38)\n6> (parturient,6)\n6> (sed,171)\n6> (nam,31)\n6> (auctor,40)\n6> (sit,122)\n6> (amet,122)\n6> (sed,172)\n6> (auctor,41)\n6> (erat,57)\n6> (viverra,37)\n6> (lobortis,41)\n6> (justo,58)\n6> (odio,67)\n6> (sed,173)\n6> (tellus,49)\n6> (nam,32)\n2> (cursus,25)\n2> (et,118)\n2> (cras,14)\n2> (mattis,27)\n2> (pulvinar,22)\n2> (tempus,32)\n2> (nibh,37)\n2> (commodo,37)\n2> (commodo,38)\n2> (placerat,33)\n2> (nibh,38)\n2> (vestibulum,51)\n2> (commodo,39)\n1> (ipsum,69)\n2> (tempor,31)\n2> (cursus,26)\n1> (adipiscing,4)\n2> (et,119)\n1> (arcu,46)\n2> (tempus,33)\n1> (enim,39)\n4> (ex,43)\n2> (condimentum,33)\n1> (finibus,35)\n2> (placerat,34)\n4> (donec,57)\n2> (tempus,34)\n4> (felis,45)\n2> (vehicula,39)\n1> (eleifend,27)\n2> (lacus,51)\n1> (sociosqu,6)\n2> (cras,15)\n4> (diam,42)\n5> (velit,46)\n2> (at,92)\n4> (ullamcorper,30)\n4> (a,90)\n5> (in,126)\n4> (litora,6)\n5> (sollicitudin,42)\n4> (torquent,6)\n5> (nisl,42)\n4> (conubia,6)\n5> (sollicitudin,43)\n4> (ante,43)\n5> (id,95)\n2> (et,120)\n5> (sollicitudin,44)\n2> (nibh,39)\n5> (blandit,26)\n2> (vestibulum,52)\n5> (nisl,43)\n3> (purus,35)\n2> (condimentum,34)\n5> (orci,49)\n5> (in,127)\n2> (vestibulum,53)\n5> (orci,50)\n2> (commodo,40)\n3> (ligula,39)\n2> (fermentum,28)\n3> (vitae,83)\n2> (aliquam,47)\n2> (vehicula,40)\n2> (at,93)\n2> (lacus,52)\n2> (duis,30)\n2> (vestibulum,54)\n2> (bibendum,38)\n3> (imperdiet,32)\n2> (cras,16)\n3> (purus,36)\n2> (egestas,53)\n4> (eros,44)\n3> (vitae,84)\n2> (scelerisque,28)\n4> (ante,44)\n2> (maximus,28)\n4> (vulputate,32)\n2> (tempus,35)\n4> (mauris,85)\n2> (vestibulum,55)\n4> (ullamcorper,31)\n2> (scelerisque,29)\n1> (inceptos,6)\n2> (augue,38)\n1> (himenaeos,6)\n1> (nunc,74)\n2> (egestas,54)\n2> (et,121)\n2> (augue,39)\n3> (ornare,26)\n2> (et,122)\n2> (scelerisque,30)\n2> (quis,81)\n3> (purus,37)\n2> (tempus,36)\n3> (lorem,45)\n2> (fermentum,29)\n3> (vitae,85)\n2> (vivamus,41)\n3> (ornare,27)\n2> (dictum,33)\n3> (nisi,48)\n5> (luctus,43)\n3> (ligula,40)\n2> (et,123)\n2> (vehicula,41)\n5> (etiam,21)\n3> (pellentesque,72)\n5> (velit,47)\n3> (vitae,86)\n2> (scelerisque,31)\n5> (etiam,22)\n2> (vestibulum,56)\n3> (non,87)\n5> (lacinia,25)\n3> (ligula,41)\n2> (et,124)\n3> (metus,35)"},{"type":"HTML","data":"<div class=\"result-alert alert-warning\" role=\"alert\"><button type=\"button\" class=\"close\" data-dismiss=\"alert\" aria-label=\"Close\"><span aria-hidden=\"true\">&times;</span></button><strong>Output is truncated</strong> to 102400 bytes. Learn more about <strong>ZEPPELIN_INTERPRETER_OUTPUT_LIMIT</strong></div>"}]},"apps":[],"progressUpdateIntervalMs":500,"jobName":"paragraph_1583778752196_583043112","id":"paragraph_1563960218317_493499111","dateCreated":"2020-03-09T18:32:32+0000","dateStarted":"2020-03-13T13:37:41+0000","dateFinished":"2020-03-13T13:37:41+0000","status":"FINISHED","$$hashKey":"object:193"},{"text":"%md\n### We're done! The entire java program will look like:","user":"anonymous","dateUpdated":"2020-03-09T18:32:32+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"runOnSelectionChange":true,"title":false,"checkEmpty":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h3>We&rsquo;re done! The entire java program will look like:</h3>\n</div>"}]},"apps":[],"progressUpdateIntervalMs":500,"jobName":"paragraph_1583778752197_986047436","id":"paragraph_1563957658331_610328276","dateCreated":"2020-03-09T18:32:32+0000","status":"READY","$$hashKey":"object:194"},{"text":"%java\n\nimport org.apache.flink.api.common.functions.FlatMapFunction;\nimport org.apache.flink.api.java.tuple.Tuple2;\nimport org.apache.flink.api.java.utils.ParameterTool;\nimport org.apache.flink.streaming.api.datastream.DataStream;\nimport org.apache.flink.streaming.api.environment.StreamExecutionEnvironment;\nimport org.apache.flink.util.Collector;\n\nimport java.util.Arrays;\n\npublic class StreamingWordCount {\n\n    public static void main(String[] args) throws Exception {\n    \n        //1. Set up the execution environment\n\t\tfinal StreamExecutionEnvironment env = StreamExecutionEnvironment.getExecutionEnvironment();\n        \n        //2. Read input text file\n        DataStream<String> text = env.readTextFile(\"./data/batch-exercise-1-loremipsup.txt\");\n        \n        //4. Word Count\n\t\tDataStream<Tuple2<String, Integer>> counts = text\n\t\t\t// split up the lines in pairs (2-tuples) containing: (word,1)\n\t\t\t.flatMap(new Tokenizer())\n\t\t\t// group by the tuple field \"0\" and sum up tuple field \"1\"\n\t\t\t.keyBy(0).sum(1);   \n        \n        //5. Execute and print results            \n        counts.print();\n        \n        //6. execute program\n\t\tenv.execute(\"Streaming WordCount\");\n    }\n\n\t// *************************************************************************\n\t// USER FUNCTIONS\n\t// *************************************************************************\n\n\t/**\n\t * 3. Implements the string tokenizer that splits sentences into words as a\n\t * user-defined FlatMapFunction. The function takes a line (String) and\n\t * splits it into multiple pairs in the form of \"(word,1)\" ({@code Tuple2<String,\n\t * Integer>}).\n\t */\n\tpublic static final class Tokenizer implements FlatMapFunction<String, Tuple2<String, Integer>> {\n\n\t\t@Override\n\t\tpublic void flatMap(String value, Collector<Tuple2<String, Integer>> out) {\n\t\t\t// normalize and split the line\n\t\t\tString[] tokens = value.toLowerCase().split(\"\\\\W+\");\n\t\t\t\n\t\t\t/* Original code\n            // emit the pairs\n            for (String token : tokens) {\n                if (token.length() > 0) {\n                    out.collect(new Tuple2<>(token, 1));\n                }\n            }\n            */\n\n            //The functionnal way!\n            Arrays.stream(tokens)\n              .filter(token -> token.length() > 0)\n              .forEach(token -> out.collect(new Tuple2<>(token, 1)));\n\t\t}\n\t}\n}","user":"anonymous","dateUpdated":"2020-03-13T13:38:42+0000","config":{"editorSetting":{"language":"java","editOnDblClick":false},"colWidth":12,"editorMode":"ace/mode/java","fontSize":9,"runOnSelectionChange":true,"title":false,"checkEmpty":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"2> (aliquam,1)\n2> (pulvinar,1)\n2> (vivamus,1)\n2> (vestibulum,1)\n2> (mattis,1)\n2> (cursus,1)\n2> (maximus,1)\n2> (placerat,1)\n2> (elit,1)\n2> (fermentum,1)\n2> (cursus,2)\n2> (augue,1)\n2> (at,1)\n2> (vivamus,2)\n2> (condimentum,1)\n2> (euismod,1)\n2> (duis,1)\n2> (scelerisque,1)\n2> (nibh,1)\n2> (dictum,1)\n2> (commodo,1)\n2> (quis,1)\n2> (lacus,1)\n2> (euismod,2)\n2> (dictum,2)\n2> (vivamus,3)\n2> (aliquam,2)\n2> (quis,2)\n2> (fermentum,2)\n2> (mattis,2)\n2> (maximus,2)\n2> (cursus,3)\n2> (at,2)\n2> (maximus,3)\n2> (tempus,1)\n2> (varius,1)\n2> (et,1)\n2> (aliquam,3)\n2> (euismod,3)\n2> (egestas,1)\n2> (augue,2)\n2> (elit,2)\n2> (bibendum,1)\n2> (aliquam,4)\n2> (at,3)\n2> (dictum,3)\n2> (commodo,2)\n2> (scelerisque,2)\n2> (euismod,4)\n2> (maximus,4)\n2> (condimentum,2)\n2> (quis,3)\n2> (tempus,2)\n2> (egestas,2)\n2> (et,2)\n2> (et,3)\n2> (tempus,3)\n2> (quis,4)\n2> (mattis,3)\n2> (egestas,3)\n2> (dictum,4)\n2> (tempor,1)\n2> (at,4)\n2> (nibh,2)\n2> (at,5)\n2> (elit,3)\n2> (duis,2)\n2> (at,6)\n2> (lacus,2)\n2> (et,4)\n2> (lacus,3)\n2> (maximus,5)\n2> (at,7)\n2> (at,8)\n2> (vestibulum,2)\n2> (quis,5)\n2> (placerat,2)\n2> (euismod,5)\n2> (et,5)\n2> (quis,6)\n2> (at,9)\n2> (bibendum,2)\n2> (vivamus,4)\n2> (lacus,4)\n2> (placerat,3)\n2> (tempor,2)\n2> (commodo,3)\n2> (augue,3)\n2> (lacus,5)\n2> (dictum,5)\n2> (fermentum,3)\n2> (egestas,4)\n2> (at,10)\n2> (quis,7)\n2> (elit,4)\n2> (lacus,6)\n2> (egestas,5)\n2> (fermentum,4)\n2> (condimentum,3)\n2> (elit,5)\n2> (vivamus,5)\n2> (augue,4)\n2> (fermentum,5)\n2> (maximus,6)\n2> (quis,8)\n2> (pulvinar,2)\n2> (augue,5)\n2> (elit,6)\n2> (at,11)\n2> (scelerisque,3)\n2> (varius,2)\n2> (vivamus,6)\n2> (vestibulum,3)\n2> (placerat,4)\n2> (maximus,7)\n2> (quis,9)\n2> (lacus,7)\n2> (elit,7)\n2> (egestas,6)\n2> (quis,10)\n2> (vehicula,1)\n2> (et,6)\n2> (at,12)\n2> (bibendum,3)\n2> (egestas,7)\n2> (et,7)\n2> (et,8)\n2> (egestas,8)\n2> (commodo,4)\n2> (lacus,8)\n2> (et,9)\n2> (duis,3)\n2> (elit,8)\n2> (cursus,4)\n2> (tempus,4)\n2> (varius,3)\n2> (et,10)\n2> (cursus,5)\n2> (elit,9)\n2> (condimentum,4)\n2> (augue,6)\n2> (et,11)\n2> (aliquam,5)\n2> (elit,10)\n2> (quis,11)\n2> (nibh,3)\n2> (aliquam,6)\n2> (commodo,5)\n2> (condimentum,5)\n2> (duis,4)\n2> (condimentum,6)\n2> (quis,12)\n2> (nibh,4)\n2> (aliquam,7)\n2> (bibendum,4)\n2> (maximus,8)\n2> (placerat,5)\n2> (dictum,6)\n2> (at,13)\n2> (augue,7)\n2> (mattis,4)\n2> (nibh,5)\n2> (fermentum,6)\n2> (quis,13)\n2> (et,12)\n2> (vivamus,7)\n2> (et,13)\n2> (placerat,6)\n2> (elit,11)\n2> (vestibulum,4)\n2> (at,14)\n2> (at,15)\n2> (cras,1)\n2> (vestibulum,5)\n2> (at,16)\n2> (commodo,6)\n2> (augue,8)\n2> (vestibulum,6)\n2> (quis,14)\n2> (pulvinar,3)\n2> (aliquam,8)\n2> (fermentum,7)\n2> (egestas,9)\n2> (bibendum,5)\n2> (pulvinar,4)\n2> (euismod,6)\n2> (duis,5)\n2> (et,14)\n2> (augue,9)\n2> (maximus,9)\n2> (et,15)\n2> (fermentum,8)\n2> (elit,12)\n2> (placerat,7)\n2> (tempus,5)\n2> (quis,15)\n2> (at,17)\n2> (cras,2)\n2> (vestibulum,7)\n2> (commodo,7)\n2> (at,18)\n2> (scelerisque,4)\n2> (cursus,6)\n2> (at,19)\n2> (vivamus,8)\n2> (quis,16)\n2> (condimentum,7)\n2> (varius,4)\n2> (at,20)\n2> (duis,6)\n2> (at,21)\n2> (quis,17)\n2> (mattis,5)\n2> (vestibulum,8)\n2> (nibh,6)\n2> (duis,7)\n2> (augue,10)\n2> (aliquam,9)\n2> (aliquam,10)\n2> (vestibulum,9)\n2> (quis,18)\n2> (commodo,8)\n2> (egestas,10)\n2> (pulvinar,5)\n2> (et,16)\n2> (placerat,8)\n2> (elit,13)\n2> (vehicula,2)\n2> (varius,5)\n2> (nibh,7)\n2> (dictum,7)\n2> (varius,6)\n2> (cras,3)\n2> (vehicula,3)\n2> (nibh,8)\n2> (et,17)\n2> (lacus,9)\n2> (et,18)\n2> (cursus,7)\n2> (quis,19)\n2> (augue,11)\n2> (cras,4)\n2> (at,22)\n2> (dictum,8)\n2> (vestibulum,10)\n2> (cursus,8)\n2> (quis,20)\n2> (quis,21)\n2> (scelerisque,5)\n2> (egestas,11)\n2> (et,19)\n2> (quis,22)\n2> (vestibulum,11)\n2> (mattis,6)\n2> (lacus,10)\n2> (aliquam,11)\n2> (quis,23)\n2> (varius,7)\n2> (et,20)\n2> (et,21)\n2> (vivamus,9)\n2> (cursus,9)\n2> (elit,14)\n2> (at,23)\n2> (nibh,9)\n2> (fermentum,9)\n2> (bibendum,6)\n2> (ad,1)\n2> (lacus,11)\n2> (tempus,6)\n2> (commodo,9)\n2> (at,24)\n2> (condimentum,8)\n2> (elit,15)\n2> (at,25)\n2> (vehicula,4)\n2> (at,26)\n2> (pulvinar,6)\n2> (quis,24)\n2> (et,22)\n2> (elit,16)\n2> (tempor,3)\n2> (quis,25)\n2> (mattis,7)\n2> (lacus,12)\n2> (euismod,7)\n2> (quis,26)\n2> (at,27)\n2> (quis,27)\n2> (cursus,10)\n2> (condimentum,9)\n2> (quis,28)\n2> (commodo,10)\n2> (euismod,8)\n2> (et,23)\n2> (et,24)\n2> (egestas,12)\n2> (euismod,9)\n2> (bibendum,7)\n2> (vestibulum,12)\n2> (duis,8)\n2> (fermentum,10)\n2> (vehicula,5)\n2> (scelerisque,6)\n2> (quis,29)\n2> (vehicula,6)\n2> (duis,9)\n2> (et,25)\n2> (elit,17)\n2> (quis,30)\n2> (duis,10)\n2> (egestas,13)\n2> (commodo,11)\n2> (egestas,14)\n2> (ad,2)\n2> (tempor,4)\n2> (et,26)\n2> (nibh,10)\n2> (at,28)\n2> (euismod,10)\n2> (placerat,9)\n2> (lacus,13)\n2> (dictum,9)\n2> (lacus,14)\n2> (commodo,12)\n2> (aliquam,12)\n2> (aliquam,13)\n2> (placerat,10)\n2> (aliquam,14)\n2> (at,29)\n2> (lacus,15)\n2> (commodo,13)\n2> (vivamus,10)\n2> (at,30)\n2> (vivamus,11)\n2> (varius,8)\n2> (placerat,11)\n2> (nibh,11)\n2> (mattis,8)\n2> (mattis,9)\n2> (condimentum,10)\n2> (pulvinar,7)\n2> (vehicula,7)\n2> (et,27)\n2> (commodo,14)\n2> (tempor,5)\n2> (varius,9)\n2> (augue,12)\n2> (dictum,10)\n2> (euismod,11)\n2> (bibendum,8)\n2> (quis,31)\n2> (elit,18)\n2> (maximus,10)\n2> (et,28)\n2> (tempor,6)\n2> (scelerisque,7)\n2> (egestas,15)\n2> (nibh,12)\n2> (tempor,7)\n2> (euismod,12)\n2> (aliquam,15)\n2> (bibendum,9)\n2> (maximus,11)\n2> (lacus,16)\n2> (cursus,11)\n2> (at,31)\n2> (vestibulum,13)\n2> (elit,19)\n2> (vehicula,8)\n2> (lacus,17)\n2> (placerat,12)\n2> (euismod,13)\n2> (condimentum,11)\n2> (egestas,16)\n2> (at,32)\n2> (nibh,13)\n2> (euismod,14)\n2> (quis,32)\n2> (cursus,12)\n2> (cras,5)\n2> (tempor,8)\n2> (euismod,15)\n2> (condimentum,12)\n2> (at,33)\n2> (cursus,13)\n2> (at,34)\n2> (scelerisque,8)\n2> (placerat,13)\n2> (quis,33)\n2> (pulvinar,8)\n2> (euismod,16)\n2> (et,29)\n2> (egestas,17)\n2> (duis,11)\n2> (condimentum,13)\n2> (aliquam,16)\n2> (pulvinar,9)\n2> (vehicula,9)\n2> (at,35)\n2> (et,30)\n2> (commodo,15)\n2> (cras,6)\n2> (elit,20)\n2> (dictum,11)\n2> (elit,21)\n2> (elit,22)\n2> (scelerisque,9)\n2> (scelerisque,10)\n2> (scelerisque,11)\n2> (at,36)\n2> (maximus,12)\n2> (et,31)\n2> (cras,7)\n2> (dictum,12)\n2> (et,32)\n2> (scelerisque,12)\n2> (augue,13)\n2> (lacus,18)\n2> (egestas,18)\n2> (at,37)\n2> (dictum,13)\n2> (pulvinar,10)\n2> (augue,14)\n2> (quis,34)\n2> (et,33)\n2> (elit,23)\n2> (bibendum,10)\n2> (et,34)\n2> (at,38)\n2> (scelerisque,13)\n2> (euismod,17)\n2> (varius,10)\n2> (et,35)\n2> (et,36)\n2> (aliquam,17)\n2> (condimentum,14)\n2> (pulvinar,11)\n2> (egestas,19)\n2> (maximus,13)\n2> (vestibulum,14)\n2> (tempor,9)\n2> (bibendum,11)\n2> (elit,24)\n2> (tempus,7)\n2> (tempus,8)\n2> (et,37)\n2> (vivamus,12)\n2> (quis,35)\n2> (vivamus,13)\n2> (egestas,20)\n2> (duis,12)\n2> (quis,36)\n2> (placerat,14)\n2> (dictum,14)\n2> (egestas,21)\n2> (bibendum,12)\n2> (elit,25)\n2> (elit,26)\n2> (vehicula,10)\n2> (tempor,10)\n2> (vestibulum,15)\n2> (at,39)\n2> (elit,27)\n2> (tempor,11)\n2> (fermentum,11)\n2> (condimentum,15)\n2> (varius,11)\n2> (vivamus,14)\n2> (scelerisque,14)\n2> (cursus,14)\n2> (quis,37)\n2> (egestas,22)\n2> (quis,38)\n2> (quis,39)\n2> (dictum,15)\n2> (vehicula,11)\n2> (dictum,16)\n2> (nibh,14)\n2> (nibh,15)\n2> (dictum,17)\n2> (vestibulum,16)\n2> (et,38)\n2> (vestibulum,17)\n2> (placerat,15)\n2> (condimentum,16)\n2> (vivamus,15)\n2> (et,39)\n2> (cursus,15)\n2> (et,40)\n2> (et,41)\n2> (egestas,23)\n2> (maximus,14)\n2> (at,40)\n2> (maximus,15)\n2> (at,41)\n2> (tempor,12)\n2> (aliquam,18)\n2> (fermentum,12)\n2> (et,42)\n2> (varius,12)\n2> (et,43)\n2> (et,44)\n2> (egestas,24)\n2> (nibh,16)\n2> (fermentum,13)\n2> (scelerisque,15)\n2> (et,45)\n2> (et,46)\n2> (egestas,25)\n2> (fermentum,14)\n2> (augue,15)\n2> (vestibulum,18)\n2> (mattis,10)\n2> (elit,28)\n2> (duis,13)\n2> (duis,14)\n2> (at,42)\n2> (at,43)\n2> (vestibulum,19)\n2> (vehicula,12)\n2> (et,47)\n2> (et,48)\n2> (egestas,26)\n2> (tempus,9)\n2> (fermentum,15)\n2> (cursus,16)\n2> (dictum,18)\n2> (placerat,16)\n2> (at,44)\n2> (duis,15)\n2> (vehicula,13)\n2> (quis,40)\n2> (at,45)\n2> (euismod,18)\n2> (quis,41)\n2> (maximus,16)\n2> (lacus,19)\n2> (euismod,19)\n2> (at,46)\n2> (aliquam,19)\n2> (aliquam,20)\n2> (cursus,17)\n2> (vehicula,14)\n2> (tempus,10)\n2> (varius,13)\n2> (et,49)\n2> (aliquam,21)\n2> (et,50)\n2> (vivamus,16)\n2> (placerat,17)\n2> (euismod,20)\n2> (augue,16)\n2> (et,51)\n2> (commodo,16)\n2> (quis,42)\n2> (tempus,11)\n2> (tempus,12)\n2> (bibendum,13)\n2> (bibendum,14)\n2> (nibh,17)\n2> (condimentum,17)\n2> (condimentum,18)\n2> (et,52)\n2> (bibendum,15)\n2> (duis,16)\n2> (scelerisque,16)\n2> (vestibulum,20)\n2> (tempus,13)\n2> (vivamus,17)\n2> (cras,8)\n2> (scelerisque,17)\n2> (vehicula,15)\n2> (vestibulum,21)\n2> (elit,29)\n2> (fermentum,16)\n2> (et,53)\n2> (commodo,17)\n2> (bibendum,16)\n2> (varius,14)\n2> (elit,30)\n2> (aliquam,22)\n2> (fermentum,17)\n2> (pulvinar,12)\n2> (et,54)\n2> (vestibulum,22)\n2> (scelerisque,18)\n2> (varius,15)\n2> (maximus,17)\n2> (aliquam,23)\n2> (et,55)\n2> (tempor,13)\n2> (at,47)\n2> (at,48)\n2> (bibendum,17)\n2> (et,56)\n2> (dictum,19)\n2> (nibh,18)\n2> (egestas,27)\n2> (scelerisque,19)\n2> (aliquam,24)\n2> (vestibulum,23)\n2> (et,57)\n2> (placerat,18)\n2> (elit,31)\n2> (fermentum,18)\n2> (tempor,14)\n2> (placerat,19)\n2> (at,49)\n2> (vestibulum,24)\n2> (vehicula,16)\n2> (tempor,15)\n2> (dictum,20)\n2> (euismod,21)\n2> (aliquam,25)\n2> (nibh,19)\n2> (at,50)\n2> (egestas,28)\n2> (dictum,21)\n2> (at,51)\n2> (aliquam,26)\n2> (vivamus,18)\n2> (lacus,20)\n2> (commodo,18)\n2> (quis,43)\n2> (cursus,18)\n2> (cursus,19)\n2> (euismod,22)\n2> (pulvinar,13)\n2> (duis,17)\n2> (euismod,23)\n2> (aliquam,27)\n2> (augue,17)\n2> (cras,9)\n2> (cursus,20)\n2> (et,58)\n2> (commodo,19)\n2> (vehicula,17)\n2> (aliquam,28)\n2> (vestibulum,25)\n2> (vestibulum,26)\n2> (vehicula,18)\n2> (duis,18)\n2> (condimentum,19)\n2> (scelerisque,20)\n2> (vehicula,19)\n2> (aliquam,29)\n2> (elit,32)\n2> (tempus,14)\n2> (lacus,21)\n2> (nibh,20)\n2> (ad,3)\n2> (cursus,21)\n2> (maximus,18)\n2> (scelerisque,21)\n2> (augue,18)\n2> (pulvinar,14)\n2> (maximus,19)\n2> (fermentum,19)\n2> (nibh,21)\n2> (cursus,22)\n2> (mattis,11)\n2> (lacus,22)\n2> (elit,33)\n2> (euismod,24)\n2> (commodo,20)\n2> (et,59)\n2> (condimentum,20)\n2> (quis,44)\n2> (fermentum,20)\n2> (pulvinar,15)\n2> (commodo,21)\n2> (et,60)\n2> (mattis,12)\n2> (maximus,20)\n2> (augue,19)\n2> (egestas,29)\n2> (bibendum,18)\n2> (nibh,22)\n2> (quis,45)\n2> (egestas,30)\n2> (quis,46)\n2> (euismod,25)\n2> (elit,34)\n2> (elit,35)\n2> (vestibulum,27)\n2> (commodo,22)\n2> (vestibulum,28)\n2> (fermentum,21)\n2> (tempor,16)\n2> (tempus,15)\n2> (placerat,20)\n2> (elit,36)\n2> (varius,16)\n2> (vehicula,20)\n2> (at,52)\n2> (bibendum,19)\n2> (cras,10)\n2> (cursus,23)\n2> (tempus,16)\n2> (nibh,23)\n2> (bibendum,20)\n2> (augue,20)\n2> (et,61)\n2> (lacus,23)\n2> (duis,19)\n2> (quis,47)\n2> (maximus,21)\n2> (vestibulum,29)\n2> (tempus,17)\n2> (bibendum,21)\n2> (quis,48)\n2> (vestibulum,30)\n2> (quis,49)\n2> (elit,37)\n2> (condimentum,21)\n2> (elit,38)\n2> (mattis,13)\n2> (aliquam,30)\n2> (dictum,22)\n2> (et,62)\n2> (at,53)\n2> (scelerisque,22)\n2> (condimentum,22)\n2> (et,63)\n2> (quis,50)\n2> (cras,11)\n2> (varius,17)\n2> (nibh,24)\n2> (egestas,31)\n2> (vestibulum,31)\n2> (scelerisque,23)\n2> (fermentum,22)\n2> (bibendum,22)\n2> (bibendum,23)\n2> (commodo,23)\n2> (vehicula,21)\n2> (egestas,32)\n2> (scelerisque,24)\n2> (at,54)\n2> (quis,51)\n2> (elit,39)\n2> (cursus,24)\n2> (tempor,17)\n2> (maximus,22)\n2> (lacus,24)\n2> (tempor,18)\n2> (elit,40)\n2> (aliquam,31)\n2> (placerat,21)\n2> (aliquam,32)\n2> (augue,21)\n2> (mattis,14)\n2> (fermentum,23)\n2> (vehicula,22)\n2> (fermentum,24)\n2> (et,64)\n2> (varius,18)\n2> (condimentum,23)\n2> (vestibulum,32)\n2> (et,65)\n2> (quis,52)\n2> (lacus,25)\n2> (aliquam,33)\n2> (at,55)\n2> (vivamus,19)\n2> (tempus,18)\n2> (quis,53)\n2> (aliquam,34)\n2> (dictum,23)\n2> (varius,19)\n2> (augue,22)\n2> (vehicula,23)\n2> (et,66)\n2> (maximus,23)\n2> (et,67)\n2> (maximus,24)\n2> (quis,54)\n2> (vivamus,20)\n2> (et,68)\n2> (commodo,24)\n2> (fermentum,25)\n2> (et,69)\n2> (cursus,25)\n2> (aliquam,35)\n2> (condimentum,24)\n2> (at,56)\n2> (cras,12)\n2> (aliquam,36)\n2> (aliquam,37)\n2> (tempor,19)\n2> (aliquam,38)\n2> (et,70)\n2> (elit,41)\n2> (aliquam,39)\n2> (mattis,15)\n2> (vivamus,21)\n2> (commodo,25)\n2> (pulvinar,16)\n2> (bibendum,24)\n2> (elit,42)\n2> (vehicula,24)\n2> (condimentum,25)\n2> (egestas,33)\n2> (aliquam,40)\n2> (pulvinar,17)\n2> (et,71)\n2> (maximus,25)\n2> (nibh,25)\n2> (vestibulum,33)\n2> (cursus,26)\n2> (vivamus,22)\n2> (et,72)\n2> (maximus,26)\n2> (tempus,19)\n2> (fermentum,26)\n2> (quis,55)\n2> (quis,56)\n2> (egestas,34)\n2> (at,57)\n2> (cras,13)\n2> (quis,57)\n2> (at,58)\n2> (aliquam,41)\n2> (augue,23)\n2> (varius,20)\n2> (condimentum,26)\n2> (elit,43)\n2> (quis,58)\n2> (lacus,26)\n2> (vestibulum,34)\n2> (quis,59)\n2> (maximus,27)\n2> (varius,21)\n2> (vehicula,25)\n2> (scelerisque,25)\n2> (et,73)\n2> (vehicula,26)\n2> (quis,60)\n2> (at,59)\n2> (tempus,20)\n2> (vestibulum,35)\n2> (maximus,28)\n2> (tempor,20)\n2> (lacus,27)\n2> (mattis,16)\n2> (nibh,26)\n2> (pulvinar,18)\n2> (quis,61)\n2> (quis,62)\n2> (tempor,21)\n2> (tempus,21)\n2> (duis,20)\n2> (quis,63)\n2> (tempor,22)\n2> (et,74)\n2> (augue,24)\n2> (vehicula,27)\n2> (et,75)\n2> (vestibulum,36)\n2> (cursus,27)\n2> (tempus,22)\n2> (elit,44)\n2> (et,76)\n2> (egestas,35)\n2> (cursus,28)\n2> (cursus,29)\n2> (quis,64)\n2> (pulvinar,19)\n2> (pulvinar,20)\n2> (placerat,22)\n2> (duis,21)\n2> (nibh,27)\n2> (aliquam,42)\n2> (mattis,17)\n2> (cras,14)\n2> (augue,25)\n2> (quis,65)\n2> (tempus,23)\n2> (cras,15)\n2> (commodo,26)\n2> (aliquam,43)\n2> (mattis,18)\n2> (et,77)\n2> (duis,22)\n2> (lacus,28)\n2> (tempus,24)\n2> (bibendum,25)\n2> (tempus,25)\n2> (vestibulum,37)\n2> (at,60)\n2> (et,78)\n2> (mattis,19)\n2> (vestibulum,38)\n2> (et,79)\n2> (varius,22)\n2> (vehicula,28)\n2> (tempor,23)\n2> (tempor,24)\n2> (pulvinar,21)\n2> (elit,45)\n2> (tempor,25)\n2> (cursus,30)\n2> (tempor,26)\n2> (augue,26)\n2> (et,80)\n2> (et,81)\n2> (egestas,36)\n2> (egestas,37)\n2> (vestibulum,39)\n2> (egestas,38)\n2> (nibh,28)\n2> (vestibulum,40)\n2> (et,82)\n2> (et,83)\n2> (maximus,29)\n2> (aliquam,44)\n2> (elit,46)\n2> (lacus,29)\n2> (vivamus,23)\n2> (fermentum,27)\n2> (et,84)\n2> (vehicula,29)\n2> (nibh,29)\n2> (et,85)\n2> (quis,66)\n2> (commodo,27)\n2> (elit,47)\n2> (commodo,28)\n2> (quis,67)\n2> (duis,23)\n2> (egestas,39)\n2> (et,86)\n2> (aliquam,45)\n2> (placerat,23)\n2> (tempus,26)\n2> (nibh,30)\n2> (augue,27)\n2> (pulvinar,22)\n2> (nibh,31)\n2> (bibendum,26)\n2> (et,87)\n2> (cursus,31)\n2> (scelerisque,26)\n2> (condimentum,27)\n2> (elit,48)\n2> (quis,68)\n2> (varius,23)\n2> (cras,16)\n2> (cras,17)\n2> (quis,69)\n2> (maximus,30)\n2> (augue,28)\n2> (tempor,27)\n2> (at,61)\n2> (placerat,24)\n2> (pulvinar,23)\n2> (varius,24)\n2> (cras,18)\n2> (lacus,30)\n2> (elit,49)\n2> (aliquam,46)\n2> (lacus,31)\n2> (at,62)\n2> (pulvinar,24)\n2> (commodo,29)\n2> (condimentum,28)\n2> (maximus,31)\n2> (at,63)\n2> (scelerisque,27)\n2> (aliquam,47)\n2> (at,64)\n2> (lacus,32)\n2> (fermentum,28)\n2> (maximus,32)\n2> (dictum,24)\n2> (vestibulum,41)\n2> (egestas,40)\n2> (cras,19)\n2> (vestibulum,42)\n2> (at,65)\n2> (dictum,25)\n2> (et,88)\n2> (augue,29)\n2> (at,66)\n2> (placerat,25)\n2> (lacus,33)\n2> (vestibulum,43)\n2> (augue,30)\n2> (at,67)\n2> (quis,70)\n2> (augue,31)\n2> (vivamus,24)\n2> (commodo,30)\n2> (vehicula,30)\n2> (fermentum,29)\n2> (egestas,41)\n2> (bibendum,27)\n2> (bibendum,28)\n2> (lacus,34)\n2> (at,68)\n2> (elit,50)\n2> (quis,71)\n2> (at,69)\n2> (vehicula,31)\n2> (quis,72)\n2> (bibendum,29)\n2> (lacus,35)\n2> (duis,24)\n2> (nibh,32)\n2> (condimentum,29)\n2> (elit,51)\n2> (mattis,20)\n2> (bibendum,30)\n2> (bibendum,31)\n2> (et,89)\n2> (augue,32)\n2> (vivamus,25)\n2> (et,90)\n2> (vivamus,26)\n2> (vestibulum,44)\n2> (vehicula,32)\n2> (mattis,21)\n2> (condimentum,30)\n2> (at,70)\n2> (et,91)\n2> (et,92)\n2> (egestas,42)\n2> (et,93)\n2> (vestibulum,45)\n2> (cras,20)\n2> (placerat,26)\n2> (cursus,32)\n2> (lacus,36)\n2> (lacus,37)\n2> (et,94)\n2> (varius,25)\n2> (ad,4)\n2> (vehicula,33)\n2> (scelerisque,28)\n2> (lacus,38)\n2> (maximus,33)\n2> (vestibulum,46)\n2> (et,95)\n2> (aliquam,48)\n2> (augue,33)\n2> (vehicula,34)\n2> (elit,52)\n2> (bibendum,32)\n2> (et,96)\n2> (vestibulum,47)\n2> (commodo,31)\n2> (aliquam,49)\n2> (augue,34)\n2> (mattis,22)\n2> (duis,25)\n2> (commodo,32)\n2> (duis,26)\n2> (vehicula,35)\n2> (et,97)\n2> (elit,53)\n2> (et,98)\n2> (commodo,33)\n2> (at,71)\n2> (tempus,27)\n2> (vehicula,36)\n2> (elit,54)\n2> (elit,55)\n2> (bibendum,33)\n2> (et,99)\n2> (aliquam,50)\n2> (nibh,33)\n2> (scelerisque,29)\n2> (dictum,26)\n2> (maximus,34)\n2> (quis,73)\n2> (vivamus,27)\n2> (dictum,27)\n2> (at,72)\n2> (condimentum,31)\n2> (duis,27)\n2> (vestibulum,48)\n2> (lacus,39)\n2> (quis,74)\n2> (egestas,43)\n2> (tempor,28)\n2> (vestibulum,49)\n2> (commodo,34)\n2> (augue,35)\n2> (commodo,35)\n2> (augue,36)\n2> (tempus,28)\n2> (euismod,26)\n2> (aliquam,51)\n2> (commodo,36)\n2> (placerat,27)\n2> (egestas,44)\n2> (mattis,23)\n2> (vivamus,28)\n2> (commodo,37)\n2> (euismod,27)\n2> (aliquam,52)\n2> (cursus,33)\n2> (lacus,40)\n2> (vivamus,29)\n2> (bibendum,34)\n2> (maximus,35)\n2> (aliquam,53)\n2> (vehicula,37)\n2> (quis,75)\n2> (varius,26)\n2> (placerat,28)\n2> (vestibulum,50)\n2> (pulvinar,25)\n2> (et,100)\n2> (elit,56)\n2> (vestibulum,51)\n2> (dictum,28)\n2> (et,101)\n2> (at,73)\n2> (cursus,34)\n2> (scelerisque,30)\n2> (at,74)\n2> (tempus,29)\n2> (fermentum,30)\n2> (et,102)\n2> (tempus,30)\n2> (condimentum,32)\n2> (mattis,24)\n2> (vivamus,30)\n2> (vehicula,38)\n2> (nibh,34)\n2> (tempor,29)\n2> (bibendum,35)\n2> (mattis,25)\n2> (euismod,28)\n2> (at,75)\n2> (varius,27)\n2> (quis,76)\n2> (vestibulum,52)\n2> (placerat,29)\n2> (placerat,30)\n2> (at,76)\n2> (augue,37)\n2> (vehicula,39)\n2> (et,103)\n2> (augue,38)\n2> (placerat,31)\n2> (quis,77)\n2> (maximus,36)\n2> (at,77)\n2> (at,78)\n2> (maximus,37)\n2> (pulvinar,26)\n2> (at,79)\n2> (et,104)\n2> (tempor,30)\n2> (varius,28)\n2> (commodo,38)\n2> (ad,5)\n2> (at,80)\n2> (vestibulum,53)\n2> (vehicula,40)\n2> (lacus,41)\n2> (augue,39)\n2> (commodo,39)\n2> (pulvinar,27)\n2> (vehicula,41)\n2> (tempus,31)\n2> (egestas,45)\n2> (mattis,26)\n2> (aliquam,54)\n2> (duis,28)\n2> (varius,29)\n2> (aliquam,55)\n2> (augue,40)\n2> (quis,78)\n2> (pulvinar,28)\n2> (commodo,40)\n2> (elit,57)\n2> (scelerisque,31)\n2> (vehicula,42)\n2> (fermentum,31)\n2> (augue,41)\n2> (varius,30)\n2> (fermentum,32)\n2> (et,105)\n2> (aliquam,56)\n2> (et,106)\n2> (condimentum,33)\n2> (dictum,29)\n2> (tempor,31)\n2> (quis,79)\n2> (bibendum,36)\n2> (quis,80)\n2> (cursus,35)\n2> (at,81)\n2> (quis,81)\n2> (dictum,30)\n2> (at,82)\n2> (vehicula,43)\n2> (commodo,41)\n2> (vivamus,31)\n2> (egestas,46)\n2> (euismod,29)\n2> (at,83)\n2> (augue,42)\n2> (pulvinar,29)\n2> (vivamus,32)\n2> (varius,31)\n2> (duis,29)\n2> (vestibulum,54)\n2> (et,107)\n2> (at,84)\n2> (vestibulum,55)\n2> (varius,32)\n2> (placerat,32)\n2> (vestibulum,56)\n2> (condimentum,34)\n2> (elit,58)\n2> (duis,30)\n2> (at,85)\n2> (egestas,47)\n2> (quis,82)\n2> (at,86)\n2> (placerat,33)\n2> (quis,83)\n2> (lacus,42)\n2> (et,108)\n2> (pulvinar,30)\n2> (quis,84)\n2> (euismod,30)\n2> (bibendum,37)\n2> (euismod,31)\n2> (duis,31)\n2> (lacus,43)\n2> (at,87)\n2> (vivamus,33)\n2> (commodo,42)\n2> (tempor,32)\n2> (bibendum,38)\n2> (maximus,38)\n2> (at,88)\n2> (nibh,35)\n2> (vivamus,34)\n2> (dictum,31)\n2> (vestibulum,57)\n2> (vestibulum,58)\n2> (et,109)\n2> (cras,21)\n2> (augue,43)\n2> (vivamus,35)\n2> (et,110)\n2> (lacus,44)\n2> (bibendum,39)\n2> (tempus,32)\n2> (et,111)\n2> (quis,85)\n2> (at,89)\n2> (vivamus,36)\n2> (augue,44)\n2> (bibendum,40)\n2> (fermentum,33)\n2> (egestas,48)\n2> (commodo,43)\n2> (mattis,27)\n2> (at,90)\n2> (et,112)\n2> (tempus,33)\n2> (quis,86)\n2> (cras,22)\n2> (tempus,34)\n2> (bibendum,41)\n2> (vestibulum,59)\n2> (euismod,32)\n2> (egestas,49)\n2> (quis,87)\n2> (at,91)\n2> (vivamus,37)\n2> (quis,88)\n2> (et,113)\n2> (ad,6)\n2> (varius,33)\n2> (vestibulum,60)\n2> (condimentum,35)\n2> (cras,23)\n2> (et,114)\n2> (tempor,33)\n2> (vivamus,38)\n2> (at,92)\n2> (et,115)\n2> (elit,59)\n2> (augue,45)\n2> (vivamus,39)\n2> (vehicula,44)\n2> (et,116)\n2> (et,117)\n2> (egestas,50)\n2> (egestas,51)\n2> (tempor,34)\n2> (quis,89)\n2> (euismod,33)\n2> (lacus,45)\n2> (varius,34)\n2> (euismod,34)\n2> (egestas,52)\n2> (fermentum,34)\n2> (elit,60)\n2> (elit,61)\n2> (lacus,46)\n2> (tempus,35)\n2> (at,93)\n2> (varius,35)\n2> (scelerisque,32)\n2> (et,118)\n2> (et,119)\n2> (et,120)\n2> (quis,90)\n2> (lacus,47)\n2> (mattis,28)\n2> (et,121)\n2> (fermentum,35)\n2> (quis,91)\n2> (tempor,35)\n2> (egestas,53)\n2> (elit,62)\n2> (at,94)\n2> (quis,92)\n2> (vehicula,45)\n2> (et,122)\n2> (quis,93)\n2> (tempor,36)\n2> (at,95)\n2> (at,96)\n2> (euismod,35)\n2> (bibendum,42)\n2> (scelerisque,33)\n2> (augue,46)\n2> (duis,32)\n2> (lacus,48)\n2> (aliquam,57)\n2> (cursus,36)\n2> (nibh,36)\n2> (at,97)\n2> (et,123)\n2> (quis,94)\n2> (lacus,49)\n2> (augue,47)\n2> (quis,95)\n2> (vestibulum,61)\n2> (nibh,37)\n2> (commodo,44)\n2> (vehicula,46)\n2> (mattis,29)\n2> (et,124)\n2> (vehicula,47)\n2> (vivamus,40)\n2> (euismod,36)\n2> (vestibulum,62)\n2> (euismod,37)\n2> (euismod,38)\n2> (at,98)\n2> (elit,63)\n2> (nibh,38)\n2> (euismod,39)\n2> (duis,33)\n2> (lacus,50)\n2> (ad,7)\n2> (vivamus,41)\n2> (at,99)\n2> (quis,96)\n2> (quis,97)\n2> (et,125)\n2> (et,126)\n2> (egestas,54)\n2> (cursus,37)\n2> (et,127)\n2> (cras,24)\n2> (mattis,30)\n2> (pulvinar,31)\n2> (tempus,36)\n2> (nibh,39)\n2> (commodo,45)\n2> (commodo,46)\n2> (placerat,34)\n2> (nibh,40)\n2> (vestibulum,63)\n2> (commodo,47)\n2> (tempor,37)\n2> (cursus,38)\n2> (et,128)\n2> (tempus,37)\n2> (condimentum,36)\n2> (placerat,35)\n2> (tempus,38)\n2> (vehicula,48)\n2> (lacus,51)\n2> (cras,25)\n2> (at,100)\n2> (et,129)\n2> (nibh,41)\n2> (vestibulum,64)\n2> (condimentum,37)\n2> (vestibulum,65)\n2> (commodo,48)\n2> (fermentum,36)\n2> (aliquam,58)\n2> (vehicula,49)\n2> (at,101)\n2> (lacus,52)\n2> (duis,34)\n2> (vestibulum,66)\n2> (bibendum,43)\n2> (cras,26)\n2> (egestas,55)\n2> (scelerisque,34)\n2> (maximus,39)\n2> (tempus,39)\n2> (vestibulum,67)\n2> (scelerisque,35)\n2> (augue,48)\n2> (egestas,56)\n2> (et,130)\n2> (augue,49)\n2> (et,131)\n2> (scelerisque,36)\n2> (quis,98)\n2> (tempus,40)\n2> (fermentum,37)\n2> (vivamus,42)\n2> (dictum,32)\n2> (et,132)\n2> (vehicula,50)\n2> (scelerisque,37)\n2> (vestibulum,68)\n2> (et,133)\n2> (commodo,49)\n2> (placerat,36)\n2> (commodo,50)\n2> (lacus,53)\n2> (vehicula,51)\n2> (duis,35)\n2> (mattis,31)\n2> (lacus,54)\n2> (et,134)\n2> (cras,27)\n2> (scelerisque,38)\n2> (aliquam,59)\n2> (pulvinar,32)\n2> (elit,64)\n2> (lacus,55)\n2> (lacus,56)\n2> (nibh,42)\n2> (lacus,57)\n2> (commodo,51)\n2> (augue,50)\n2> (pulvinar,33)\n2> (tempor,38)\n2> (aliquam,60)\n2> (elit,65)\n2> (cras,28)\n2> (elit,66)\n2> (at,102)\n2> (vehicula,52)\n2> (vivamus,43)\n2> (tempor,39)\n2> (vestibulum,69)\n2> (mattis,32)\n2> (tempor,40)\n2> (cras,29)\n2> (quis,99)\n2> (fermentum,38)\n2> (at,103)\n2> (vehicula,53)\n2> (varius,36)\n2> (nibh,43)\n2> (at,104)\n2> (lacus,58)\n2> (cursus,39)\n2> (nibh,44)\n2> (placerat,37)\n2> (commodo,52)\n2> (vestibulum,70)\n2> (et,135)\n2> (mattis,33)\n2> (maximus,40)\n2> (et,136)\n2> (tempor,41)\n2> (tempor,42)\n2> (tempor,43)\n2> (bibendum,44)\n2> (ad,8)\n2> (duis,36)\n2> (scelerisque,39)\n2> (at,105)\n2> (tempus,41)\n2> (et,137)\n2> (egestas,57)\n2> (lacus,59)\n2> (mattis,34)\n2> (vestibulum,71)\n2> (at,106)\n2> (quis,100)\n2> (varius,37)\n2> (euismod,40)\n2> (at,107)\n2> (cursus,40)\n2> (lacus,60)\n2> (commodo,53)\n2> (commodo,54)\n2> (tempor,44)\n2> (nibh,45)\n2> (tempus,42)\n2> (at,108)\n2> (commodo,55)\n2> (aliquam,61)\n2> (commodo,56)\n2> (vehicula,54)\n2> (ad,9)\n2> (cras,30)\n2> (egestas,58)\n2> (elit,67)\n2> (vestibulum,72)\n2> (euismod,41)\n2> (ad,10)\n2> (condimentum,38)\n2> (maximus,41)\n2> (at,109)\n2> (et,138)\n2> (et,139)\n2> (vehicula,55)\n2> (tempor,45)\n2> (elit,68)\n2> (bibendum,45)\n2> (varius,38)\n2> (pulvinar,34)\n2> (euismod,42)\n2> (et,140)\n2> (duis,37)\n2> (scelerisque,40)\n2> (quis,101)\n2> (fermentum,39)\n2> (elit,69)\n2> (scelerisque,41)\n2> (pulvinar,35)\n2> (aliquam,62)\n2> (euismod,43)\n2> (at,110)\n2> (mattis,35)\n2> (vestibulum,73)\n2> (pulvinar,36)\n2> (et,141)\n2> (cursus,41)\n2> (vivamus,44)\n2> (at,111)\n2> (vivamus,45)\n2> (condimentum,39)\n2> (dictum,33)\n2> (mattis,36)\n2> (mattis,37)\n2> (pulvinar,37)\n2> (euismod,44)\n2> (pulvinar,38)\n2> (condimentum,40)\n2> (at,112)\n2> (aliquam,63)\n2> (scelerisque,42)\n2> (augue,51)\n2> (cursus,42)\n2> (at,113)\n2> (dictum,34)\n2> (egestas,59)\n2> (aliquam,64)\n2> (augue,52)\n2> (vestibulum,74)\n2> (et,142)\n2> (at,114)\n2> (vestibulum,75)\n2> (at,115)\n2> (quis,102)\n2> (vestibulum,76)\n2> (elit,70)\n2> (augue,53)\n2> (dictum,35)\n2> (lacus,61)\n2> (varius,39)\n2> (et,143)\n2> (tempus,43)\n2> (pulvinar,39)\n2> (et,144)\n2> (maximus,42)\n2> (vestibulum,77)\n2> (nibh,46)\n2> (varius,40)\n2> (vestibulum,78)\n2> (placerat,38)\n2> (et,145)\n2> (quis,103)\n2> (placerat,39)\n2> (vestibulum,79)\n2> (quis,104)\n2> (condimentum,41)\n2> (aliquam,65)\n2> (tempor,46)\n2> (commodo,57)\n2> (lacus,62)\n2> (scelerisque,43)\n2> (euismod,45)\n2> (at,116)\n2> (cras,31)\n2> (dictum,36)\n2> (bibendum,46)\n2> (at,117)\n2> (tempor,47)\n2> (fermentum,40)\n2> (quis,105)\n2> (at,118)\n2> (mattis,38)\n2> (et,146)\n2> (vestibulum,80)\n2> (at,119)\n2> (placerat,40)\n2> (duis,38)\n2> (at,120)\n2> (elit,71)\n2> (et,147)\n2> (et,148)\n2> (egestas,60)\n2> (condimentum,42)\n2> (elit,72)\n2> (nibh,47)\n2> (at,121)\n2> (aliquam,66)\n2> (scelerisque,44)\n2> (vehicula,56)\n2> (augue,54)\n2> (quis,106)\n2> (cras,32)\n2> (dictum,37)\n2> (quis,107)\n2> (nibh,48)\n2> (quis,108)\n2> (vehicula,57)\n2> (commodo,58)\n2> (vehicula,58)\n2> (aliquam,67)\n2> (euismod,46)\n2> (placerat,41)\n2> (commodo,59)\n2> (augue,55)\n2> (at,122)\n2> (mattis,39)\n2> (elit,73)\n2> (at,123)\n2> (et,149)\n2> (et,150)\n2> (pulvinar,40)\n2> (fermentum,41)\n2> (lacus,63)\n2> (bibendum,47)\n2> (condimentum,43)\n2> (quis,109)\n2> (tempus,44)\n2> (vestibulum,81)\n2> (vestibulum,82)\n2> (condimentum,44)\n2> (et,151)\n2> (et,152)\n2> (egestas,61)\n2> (dictum,38)\n2> (elit,74)\n2> (vehicula,59)\n2> (cursus,43)\n2> (cursus,44)\n2> (quis,110)\n2> (fermentum,42)\n2> (egestas,62)\n2> (lacus,64)\n2> (bibendum,48)\n2> (placerat,42)\n2> (quis,111)\n2> (varius,41)\n2> (vivamus,46)\n2> (quis,112)\n2> (tempus,45)\n2> (cursus,45)\n2> (egestas,63)\n2> (lacus,65)\n2> (aliquam,68)\n2> (placerat,43)\n2> (vehicula,60)\n2> (vehicula,61)\n2> (condimentum,45)\n2> (augue,56)\n2> (euismod,47)\n2> (commodo,60)\n2> (condimentum,46)\n2> (nibh,49)\n2> (aliquam,69)\n2> (dictum,39)\n2> (vehicula,62)\n2> (vestibulum,83)\n2> (varius,42)\n2> (quis,113)\n2> (aliquam,70)\n2> (at,124)\n2> (vestibulum,84)\n2> (nibh,50)\n2> (quis,114)\n2> (vestibulum,85)\n2> (augue,57)\n2> (bibendum,49)\n2> (nibh,51)\n2> (elit,75)\n2> (cursus,46)\n2> (tempus,46)\n2> (tempor,48)\n2> (aliquam,71)\n2> (euismod,48)\n2> (aliquam,72)\n2> (mattis,40)\n2> (et,153)\n2> (dictum,40)\n2> (et,154)\n2> (tempor,49)\n2> (nibh,52)\n2> (varius,43)\n2> (et,155)\n2> (vestibulum,86)\n2> (pulvinar,41)\n2> (at,125)\n2> (placerat,44)\n2> (placerat,45)\n2> (tempus,47)\n2> (vivamus,47)\n2> (aliquam,73)\n2> (lacus,66)\n2> (at,126)\n2> (aliquam,74)\n2> (quis,115)\n2> (at,127)\n2> (nibh,53)\n2> (egestas,64)\n2> (et,156)\n2> (tempor,50)\n2> (mattis,41)\n2> (quis,116)\n2> (nibh,54)\n2> (fermentum,43)\n2> (quis,117)\n2> (cursus,47)\n2> (augue,58)\n2> (scelerisque,45)\n2> (vestibulum,87)\n2> (quis,118)\n2> (vestibulum,88)\n2> (egestas,65)\n2> (pulvinar,42)\n2> (et,157)\n2> (placerat,46)\n2> (euismod,49)\n2> (et,158)\n2> (euismod,50)\n2> (quis,119)\n2> (at,128)\n2> (bibendum,50)\n2> (aliquam,75)\n2> (quis,120)\n2> (cursus,48)\n2> (lacus,67)\n2> (pulvinar,43)\n2> (bibendum,51)\n2> (nibh,55)\n2> (quis,121)\n2> (dictum,41)\n2> (nibh,56)\n2> (nibh,57)\n2> (vehicula,63)\n2> (quis,122)\n2> (maximus,43)\n2> (mattis,42)\n2> (cras,33)\n2> (fermentum,44)\n2> (scelerisque,46)\n2> (lacus,68)\n2> (elit,76)\n2> (quis,123)\n2> (egestas,66)\n2> (at,129)\n2> (quis,124)\n2> (egestas,67)\n2> (placerat,47)\n2> (vehicula,64)\n2> (cras,34)\n2> (pulvinar,44)\n2> (augue,59)\n2> (at,130)\n2> (cras,35)\n2> (pulvinar,45)\n2> (cras,36)\n2> (at,131)\n2> (dictum,42)\n2> (tempus,48)\n2> (et,159)\n2> (quis,125)\n2> (egestas,68)\n2> (et,160)\n2> (bibendum,52)\n2> (et,161)\n2> (maximus,44)\n2> (vestibulum,89)\n2> (lacus,69)\n2> (vivamus,48)\n2> (vivamus,49)\n2> (condimentum,47)\n2> (scelerisque,47)\n2> (aliquam,76)\n2> (aliquam,77)\n2> (aliquam,78)\n2> (quis,126)\n2> (condimentum,48)\n2> (egestas,69)\n2> (et,162)\n2> (augue,60)\n2> (dictum,43)\n2> (et,163)\n2> (quis,127)\n2> (dictum,44)\n2> (nibh,58)\n2> (maximus,45)\n2> (scelerisque,48)\n2> (vestibulum,90)\n2> (vestibulum,91)\n2> (nibh,59)\n2> (lacus,70)\n2> (cursus,49)\n2> (euismod,51)\n2> (vivamus,50)\n2> (condimentum,49)\n2> (nibh,60)\n2> (egestas,70)\n2> (pulvinar,46)\n2> (dictum,45)\n2> (lacus,71)\n2> (mattis,43)\n2> (et,164)\n2> (tempus,49)\n2> (vivamus,51)\n2> (augue,61)\n2> (quis,128)\n2> (scelerisque,49)\n2> (lacus,72)\n2> (euismod,52)\n2> (at,132)\n2> (augue,62)\n2> (elit,77)\n2> (fermentum,45)\n2> (duis,39)\n2> (tempor,51)\n2> (aliquam,79)\n2> (elit,78)\n2> (aliquam,80)\n2> (dictum,46)\n2> (vehicula,65)\n2> (bibendum,53)\n2> (nibh,61)\n2> (nibh,62)\n2> (lacus,73)\n2> (lacus,74)\n2> (tempus,50)\n2> (et,165)\n2> (fermentum,46)\n2> (duis,40)\n2> (cras,37)\n2> (condimentum,50)\n2> (varius,44)\n2> (et,166)\n2> (vestibulum,92)\n2> (nibh,63)\n2> (et,167)\n2> (elit,79)\n2> (vivamus,52)\n2> (tempor,52)\n2> (elit,80)\n2> (quis,129)\n2> (augue,63)\n2> (scelerisque,50)\n2> (mattis,44)\n2> (nibh,64)\n2> (maximus,46)\n2> (varius,45)\n2> (augue,64)\n2> (et,168)\n2> (tempus,51)\n2> (mattis,45)\n2> (at,133)\n2> (dictum,47)\n2> (nibh,65)\n2> (et,169)\n2> (vehicula,66)\n2> (dictum,48)\n2> (bibendum,54)\n2> (scelerisque,51)\n2> (elit,81)\n2> (at,134)\n2> (tempus,52)\n2> (condimentum,51)\n2> (pulvinar,47)\n2> (bibendum,55)\n2> (quis,130)\n2> (condimentum,52)\n2> (dictum,49)\n2> (at,135)\n2> (bibendum,56)\n2> (elit,82)\n2> (tempus,53)\n2> (euismod,53)\n2> (tempor,53)\n2> (vestibulum,93)\n2> (et,170)\n2> (aliquam,81)\n2> (vehicula,67)\n2> (at,136)\n2> (aliquam,82)\n2> (at,137)\n2> (pulvinar,48)\n2> (et,171)\n2> (fermentum,47)\n2> (bibendum,57)\n2> (at,138)\n2> (egestas,71)\n2> (varius,46)\n2> (dictum,50)\n2> (elit,83)\n2> (augue,65)\n2> (tempus,54)\n2> (egestas,72)\n2> (egestas,73)\n2> (elit,84)\n2> (duis,41)\n2> (condimentum,53)\n2> (augue,66)\n2> (tempor,54)\n2> (vehicula,68)\n2> (et,172)\n2> (tempor,55)\n2> (lacus,75)\n2> (condimentum,54)\n2> (at,139)\n2> (cursus,50)\n2> (vivamus,53)\n2> (augue,67)\n2> (maximus,47)\n2> (nibh,66)\n2> (et,173)\n2> (et,174)\n2> (bibendum,58)\n2> (dictum,51)\n2> (vehicula,69)\n2> (dictum,52)\n2> (et,175)\n2> (varius,47)\n2> (aliquam,83)\n2> (elit,85)\n2> (et,176)\n2> (egestas,74)\n2> (bibendum,59)\n2> (scelerisque,52)\n2> (elit,86)\n2> (aliquam,84)\n2> (quis,131)\n2> (mattis,46)\n2> (quis,132)\n2> (fermentum,48)\n2> (nibh,67)\n2> (quis,133)\n2> (vestibulum,94)\n2> (lacus,76)\n2> (et,177)\n2> (quis,134)\n2> (duis,42)\n2> (tempor,56)\n2> (cursus,51)\n2> (nibh,68)\n2> (quis,135)\n2> (bibendum,60)\n2> (quis,136)\n2> (elit,87)\n2> (quis,137)\n2> (maximus,48)\n2> (tempor,57)\n2> (quis,138)\n2> (at,140)\n2> (pulvinar,49)\n2> (at,141)\n2> (tempor,58)\n2> (maximus,49)\n2> (nibh,69)\n2> (quis,139)\n2> (at,142)\n2> (commodo,61)\n2> (dictum,53)\n2> (et,178)\n2> (commodo,62)\n2> (nibh,70)\n2> (bibendum,61)\n2> (cras,38)\n2> (aliquam,85)\n2> (bibendum,62)\n2> (quis,140)\n2> (quis,141)\n2> (duis,43)\n2> (maximus,50)\n2> (vehicula,70)\n2> (at,143)\n2> (et,179)\n2> (commodo,63)\n2> (bibendum,63)\n2> (quis,142)\n2> (augue,68)\n2> (euismod,54)\n2> (mattis,47)\n2> (aliquam,86)\n2> (pulvinar,50)\n2> (vestibulum,95)\n2> (elit,88)\n2> (commodo,64)\n2> (fermentum,49)\n2> (nibh,71)\n2> (condimentum,55)\n2> (elit,89)\n2> (at,144)\n2> (duis,44)\n2> (commodo,65)\n2> (vestibulum,96)\n2> (euismod,55)\n2> (at,145)\n2> (placerat,48)\n2> (commodo,66)\n2> (at,146)\n2> (pulvinar,51)\n2> (quis,143)\n2> (maximus,51)\n2> (quis,144)\n2> (lacus,77)\n2> (vehicula,71)\n2> (varius,48)\n2> (ad,11)\n2> (cursus,52)\n2> (elit,90)\n2> (maximus,52)\n2> (augue,69)\n2> (quis,145)\n2> (egestas,75)\n2> (duis,45)\n2> (cras,39)\n2> (et,180)\n2> (vestibulum,97)\n2> (nibh,72)\n2> (maximus,53)\n2> (euismod,56)\n2> (vehicula,72)\n2> (mattis,48)\n2> (placerat,49)\n2> (augue,70)\n2> (vestibulum,98)\n2> (elit,91)\n2> (at,147)\n2> (maximus,54)\n2> (nibh,73)\n2> (duis,46)\n2> (aliquam,87)\n2> (mattis,49)\n2> (bibendum,64)\n2> (scelerisque,53)\n2> (varius,49)\n2> (vehicula,73)\n2> (scelerisque,54)\n2> (placerat,50)\n2> (nibh,74)\n2> (elit,92)\n2> (quis,146)\n2> (augue,71)\n2> (aliquam,88)\n2> (at,148)\n2> (euismod,57)\n2> (at,149)\n2> (egestas,76)\n2> (condimentum,56)\n2> (at,150)\n2> (aliquam,89)\n2> (egestas,77)\n2> (quis,147)\n2> (elit,93)\n2> (vehicula,74)\n2> (elit,94)\n2> (vestibulum,99)\n2> (at,151)\n2> (maximus,55)\n2> (quis,148)\n2> (et,181)\n2> (scelerisque,55)\n2> (mattis,50)\n2> (lacus,78)\n2> (tempus,55)\n2> (maximus,56)\n2> (quis,149)\n2> (augue,72)\n2> (condimentum,57)\n2> (et,182)\n2> (nibh,75)\n2> (mattis,51)\n2> (vestibulum,100)\n2> (et,183)\n2> (placerat,51)\n2> (aliquam,90)\n2> (quis,150)\n2> (nibh,76)\n2> (pulvinar,52)\n2> (fermentum,50)\n2> (tempus,56)\n2> (egestas,78)\n2> (at,152)\n2> (maximus,57)\n2> (et,184)\n2> (tempor,59)\n2> (at,153)\n2> (commodo,67)\n2> (dictum,54)\n2> (et,185)\n2> (scelerisque,56)\n2> (aliquam,91)\n2> (aliquam,92)\n2> (euismod,58)\n2> (bibendum,65)\n2> (tempus,57)\n2> (duis,47)\n2> (aliquam,93)\n2> (bibendum,66)\n2> (lacus,79)\n2> (mattis,52)\n2> (nibh,77)\n2> (aliquam,94)\n2> (egestas,79)\n2> (vestibulum,101)\n2> (at,154)\n2> (vehicula,75)\n2> (lacus,80)\n2> (varius,50)\n2> (mattis,53)\n2> (vestibulum,102)\n2> (euismod,59)\n2> (elit,95)\n2> (augue,73)\n2> (euismod,60)\n2> (elit,96)\n2> (at,155)\n2> (maximus,58)\n2> (elit,97)\n2> (lacus,81)\n2> (augue,74)\n2> (lacus,82)\n2> (quis,151)\n2> (maximus,59)\n2> (vestibulum,103)\n2> (quis,152)\n2> (cursus,53)\n2> (placerat,52)\n2> (augue,75)\n2> (euismod,61)\n2> (aliquam,95)\n2> (dictum,55)\n2> (condimentum,58)\n2> (lacus,83)\n2> (cursus,54)\n2> (tempus,58)\n2> (et,186)\n2> (placerat,53)\n2> (mattis,54)\n2> (nibh,78)\n2> (placerat,54)\n2> (et,187)\n2> (et,188)\n2> (egestas,80)\n2> (fermentum,51)\n2> (euismod,62)\n2> (mattis,55)\n2> (lacus,84)\n2> (euismod,63)\n2> (vehicula,76)\n2> (quis,153)\n2> (tempus,59)\n2> (fermentum,52)\n2> (nibh,79)\n2> (egestas,81)\n2> (bibendum,67)\n2> (vivamus,54)\n2> (varius,51)\n2> (vehicula,77)\n2> (varius,52)\n2> (bibendum,68)\n2> (scelerisque,57)\n2> (tempus,60)\n2> (elit,98)\n2> (at,156)\n2> (maximus,60)\n2> (pulvinar,53)\n2> (varius,53)\n2> (egestas,82)\n2> (quis,154)\n2> (fermentum,53)\n2> (et,189)\n2> (mattis,56)\n2> (condimentum,59)\n2> (dictum,56)\n2> (lacus,85)\n2> (et,190)\n2> (lacus,86)\n2> (euismod,64)\n2> (quis,155)\n2> (condimentum,60)\n2> (at,157)\n2> (aliquam,96)\n2> (augue,76)\n2> (at,158)\n2> (nibh,80)\n2> (quis,156)\n2> (commodo,68)\n2> (commodo,69)\n2> (aliquam,97)\n2> (euismod,65)\n2> (elit,99)\n2> (vivamus,55)\n2> (et,191)\n2> (varius,54)\n2> (lacus,87)\n2> (bibendum,69)\n2> (quis,157)\n2> (lacus,88)\n2> (et,192)\n2> (aliquam,98)\n2> (bibendum,70)\n2> (dictum,57)\n2> (augue,77)\n2> (vestibulum,104)\n2> (maximus,61)\n2> (vehicula,78)\n2> (quis,158)\n2> (bibendum,71)\n2> (aliquam,99)\n2> (vestibulum,105)\n2> (duis,48)\n2> (mattis,57)\n2> (bibendum,72)\n2> (et,193)\n2> (pulvinar,54)\n2> (lacus,89)\n2> (vivamus,56)\n2> (at,159)\n2> (quis,159)\n2> (tempor,60)\n2> (euismod,66)\n2> (placerat,55)\n2> (et,194)\n2> (et,195)\n2> (egestas,83)\n2> (vestibulum,106)\n2> (et,196)\n2> (lacus,90)\n2> (tempor,61)\n2> (egestas,84)\n2> (lacus,91)\n2> (mattis,58)\n2> (et,197)\n2> (quis,160)\n2> (et,198)\n2> (augue,78)\n2> (egestas,85)\n2> (aliquam,100)\n2> (nibh,81)\n2> (et,199)\n2> (et,200)\n2> (egestas,86)\n2> (tempor,62)\n2> (augue,79)\n2> (et,201)\n2> (vivamus,57)\n2> (aliquam,101)\n2> (lacus,92)\n2> (scelerisque,58)\n2> (aliquam,102)\n2> (tempus,61)\n2> (at,160)\n2> (vehicula,79)\n2> (vestibulum,107)\n2> (et,202)\n2> (vestibulum,108)\n2> (vestibulum,109)\n2> (et,203)\n2> (tempus,62)\n2> (lacus,93)\n2> (commodo,70)\n2> (vivamus,58)\n2> (lacus,94)\n2> (commodo,71)\n2> (pulvinar,55)\n2> (tempor,63)\n2> (aliquam,103)\n2> (et,204)\n2> (mattis,59)\n2> (egestas,87)\n2> (lacus,95)\n2> (cursus,55)\n2> (quis,161)\n2> (vehicula,80)\n2> (quis,162)\n2> (duis,49)\n2> (egestas,88)\n2> (maximus,62)\n2> (cras,40)\n2> (condimentum,61)\n2> (at,161)\n2> (tempus,63)\n2> (vehicula,81)\n2> (lacus,96)\n2> (placerat,56)\n2> (euismod,67)\n2> (nibh,82)\n2> (at,162)\n2> (nibh,83)\n2> (dictum,58)\n2> (quis,163)\n2> (nibh,84)\n2> (aliquam,104)\n2> (elit,100)\n2> (at,163)\n2> (maximus,63)\n2> (et,205)\n2> (at,164)\n2> (nibh,85)\n2> (tempus,64)\n2> (nibh,86)\n2> (dictum,59)\n2> (quis,164)\n2> (euismod,68)\n2> (egestas,89)\n2> (bibendum,73)\n2> (condimentum,62)\n2> (augue,80)\n2> (et,206)\n2> (tempor,64)\n2> (at,165)\n2> (aliquam,105)\n2> (lacus,97)\n2> (elit,101)\n2> (vestibulum,110)\n2> (duis,50)\n2> (nibh,87)\n2> (condimentum,63)\n2> (elit,102)\n2> (placerat,57)\n2> (condimentum,64)\n2> (tempor,65)\n2> (tempus,65)\n2> (et,207)\n2> (tempus,66)\n2> (egestas,90)\n1> (nunc,1)\n1> (sem,1)\n1> (finibus,1)\n1> (suscipit,1)\n1> (leo,1)\n1> (interdum,1)\n1> (leo,2)\n1> (ac,1)\n1> (ultrices,1)\n1> (enim,1)\n1> (ipsum,1)\n1> (adipiscing,1)\n1> (massa,1)\n1> (sem,2)\n1> (ut,1)\n1> (ipsum,2)\n1> (nunc,2)\n1> (ut,2)\n1> (enim,2)\n1> (ut,3)\n1> (posuere,1)\n1> (quisque,1)\n1> (nunc,3)\n1> (leo,3)\n1> (ut,4)\n1> (venenatis,1)\n1> (ut,5)\n1> (rutrum,1)\n1> (ipsum,3)\n1> (fusce,1)\n1> (suscipit,2)\n1> (nunc,4)\n1> (ut,6)\n1> (enim,3)\n4> (eu,1)\n1> (suspendisse,1)\n4> (convallis,1)\n1> (neque,1)\n4> (diam,1)\n4> (a,1)\n1> (sem,3)\n1> (turpis,1)\n3> (pellentesque,1)\n1> (maecenas,1)\n1> (finibus,2)\n1> (dignissim,1)\n3> (dolor,1)\n1> (praesent,1)\n3> (ultricies,1)\n1> (turpis,2)\n3> (vitae,1)\n1> (nunc,5)\n3> (nisi,1)\n1> (neque,2)\n3> (metus,1)\n1> (penatibus,1)\n3> (pellentesque,2)\n1> (montes,1)\n3> (lorem,1)\n1> (mus,1)\n3> (dolor,2)\n1> (ipsum,4)\n3> (lorem,2)\n1> (nec,1)\n3> (tristique,1)\n1> (maecenas,2)\n3> (fringilla,1)\n1> (leo,4)\n3> (facilisis,1)\n1> (nunc,6)\n3> (vitae,2)\n1> (sapien,1)\n3> (facilisis,2)\n1> (mollis,1)\n3> (dolor,3)\n1> (neque,3)\n3> (fringilla,2)\n1> (nunc,7)\n3> (metus,2)\n1> (sem,4)\n3> (vitae,3)\n1> (leo,5)\n3> (vitae,4)\n1> (sem,5)\n3> (volutpat,1)\n1> (magna,1)\n3> (nullam,1)\n1> (nec,2)\n3> (ultricies,2)\n1> (magna,2)\n3> (vitae,5)\n1> (sapien,2)\n3> (ornare,1)\n1> (morbi,1)\n3> (ligula,1)\n1> (posuere,2)\n3> (nascetur,1)\n1> (leo,6)\n3> (facilisis,3)\n1> (praesent,2)\n3> (facilisis,4)\n1> (libero,1)\n3> (phasellus,1)\n1> (maecenas,3)\n3> (non,1)\n1> (neque,4)\n3> (nisi,2)\n1> (fusce,2)\n3> (ligula,2)\n1> (sem,6)\n3> (consequat,1)\n1> (venenatis,2)\n3> (fringilla,3)\n1> (sem,7)\n3> (volutpat,2)\n1> (ultrices,2)\n3> (metus,3)\n1> (posuere,3)\n3> (purus,1)\n1> (nec,3)\n3> (lorem,3)\n1> (nec,4)\n3> (vitae,6)\n1> (quisque,2)\n3> (imperdiet,1)\n1> (arcu,1)\n3> (tristique,2)\n1> (arcu,2)\n3> (ornare,2)\n1> (suspendisse,2)\n3> (ligula,3)\n1> (suspendisse,3)\n3> (non,2)\n1> (maecenas,4)\n3> (vitae,7)\n1> (finibus,3)\n3> (iaculis,1)\n1> (neque,5)\n3> (fringilla,4)\n1> (turpis,3)\n3> (porta,1)\n1> (nec,5)\n3> (fringilla,5)\n1> (praesent,3)\n3> (non,3)\n1> (suscipit,3)\n3> (nisi,3)\n1> (morbi,2)\n3> (ornare,3)\n1> (mollis,2)\n3> (iaculis,2)\n1> (posuere,4)\n3> (dolor,4)\n1> (quisque,3)\n3> (ornare,4)\n1> (mollis,3)\n3> (imperdiet,2)\n1> (neque,6)\n3> (phasellus,2)\n1> (suspendisse,4)\n3> (pellentesque,3)\n1> (suscipit,4)\n3> (lorem,4)\n1> (praesent,4)\n3> (purus,2)\n1> (suscipit,5)\n3> (pellentesque,4)\n1> (venenatis,3)\n3> (facilisis,5)\n1> (magna,3)\n3> (lorem,5)\n1> (ut,7)\n3> (nisi,4)\n1> (nunc,8)\n3> (consequat,2)\n1> (nunc,9)\n3> (nisi,5)\n1> (nec,6)\n3> (nullam,2)\n1> (nunc,10)\n3> (non,4)\n1> (suscipit,6)\n3> (nisi,6)\n1> (ultrices,3)\n3> (porta,2)\n1> (nec,7)\n3> (volutpat,3)\n1> (ut,8)\n3> (metus,4)\n1> (ipsum,5)\n3> (consequat,3)\n1> (maecenas,5)\n3> (pellentesque,5)\n1> (ut,9)\n3> (non,5)\n1> (ut,10)\n3> (pellentesque,6)\n1> (ultrices,4)\n3> (tristique,3)\n1> (ac,2)\n3> (facilisis,6)\n1> (nunc,11)\n3> (vitae,8)\n1> (enim,4)\n3> (non,6)\n1> (ut,11)\n3> (dolor,5)\n1> (venenatis,4)\n3> (vitae,9)\n1> (rutrum,2)\n3> (non,7)\n1> (ac,3)\n3> (dolor,6)\n1> (fusce,3)\n3> (consequat,4)\n1> (dignissim,2)\n3> (vitae,10)\n1> (morbi,3)\n3> (ligula,4)\n1> (posuere,5)\n3> (tristique,4)\n1> (nec,8)\n3> (non,8)\n1> (ut,12)\n3> (non,9)\n1> (sem,8)\n3> (pellentesque,7)\n1> (eleifend,1)\n3> (dolor,7)\n1> (magna,4)\n3> (iaculis,3)\n1> (dignissim,3)\n3> (imperdiet,3)\n1> (ut,13)\n3> (non,10)\n1> (dignissim,4)\n3> (ornare,5)\n1> (arcu,3)\n3> (volutpat,4)\n1> (nec,9)\n3> (iaculis,4)\n1> (interdum,2)\n3> (iaculis,5)\n1> (dignissim,5)\n3> (pellentesque,8)\n1> (finibus,4)\n3> (fringilla,6)\n1> (ac,4)\n3> (pellentesque,9)\n1> (dignissim,6)\n3> (fringilla,7)\n1> (praesent,5)\n3> (facilisis,7)\n1> (magna,5)\n3> (iaculis,6)\n1> (venenatis,5)\n3> (vitae,11)\n1> (magna,6)\n3> (facilisis,8)\n1> (fusce,4)\n3> (non,11)\n1> (ac,5)\n3> (non,12)\n1> (interdum,3)\n3> (lorem,6)\n1> (sapien,3)\n3> (consequat,5)\n1> (neque,7)\n3> (hac,1)\n1> (ac,6)\n3> (habitasse,1)\n1> (mollis,4)\n3> (dictumst,1)\n1> (eleifend,2)\n3> (tristique,5)\n1> (eleifend,3)\n3> (iaculis,7)\n1> (nec,10)\n3> (nisi,7)\n1> (maecenas,6)\n3> (vitae,12)\n1> (ut,14)\n3> (non,13)\n1> (enim,5)\n3> (metus,5)\n1> (neque,8)\n3> (non,14)\n1> (mollis,5)\n3> (vitae,13)\n1> (libero,2)\n3> (dolor,8)\n1> (morbi,4)\n3> (non,15)\n3> (iaculis,8)\n3> (ligula,5)\n1> (senectus,1)\n3> (imperdiet,4)\n1> (fames,1)\n3> (vitae,14)\n1> (ac,7)\n3> (facilisis,9)\n1> (turpis,4)\n3> (dolor,9)\n1> (quisque,4)\n3> (consequat,6)\n1> (leo,7)\n3> (pellentesque,10)\n1> (ut,15)\n3> (imperdiet,5)\n1> (leo,8)\n3> (vitae,15)\n1> (nec,11)\n3> (pellentesque,11)\n1> (maecenas,7)\n3> (ultricies,3)\n1> (nunc,12)\n3> (nisi,8)\n1> (arcu,4)\n3> (phasellus,3)\n1> (morbi,5)\n3> (purus,3)\n1> (nunc,13)\n3> (purus,4)\n1> (posuere,6)\n3> (ligula,6)\n1> (morbi,6)\n3> (non,16)\n1> (finibus,5)\n3> (lorem,7)\n1> (ac,8)\n3> (vitae,16)\n1> (massa,2)\n3> (volutpat,5)\n1> (ultrices,5)\n3> (vitae,17)\n1> (nec,12)\n3> (dolor,10)\n1> (ipsum,6)\n3> (fringilla,8)\n1> (arcu,5)\n3> (dolor,11)\n1> (quisque,5)\n3> (ultricies,4)\n1> (ut,16)\n3> (phasellus,4)\n1> (rutrum,3)\n3> (dolor,12)\n1> (ut,17)\n3> (ornare,6)\n1> (leo,9)\n3> (ligula,7)\n1> (suspendisse,5)\n3> (ligula,8)\n1> (interdum,4)\n3> (non,17)\n1> (sapien,4)\n3> (tristique,6)\n1> (ut,18)\n3> (imperdiet,6)\n1> (arcu,6)\n3> (nisi,9)\n1> (ultrices,6)\n1> (finibus,6)\n1> (arcu,7)\n3> (facilisis,10)\n1> (sem,9)\n3> (fringilla,9)\n1> (massa,3)\n3> (imperdiet,7)\n1> (dignissim,7)\n3> (tristique,7)\n1> (sapien,5)\n3> (porta,3)\n1> (interdum,5)\n3> (phasellus,5)\n1> (fames,2)\n3> (vitae,18)\n1> (ac,9)\n3> (pellentesque,12)\n1> (ipsum,7)\n3> (dolor,13)\n1> (primis,1)\n3> (nisi,10)\n1> (neque,9)\n3> (ultricies,5)\n1> (praesent,6)\n3> (ligula,9)\n1> (neque,10)\n3> (ultricies,6)\n1> (suscipit,7)\n3> (vitae,19)\n1> (magna,7)\n3> (tristique,8)\n1> (maecenas,8)\n3> (nisi,11)\n1> (ut,19)\n3> (vitae,20)\n1> (ut,20)\n3> (nascetur,2)\n1> (interdum,6)\n3> (pellentesque,13)\n1> (ut,21)\n3> (purus,5)\n1> (ipsum,8)\n3> (vitae,21)\n1> (suscipit,8)\n3> (volutpat,6)\n1> (fusce,5)\n3> (non,18)\n1> (neque,11)\n3> (dolor,14)\n1> (finibus,7)\n3> (metus,6)\n1> (nec,13)\n3> (nullam,3)\n1> (libero,3)\n3> (non,19)\n1> (praesent,7)\n3> (pellentesque,14)\n1> (enim,6)\n3> (tristique,9)\n1> (massa,4)\n3> (vitae,22)\n1> (morbi,7)\n3> (lorem,8)\n1> (maecenas,9)\n3> (nullam,4)\n1> (arcu,8)\n3> (ultricies,7)\n1> (eleifend,4)\n3> (nullam,5)\n1> (fusce,6)\n3> (ligula,10)\n1> (libero,4)\n3> (ligula,11)\n1> (ut,22)\n3> (non,20)\n1> (ipsum,9)\n3> (consequat,7)\n1> (ut,23)\n3> (metus,7)\n1> (interdum,7)\n3> (iaculis,9)\n1> (sapien,6)\n3> (ligula,12)\n1> (praesent,8)\n3> (non,21)\n1> (posuere,7)\n3> (fringilla,10)\n1> (finibus,8)\n3> (dolor,15)\n1> (sapien,7)\n3> (volutpat,7)\n1> (sapien,8)\n3> (fringilla,11)\n1> (posuere,8)\n3> (vitae,23)\n1> (suspendisse,6)\n3> (volutpat,8)\n1> (ut,24)\n3> (non,22)\n1> (nunc,14)\n3> (nisi,12)\n1> (enim,7)\n3> (pellentesque,15)\n1> (nec,14)\n3> (tristique,10)\n1> (libero,5)\n3> (hac,2)\n1> (praesent,9)\n3> (habitasse,2)\n1> (ut,25)\n3> (dictumst,2)\n1> (sapien,9)\n3> (dolor,16)\n1> (morbi,8)\n3> (hac,3)\n1> (sem,10)\n3> (habitasse,3)\n1> (suscipit,9)\n3> (dictumst,3)\n1> (rutrum,4)\n3> (non,23)\n1> (neque,12)\n3> (non,24)\n1> (ac,10)\n3> (ornare,7)\n1> (finibus,9)\n3> (lorem,9)\n1> (neque,13)\n3> (vitae,24)\n1> (sapien,10)\n3> (tristique,11)\n1> (ipsum,10)\n3> (purus,6)\n1> (praesent,10)\n3> (vitae,25)\n1> (mollis,6)\n3> (vitae,26)\n1> (leo,10)\n3> (pellentesque,16)\n1> (dignissim,8)\n3> (ligula,13)\n1> (magna,8)\n3> (pellentesque,17)\n1> (mollis,7)\n3> (non,25)\n1> (sem,11)\n3> (phasellus,6)\n1> (leo,11)\n3> (imperdiet,8)\n1> (ut,26)\n3> (ornare,8)\n1> (arcu,9)\n3> (tristique,12)\n1> (leo,12)\n3> (purus,7)\n1> (nec,15)\n3> (consequat,8)\n1> (enim,8)\n3> (vitae,27)\n1> (nec,16)\n3> (ligula,14)\n1> (nec,17)\n3> (non,26)\n1> (massa,5)\n3> (nisi,13)\n1> (quisque,6)\n3> (porta,4)\n1> (ut,27)\n3> (vitae,28)\n1> (ipsum,11)\n3> (non,27)\n1> (massa,6)\n3> (ornare,9)\n1> (praesent,11)\n3> (nullam,6)\n1> (magna,9)\n3> (metus,8)\n1> (massa,7)\n3> (iaculis,10)\n1> (ac,11)\n3> (ligula,15)\n1> (sem,12)\n3> (facilisis,11)\n1> (nec,18)\n3> (lorem,10)\n1> (morbi,9)\n3> (non,28)\n1> (posuere,9)\n3> (consequat,9)\n1> (nec,19)\n3> (dolor,17)\n1> (ut,28)\n3> (consequat,10)\n1> (massa,8)\n3> (vitae,29)\n1> (enim,9)\n3> (ultricies,8)\n1> (nunc,15)\n3> (nisi,14)\n1> (turpis,5)\n3> (non,29)\n1> (ut,29)\n3> (nisi,15)\n1> (turpis,6)\n3> (fringilla,12)\n1> (massa,9)\n3> (dolor,18)\n1> (massa,10)\n3> (facilisis,12)\n1> (ipsum,12)\n3> (ligula,16)\n1> (turpis,7)\n3> (nullam,7)\n1> (leo,13)\n3> (lorem,11)\n1> (leo,14)\n3> (facilisis,13)\n1> (ipsum,13)\n3> (non,30)\n1> (posuere,10)\n3> (ornare,10)\n1> (nunc,16)\n3> (purus,8)\n1> (nec,20)\n3> (pellentesque,18)\n1> (neque,14)\n3> (iaculis,11)\n1> (fusce,7)\n3> (ligula,17)\n1> (libero,6)\n3> (vitae,30)\n1> (rutrum,5)\n3> (non,31)\n1> (arcu,10)\n3> (purus,9)\n1> (nunc,17)\n3> (vitae,31)\n1> (nec,21)\n3> (ligula,18)\n1> (penatibus,2)\n3> (tristique,13)\n1> (montes,2)\n3> (tristique,14)\n1> (mus,2)\n3> (fringilla,13)\n1> (finibus,10)\n3> (lorem,12)\n1> (turpis,8)\n3> (iaculis,12)\n1> (quisque,7)\n3> (fringilla,14)\n1> (massa,11)\n3> (tristique,15)\n1> (eleifend,5)\n3> (non,32)\n1> (sociosqu,1)\n3> (purus,10)\n1> (inceptos,1)\n3> (vitae,32)\n1> (himenaeos,1)\n3> (nullam,8)\n1> (suspendisse,7)\n3> (consequat,11)\n1> (libero,7)\n3> (vitae,33)\n1> (maecenas,10)\n3> (ornare,11)\n1> (turpis,9)\n3> (phasellus,7)\n1> (mollis,8)\n3> (vitae,34)\n1> (sem,13)\n3> (metus,9)\n1> (venenatis,6)\n3> (imperdiet,9)\n1> (nunc,18)\n3> (nisi,16)\n1> (eleifend,6)\n3> (non,33)\n1> (sapien,11)\n3> (fringilla,15)\n1> (sapien,12)\n1> (turpis,10)\n1> (nec,22)\n1> (magna,10)\n1> (praesent,12)\n1> (sem,14)\n1> (enim,10)\n1> (ut,30)\n1> (sapien,13)\n1> (ut,31)\n1> (dignissim,9)\n1> (suscipit,10)\n3> (pellentesque,19)\n1> (sem,15)\n1> (maecenas,11)\n1> (neque,15)\n1> (quisque,8)\n1> (finibus,11)\n1> (dignissim,10)\n1> (suspendisse,8)\n1> (ac,12)\n1> (ac,13)\n1> (nunc,19)\n1> (maecenas,12)\n1> (massa,12)\n1> (ut,32)\n1> (magna,11)\n1> (arcu,11)\n1> (maecenas,13)\n1> (rutrum,6)\n1> (ut,33)\n1> (eleifend,7)\n1> (nunc,20)\n1> (posuere,11)\n1> (arcu,12)\n1> (finibus,12)\n1> (morbi,10)\n1> (senectus,2)\n1> (fames,3)\n1> (ac,14)\n1> (turpis,11)\n1> (rutrum,7)\n1> (nec,23)\n1> (libero,8)\n1> (ipsum,14)\n1> (ipsum,15)\n1> (arcu,13)\n1> (leo,15)\n1> (praesent,13)\n1> (ultrices,7)\n1> (posuere,12)\n1> (neque,16)\n1> (posuere,13)\n1> (massa,13)\n1> (nec,24)\n1> (leo,16)\n1> (ut,34)\n3> (nullam,9)\n1> (libero,9)\n3> (facilisis,14)\n1> (quisque,9)\n3> (lorem,13)\n1> (arcu,14)\n3> (dolor,19)\n1> (suspendisse,9)\n3> (nisi,17)\n1> (eleifend,8)\n3> (ligula,19)\n1> (enim,11)\n3> (dolor,20)\n1> (nec,25)\n3> (non,34)\n1> (sociosqu,2)\n3> (nullam,10)\n1> (inceptos,2)\n3> (imperdiet,10)\n1> (himenaeos,2)\n3> (purus,11)\n1> (maecenas,14)\n3> (vitae,35)\n1> (ac,15)\n3> (dolor,21)\n1> (libero,10)\n3> (ornare,12)\n1> (nec,26)\n3> (pellentesque,20)\n1> (leo,17)\n3> (pellentesque,21)\n1> (sapien,14)\n3> (ultricies,9)\n1> (ut,35)\n3> (consequat,12)\n1> (morbi,11)\n3> (pellentesque,22)\n1> (interdum,8)\n3> (vitae,36)\n1> (sem,16)\n3> (nisi,18)\n1> (turpis,12)\n3> (tristique,16)\n1> (rutrum,8)\n3> (nullam,11)\n1> (massa,14)\n3> (pellentesque,23)\n1> (ipsum,16)\n3> (imperdiet,11)\n1> (libero,11)\n3> (vitae,37)\n1> (leo,18)\n3> (nullam,12)\n1> (libero,12)\n3> (purus,12)\n1> (ut,36)\n3> (non,35)\n1> (mollis,9)\n3> (tristique,17)\n1> (posuere,14)\n3> (tristique,18)\n1> (interdum,9)\n3> (nisi,19)\n1> (interdum,10)\n3> (nullam,13)\n1> (arcu,15)\n3> (ligula,20)\n1> (ut,37)\n3> (nisi,20)\n1> (interdum,11)\n3> (non,36)\n1> (fusce,8)\n3> (ornare,13)\n1> (ipsum,17)\n3> (consequat,13)\n1> (leo,19)\n3> (vitae,38)\n1> (ac,16)\n3> (pellentesque,24)\n1> (suscipit,11)\n3> (ornare,14)\n1> (nunc,21)\n3> (lorem,14)\n1> (nunc,22)\n3> (non,37)\n1> (sapien,15)\n3> (vitae,39)\n1> (dignissim,11)\n3> (lorem,15)\n1> (ac,17)\n3> (vitae,40)\n1> (quisque,10)\n3> (vitae,41)\n1> (nec,27)\n3> (hac,4)\n1> (sem,17)\n3> (habitasse,4)\n1> (leo,20)\n3> (dictumst,4)\n1> (praesent,14)\n3> (pellentesque,25)\n1> (ac,18)\n3> (metus,10)\n1> (interdum,12)\n3> (fringilla,16)\n1> (suspendisse,10)\n3> (vitae,42)\n1> (finibus,13)\n3> (ultricies,10)\n1> (suscipit,12)\n3> (non,38)\n1> (fusce,9)\n3> (pellentesque,26)\n1> (maecenas,15)\n3> (tristique,19)\n1> (nunc,23)\n3> (nisi,21)\n1> (enim,12)\n3> (tristique,20)\n1> (nunc,24)\n3> (fringilla,17)\n1> (sem,18)\n3> (nascetur,3)\n1> (nunc,25)\n3> (hac,5)\n1> (ultrices,8)\n3> (habitasse,5)\n1> (turpis,13)\n3> (dictumst,5)\n1> (finibus,14)\n3> (pellentesque,27)\n1> (eleifend,9)\n3> (tristique,21)\n1> (nunc,26)\n3> (nullam,14)\n1> (turpis,14)\n3> (volutpat,9)\n1> (nec,28)\n3> (facilisis,15)\n1> (nec,29)\n3> (ornare,15)\n1> (nunc,27)\n3> (ultricies,11)\n1> (turpis,15)\n3> (iaculis,13)\n1> (turpis,16)\n3> (volutpat,10)\n1> (leo,21)\n3> (tristique,22)\n1> (neque,17)\n3> (non,39)\n1> (posuere,15)\n3> (pellentesque,28)\n1> (nunc,28)\n3> (tristique,23)\n1> (enim,13)\n3> (pellentesque,29)\n1> (arcu,16)\n3> (non,40)\n1> (libero,13)\n3> (tristique,24)\n1> (ut,38)\n3> (ultricies,12)\n1> (interdum,13)\n3> (lorem,16)\n1> (ipsum,18)\n3> (volutpat,11)\n1> (eleifend,10)\n3> (metus,11)\n1> (fusce,10)\n3> (consequat,14)\n1> (sem,19)\n3> (purus,13)\n1> (libero,14)\n3> (fringilla,18)\n1> (turpis,17)\n3> (dolor,22)\n1> (massa,15)\n3> (phasellus,8)\n1> (libero,15)\n3> (ultricies,13)\n1> (suscipit,13)\n3> (dolor,23)\n1> (praesent,15)\n3> (imperdiet,12)\n1> (ultrices,9)\n3> (nascetur,4)\n1> (nunc,29)\n3> (purus,14)\n1> (ut,39)\n3> (lorem,17)\n1> (praesent,16)\n3> (metus,12)\n1> (nec,30)\n3> (imperdiet,13)\n1> (finibus,15)\n3> (pellentesque,30)\n1> (eleifend,11)\n3> (pellentesque,31)\n1> (neque,18)\n3> (fringilla,19)\n1> (suspendisse,11)\n3> (non,41)\n3> (vitae,43)\n3> (pellentesque,32)\n3> (pellentesque,33)\n3> (pellentesque,34)\n3> (vitae,44)\n3> (volutpat,12)\n3> (metus,13)\n3> (vitae,45)\n1> (magna,12)\n3> (non,42)\n3> (dolor,24)\n3> (volutpat,13)\n3> (dolor,25)\n3> (non,43)\n3> (lorem,18)\n3> (dolor,26)\n3> (tristique,25)\n3> (phasellus,9)\n3> (non,44)\n3> (nisi,22)\n3> (facilisis,16)\n3> (vitae,46)\n3> (iaculis,14)\n3> (pellentesque,35)\n3> (pellentesque,36)\n3> (purus,15)\n3> (dolor,27)\n3> (phasellus,10)\n3> (nisi,23)\n3> (nisi,24)\n3> (facilisis,17)\n1> (libero,16)\n3> (non,45)\n1> (venenatis,7)\n3> (imperdiet,14)\n1> (morbi,12)\n3> (iaculis,15)\n1> (massa,16)\n3> (vitae,47)\n1> (finibus,16)\n3> (lorem,19)\n1> (quisque,11)\n3> (metus,14)\n1> (ipsum,19)\n3> (tristique,26)\n1> (ipsum,20)\n3> (lorem,20)\n1> (nec,31)\n3> (non,46)\n1> (sem,20)\n3> (tristique,27)\n1> (morbi,13)\n3> (tristique,28)\n1> (sem,21)\n3> (dolor,28)\n1> (ipsum,21)\n3> (ligula,21)\n1> (adipiscing,2)\n3> (porta,5)\n1> (posuere,16)\n3> (purus,16)\n1> (neque,19)\n3> (pellentesque,37)\n1> (suspendisse,12)\n3> (consequat,15)\n1> (ipsum,22)\n3> (porta,6)\n1> (arcu,17)\n3> (vitae,48)\n1> (ac,19)\n3> (porta,7)\n1> (rutrum,9)\n3> (iaculis,16)\n1> (turpis,18)\n3> (pellentesque,38)\n3> (tristique,29)\n1> (nunc,30)\n3> (vitae,49)\n1> (nunc,31)\n3> (iaculis,17)\n1> (venenatis,8)\n3> (nisi,25)\n1> (sem,22)\n3> (nullam,15)\n1> (magna,13)\n3> (non,47)\n1> (leo,22)\n3> (nisi,26)\n1> (enim,14)\n3> (metus,15)\n1> (ipsum,23)\n3> (facilisis,18)\n1> (suscipit,14)\n3> (metus,16)\n1> (magna,14)\n3> (metus,17)\n1> (fusce,11)\n3> (dolor,29)\n1> (arcu,18)\n3> (lorem,21)\n1> (ut,40)\n3> (vitae,50)\n1> (nec,32)\n3> (tristique,30)\n1> (ipsum,24)\n3> (phasellus,11)\n1> (interdum,14)\n3> (non,48)\n1> (interdum,15)\n3> (vitae,51)\n1> (libero,17)\n3> (vitae,52)\n1> (venenatis,9)\n3> (ornare,16)\n1> (quisque,12)\n3> (ligula,22)\n1> (neque,20)\n3> (imperdiet,15)\n1> (dignissim,12)\n3> (non,49)\n1> (ipsum,25)\n3> (non,50)\n1> (suspendisse,13)\n3> (purus,17)\n1> (sapien,16)\n3> (dolor,30)\n1> (finibus,17)\n3> (vitae,53)\n1> (nec,33)\n3> (nisi,27)\n1> (nunc,32)\n3> (tristique,31)\n1> (nec,34)\n3> (ligula,23)\n1> (nec,35)\n3> (non,51)\n1> (nunc,33)\n3> (non,52)\n1> (leo,23)\n3> (imperdiet,16)\n1> (ac,20)\n3> (iaculis,18)\n1> (magna,15)\n3> (non,53)\n1> (nec,36)\n3> (purus,18)\n1> (mollis,10)\n3> (ultricies,14)\n1> (morbi,14)\n3> (dolor,31)\n1> (suscipit,15)\n1> (ultrices,10)\n3> (iaculis,19)\n1> (suspendisse,14)\n3> (tristique,32)\n1> (ut,41)\n3> (pellentesque,39)\n1> (ultrices,11)\n3> (vitae,54)\n1> (massa,17)\n3> (non,54)\n1> (leo,24)\n3> (metus,18)\n1> (suscipit,16)\n3> (metus,19)\n1> (neque,21)\n3> (vitae,55)\n1> (neque,22)\n3> (porta,8)\n1> (massa,18)\n3> (pellentesque,40)\n1> (ut,42)\n3> (ligula,24)\n1> (suscipit,17)\n3> (fringilla,20)\n1> (arcu,19)\n3> (ligula,25)\n1> (maecenas,16)\n3> (pellentesque,41)\n1> (nec,37)\n3> (tristique,33)\n1> (suspendisse,15)\n3> (pellentesque,42)\n1> (sapien,17)\n3> (vitae,56)\n1> (interdum,16)\n3> (pellentesque,43)\n1> (sem,23)\n3> (pellentesque,44)\n1> (ipsum,26)\n3> (imperdiet,17)\n1> (massa,19)\n3> (ultricies,15)\n1> (sem,24)\n3> (non,55)\n1> (ut,43)\n3> (pellentesque,45)\n1> (magna,16)\n3> (porta,9)\n1> (ipsum,27)\n3> (facilisis,19)\n1> (primis,2)\n3> (pellentesque,46)\n1> (ultrices,12)\n3> (tristique,34)\n1> (posuere,17)\n3> (nisi,28)\n1> (curae,1)\n3> (phasellus,12)\n1> (sapien,18)\n3> (imperdiet,18)\n1> (ut,44)\n3> (porta,10)\n1> (sapien,19)\n3> (lorem,22)\n1> (sem,25)\n3> (facilisis,20)\n1> (maecenas,17)\n3> (vitae,57)\n1> (morbi,15)\n3> (ligula,26)\n1> (senectus,3)\n3> (pellentesque,47)\n1> (fames,4)\n3> (nullam,16)\n1> (ac,21)\n3> (purus,19)\n1> (turpis,19)\n3> (tristique,35)\n1> (maecenas,18)\n3> (porta,11)\n1> (praesent,17)\n3> (nisi,29)\n1> (nunc,34)\n3> (lorem,23)\n1> (ipsum,28)\n3> (nisi,30)\n1> (ac,22)\n3> (metus,20)\n1> (penatibus,3)\n3> (purus,20)\n1> (montes,3)\n3> (volutpat,14)\n1> (mus,3)\n3> (consequat,16)\n1> (nec,38)\n3> (iaculis,20)\n1> (finibus,18)\n3> (tristique,36)\n1> (ipsum,29)\n3> (ligula,27)\n1> (fusce,12)\n3> (phasellus,13)\n1> (magna,17)\n3> (pellentesque,48)\n1> (magna,18)\n3> (fringilla,21)\n1> (nec,39)\n3> (nisi,31)\n1> (ut,45)\n3> (nullam,17)\n1> (morbi,16)\n3> (facilisis,21)\n1> (senectus,4)\n3> (pellentesque,49)\n1> (fames,5)\n3> (ultricies,16)\n1> (ac,23)\n3> (lorem,24)\n1> (turpis,20)\n3> (non,56)\n1> (libero,18)\n3> (dolor,32)\n1> (interdum,17)\n3> (nisi,32)\n1> (mollis,11)\n3> (ligula,28)\n1> (maecenas,19)\n3> (tristique,37)\n1> (posuere,18)\n3> (porta,12)\n1> (turpis,21)\n3> (pellentesque,50)\n1> (sem,26)\n3> (non,57)\n1> (ultrices,13)\n3> (metus,21)\n1> (massa,20)\n1> (finibus,19)\n1> (dignissim,13)\n1> (ut,46)\n3> (lorem,25)\n1> (nunc,35)\n1> (nec,40)\n1> (enim,15)\n1> (quisque,13)\n1> (finibus,20)\n1> (ipsum,30)\n1> (turpis,22)\n1> (posuere,19)\n1> (ipsum,31)\n1> (morbi,17)\n3> (non,58)\n1> (senectus,5)\n3> (facilisis,22)\n1> (fames,6)\n3> (dolor,33)\n1> (ac,24)\n3> (imperdiet,19)\n1> (turpis,23)\n3> (ornare,17)\n1> (arcu,20)\n3> (vitae,58)\n1> (dignissim,14)\n3> (nisi,33)\n1> (massa,21)\n3> (non,59)\n1> (sem,27)\n3> (vitae,59)\n1> (nec,41)\n3> (porta,13)\n1> (sem,28)\n3> (ligula,29)\n1> (fusce,13)\n3> (vitae,60)\n1> (ut,47)\n3> (ultricies,17)\n1> (interdum,18)\n3> (tristique,38)\n1> (sapien,20)\n3> (phasellus,14)\n1> (enim,16)\n3> (non,60)\n1> (finibus,21)\n3> (tristique,39)\n1> (nunc,36)\n3> (facilisis,23)\n1> (finibus,22)\n3> (dolor,34)\n1> (nunc,37)\n3> (non,61)\n1> (ipsum,32)\n3> (ligula,30)\n1> (ultrices,14)\n3> (porta,14)\n1> (sapien,21)\n3> (non,62)\n1> (posuere,20)\n3> (facilisis,24)\n1> (sem,29)\n3> (nullam,18)\n1> (sem,30)\n3> (porta,15)\n1> (quisque,14)\n3> (lorem,26)\n1> (ut,48)\n3> (facilisis,25)\n1> (penatibus,4)\n3> (vitae,61)\n1> (montes,4)\n3> (porta,16)\n1> (mus,4)\n3> (vitae,62)\n1> (interdum,19)\n3> (ultricies,18)\n1> (fames,7)\n3> (porta,17)\n1> (ac,25)\n3> (nisi,34)\n1> (ipsum,33)\n3> (lorem,27)\n1> (primis,3)\n3> (phasellus,15)\n1> (nunc,38)\n3> (iaculis,21)\n1> (ac,26)\n3> (dolor,35)\n1> (arcu,21)\n3> (consequat,17)\n1> (venenatis,10)\n3> (dolor,36)\n1> (turpis,24)\n3> (nisi,35)\n1> (venenatis,11)\n3> (phasellus,16)\n1> (fusce,14)\n3> (lorem,28)\n1> (venenatis,12)\n3> (tristique,40)\n1> (finibus,23)\n3> (dolor,37)\n1> (nunc,39)\n3> (nisi,36)\n1> (libero,19)\n3> (purus,21)\n1> (ac,27)\n3> (phasellus,17)\n1> (sapien,22)\n3> (non,63)\n1> (ipsum,34)\n3> (volutpat,15)\n1> (rutrum,10)\n3> (metus,22)\n1> (ipsum,35)\n3> (lorem,29)\n1> (nec,42)\n3> (dolor,38)\n1> (fusce,15)\n3> (pellentesque,51)\n1> (ipsum,36)\n3> (lorem,30)\n1> (suspendisse,16)\n3> (volutpat,16)\n1> (nec,43)\n3> (ultricies,19)\n1> (ipsum,37)\n3> (porta,18)\n1> (posuere,21)\n3> (non,64)\n1> (suspendisse,17)\n3> (vitae,63)\n1> (dignissim,15)\n3> (iaculis,22)\n1> (ipsum,38)\n3> (lorem,31)\n1> (nec,44)\n3> (volutpat,17)\n1> (neque,23)\n3> (porta,19)\n1> (ut,49)\n3> (ornare,18)\n1> (massa,22)\n3> (metus,23)\n1> (venenatis,13)\n3> (pellentesque,52)\n1> (libero,20)\n3> (non,65)\n1> (neque,24)\n3> (ultricies,20)\n1> (ac,28)\n3> (nisi,37)\n1> (rutrum,11)\n3> (dolor,39)\n1> (arcu,22)\n3> (non,66)\n1> (libero,21)\n3> (imperdiet,20)\n1> (leo,25)\n3> (nisi,38)\n1> (magna,19)\n3> (non,67)\n1> (ut,50)\n3> (porta,20)\n1> (posuere,22)\n3> (dolor,40)\n1> (libero,22)\n3> (volutpat,18)\n1> (maecenas,20)\n3> (ultricies,21)\n1> (ipsum,39)\n3> (lorem,32)\n1> (adipiscing,3)\n3> (iaculis,23)\n1> (maecenas,21)\n3> (phasellus,18)\n1> (leo,26)\n3> (non,68)\n1> (ipsum,40)\n3> (non,69)\n1> (venenatis,14)\n3> (lorem,33)\n1> (ut,51)\n3> (porta,21)\n1> (libero,23)\n3> (volutpat,19)\n1> (neque,25)\n3> (tristique,41)\n1> (nec,45)\n3> (pellentesque,53)\n1> (enim,17)\n3> (non,70)\n1> (massa,23)\n3> (porta,22)\n1> (ut,52)\n3> (non,71)\n1> (turpis,25)\n3> (pellentesque,54)\n1> (nec,46)\n3> (vitae,64)\n1> (nunc,40)\n3> (facilisis,26)\n1> (ipsum,41)\n3> (porta,23)\n1> (interdum,20)\n3> (ligula,31)\n1> (ut,53)\n3> (iaculis,24)\n1> (leo,27)\n3> (consequat,18)\n1> (dignissim,16)\n3> (hac,6)\n1> (ut,54)\n3> (habitasse,6)\n1> (posuere,23)\n3> (dictumst,6)\n1> (massa,24)\n3> (non,72)\n1> (ipsum,42)\n3> (vitae,65)\n1> (leo,28)\n3> (pellentesque,55)\n1> (dignissim,17)\n3> (vitae,66)\n1> (turpis,26)\n3> (non,73)\n1> (sapien,23)\n3> (phasellus,19)\n1> (suspendisse,18)\n3> (consequat,19)\n1> (venenatis,15)\n3> (pellentesque,56)\n1> (enim,18)\n3> (ornare,19)\n1> (dignissim,18)\n3> (non,74)\n1> (venenatis,16)\n3> (ligula,32)\n1> (fusce,16)\n3> (non,75)\n1> (enim,19)\n3> (lorem,34)\n1> (libero,24)\n3> (purus,22)\n1> (enim,20)\n3> (non,76)\n1> (sapien,24)\n3> (imperdiet,21)\n1> (ipsum,43)\n3> (purus,23)\n1> (leo,29)\n3> (vitae,67)\n1> (posuere,24)\n3> (non,77)\n1> (ultrices,15)\n3> (lorem,35)\n1> (nunc,41)\n3> (non,78)\n1> (arcu,23)\n3> (ornare,20)\n1> (nec,47)\n3> (porta,24)\n1> (posuere,25)\n3> (ultricies,22)\n1> (ut,55)\n3> (consequat,20)\n1> (posuere,26)\n3> (porta,25)\n1> (maecenas,22)\n3> (non,79)\n1> (posuere,27)\n3> (vitae,68)\n1> (arcu,24)\n3> (porta,26)\n1> (magna,20)\n3> (tristique,42)\n1> (ac,29)\n3> (vitae,69)\n1> (ipsum,44)\n3> (dolor,41)\n1> (nunc,42)\n3> (ligula,33)\n1> (nec,48)\n3> (non,80)\n1> (arcu,25)\n3> (metus,24)\n1> (libero,25)\n3> (iaculis,25)\n1> (morbi,18)\n3> (facilisis,27)\n1> (senectus,6)\n3> (metus,25)\n1> (fames,8)\n3> (nisi,39)\n1> (ac,30)\n3> (iaculis,26)\n1> (turpis,27)\n3> (metus,26)\n1> (morbi,19)\n3> (vitae,70)\n1> (suscipit,18)\n3> (nisi,40)\n1> (turpis,28)\n3> (phasellus,20)\n1> (ac,31)\n3> (iaculis,27)\n1> (morbi,20)\n3> (lorem,36)\n1> (rutrum,12)\n3> (pellentesque,57)\n1> (venenatis,17)\n3> (vitae,71)\n1> (magna,21)\n3> (porta,27)\n1> (ultrices,16)\n3> (fringilla,22)\n1> (neque,26)\n3> (pellentesque,58)\n1> (ultrices,17)\n3> (ultricies,23)\n1> (maecenas,23)\n3> (purus,24)\n1> (suscipit,19)\n3> (iaculis,28)\n1> (sapien,25)\n3> (tristique,43)\n1> (nec,49)\n3> (nisi,41)\n1> (ac,32)\n3> (imperdiet,22)\n1> (mollis,12)\n3> (nullam,19)\n1> (maecenas,24)\n3> (non,81)\n1> (suspendisse,19)\n3> (non,82)\n1> (nec,50)\n3> (metus,27)\n1> (finibus,24)\n3> (vitae,72)\n1> (rutrum,13)\n3> (dolor,42)\n1> (magna,22)\n3> (ultricies,24)\n1> (ut,56)\n3> (non,83)\n1> (leo,30)\n3> (nisi,42)\n1> (nunc,43)\n3> (lorem,37)\n1> (ipsum,45)\n3> (dolor,43)\n1> (venenatis,18)\n3> (vitae,73)\n1> (neque,27)\n3> (phasellus,21)\n1> (nunc,44)\n3> (pellentesque,59)\n1> (sapien,26)\n3> (nisi,43)\n1> (ut,57)\n3> (ornare,21)\n1> (massa,25)\n3> (purus,25)\n1> (morbi,21)\n3> (metus,28)\n1> (ut,58)\n3> (ultricies,25)\n1> (ac,33)\n3> (non,84)\n1> (libero,26)\n3> (pellentesque,60)\n1> (ultrices,18)\n3> (pellentesque,61)\n1> (dignissim,19)\n3> (facilisis,28)\n1> (ut,59)\n3> (porta,28)\n1> (enim,21)\n3> (iaculis,29)\n1> (rutrum,14)\n3> (purus,26)\n1> (ut,60)\n3> (vitae,74)\n1> (neque,28)\n3> (fringilla,23)\n1> (sapien,27)\n3> (imperdiet,23)\n1> (nunc,45)\n3> (ornare,22)\n1> (finibus,25)\n3> (ornare,23)\n1> (nec,51)\n3> (ornare,24)\n1> (venenatis,19)\n3> (purus,27)\n1> (ipsum,46)\n3> (facilisis,29)\n1> (mollis,13)\n3> (volutpat,20)\n1> (libero,27)\n3> (metus,29)\n1> (nec,52)\n3> (vitae,75)\n1> (interdum,21)\n3> (non,85)\n1> (ultrices,19)\n3> (consequat,21)\n1> (suspendisse,20)\n3> (metus,30)\n1> (ipsum,47)\n3> (pellentesque,62)\n1> (interdum,22)\n3> (tristique,44)\n1> (suscipit,20)\n3> (non,86)\n1> (ipsum,48)\n3> (dolor,44)\n3> (pellentesque,63)\n3> (pellentesque,64)\n3> (pellentesque,65)\n3> (vitae,76)\n3> (pellentesque,66)\n3> (nullam,20)\n3> (metus,31)\n3> (ultricies,26)\n3> (iaculis,30)\n3> (pellentesque,67)\n3> (pellentesque,68)\n3> (pellentesque,69)\n3> (non,87)\n3> (fringilla,24)\n3> (tristique,45)\n3> (consequat,22)\n3> (purus,28)\n3> (pellentesque,70)\n3> (ultricies,27)\n3> (ligula,34)\n3> (dolor,45)\n3> (tristique,46)\n3> (vitae,77)\n3> (volutpat,21)\n3> (dolor,46)\n3> (ligula,35)\n3> (porta,29)\n3> (vitae,78)\n3> (lorem,38)\n3> (ligula,36)\n1> (nunc,46)\n3> (pellentesque,71)\n1> (enim,22)\n3> (lorem,39)\n1> (suscipit,21)\n3> (vitae,79)\n1> (ac,34)\n3> (facilisis,30)\n1> (sapien,28)\n3> (purus,29)\n1> (sem,31)\n3> (non,88)\n1> (dignissim,20)\n3> (purus,30)\n1> (eleifend,12)\n3> (imperdiet,24)\n1> (ipsum,49)\n3> (lorem,40)\n1> (ut,61)\n3> (nullam,21)\n1> (morbi,22)\n3> (iaculis,31)\n1> (leo,31)\n3> (non,89)\n1> (sapien,29)\n3> (pellentesque,72)\n1> (interdum,23)\n3> (nisi,44)\n1> (nunc,47)\n3> (facilisis,31)\n1> (ultrices,20)\n3> (lorem,41)\n1> (dignissim,21)\n3> (metus,32)\n1> (leo,32)\n3> (hac,7)\n1> (ultrices,21)\n3> (habitasse,7)\n1> (turpis,29)\n3> (dictumst,7)\n1> (suspendisse,21)\n3> (consequat,23)\n1> (ut,62)\n3> (vitae,80)\n1> (sapien,30)\n3> (nisi,45)\n1> (sapien,31)\n3> (facilisis,32)\n1> (ipsum,50)\n3> (lorem,42)\n1> (eleifend,13)\n3> (non,90)\n1> (praesent,18)\n3> (metus,33)\n1> (neque,29)\n3> (fringilla,25)\n1> (morbi,23)\n3> (dolor,47)\n1> (senectus,7)\n3> (ultricies,28)\n1> (fames,9)\n3> (hac,8)\n1> (ac,35)\n3> (habitasse,8)\n1> (turpis,30)\n3> (dictumst,8)\n1> (ipsum,51)\n3> (ornare,25)\n1> (primis,4)\n3> (non,91)\n1> (ultrices,22)\n3> (pellentesque,73)\n1> (posuere,28)\n3> (consequat,24)\n1> (curae,2)\n3> (lorem,43)\n1> (interdum,24)\n3> (ornare,26)\n1> (eleifend,14)\n3> (consequat,25)\n1> (nunc,48)\n3> (metus,34)\n1> (magna,23)\n3> (hac,9)\n1> (nunc,49)\n3> (habitasse,9)\n1> (arcu,26)\n3> (dictumst,9)\n1> (morbi,24)\n3> (phasellus,22)\n1> (rutrum,15)\n3> (metus,35)\n1> (nec,53)\n3> (nullam,22)\n1> (ac,36)\n1> (sem,32)\n1> (massa,26)\n3> (non,92)\n1> (interdum,25)\n1> (ut,63)\n1> (dignissim,22)\n1> (morbi,25)\n1> (senectus,8)\n1> (fames,10)\n1> (ac,37)\n3> (ornare,27)\n1> (turpis,31)\n3> (non,93)\n1> (morbi,26)\n3> (non,94)\n1> (neque,30)\n3> (imperdiet,25)\n1> (turpis,32)\n3> (purus,31)\n1> (ut,64)\n3> (nisi,46)\n1> (rutrum,16)\n3> (iaculis,32)\n1> (suspendisse,22)\n3> (vitae,81)\n1> (nec,54)\n3> (pellentesque,74)\n1> (ipsum,52)\n3> (tristique,47)\n1> (mollis,14)\n3> (ornare,28)\n1> (quisque,15)\n3> (ligula,37)\n1> (ut,65)\n3> (lorem,44)\n1> (libero,28)\n3> (nisi,47)\n1> (massa,27)\n3> (dolor,48)\n1> (ultrices,23)\n3> (vitae,82)\n1> (libero,29)\n3> (consequat,26)\n1> (neque,31)\n3> (ligula,38)\n1> (mollis,15)\n3> (consequat,27)\n1> (ac,38)\n3> (vitae,83)\n1> (dignissim,23)\n3> (volutpat,22)\n1> (ipsum,53)\n3> (vitae,84)\n1> (arcu,27)\n3> (nullam,23)\n1> (ut,66)\n3> (dolor,49)\n1> (sapien,32)\n3> (facilisis,33)\n1> (quisque,16)\n3> (ligula,39)\n1> (magna,24)\n3> (pellentesque,75)\n1> (finibus,26)\n3> (volutpat,23)\n1> (ultrices,24)\n3> (non,95)\n1> (ultrices,25)\n3> (tristique,48)\n1> (nec,55)\n3> (facilisis,34)\n1> (ac,39)\n3> (vitae,85)\n1> (ipsum,54)\n3> (non,96)\n1> (turpis,33)\n3> (purus,32)\n1> (praesent,19)\n3> (fringilla,26)\n1> (magna,25)\n3> (ornare,29)\n1> (ultrices,26)\n3> (nullam,24)\n1> (dignissim,24)\n3> (non,97)\n1> (neque,32)\n3> (consequat,28)\n1> (venenatis,20)\n3> (vitae,86)\n1> (magna,26)\n3> (metus,36)\n1> (massa,28)\n3> (volutpat,24)\n1> (eleifend,15)\n3> (pellentesque,76)\n1> (leo,33)\n3> (tristique,49)\n1> (massa,29)\n3> (facilisis,35)\n1> (massa,30)\n3> (tristique,50)\n1> (quisque,17)\n3> (imperdiet,26)\n1> (arcu,28)\n3> (ornare,30)\n1> (libero,30)\n3> (porta,30)\n1> (ut,67)\n3> (non,98)\n1> (ac,40)\n3> (tristique,51)\n1> (finibus,27)\n3> (non,99)\n1> (rutrum,17)\n3> (fringilla,27)\n1> (enim,23)\n3> (non,100)\n1> (dignissim,25)\n3> (imperdiet,27)\n1> (libero,31)\n3> (metus,37)\n1> (eleifend,16)\n3> (imperdiet,28)\n1> (ultrices,27)\n3> (vitae,87)\n1> (nec,56)\n3> (tristique,52)\n1> (suspendisse,23)\n3> (volutpat,25)\n1> (nec,57)\n3> (vitae,88)\n1> (nunc,50)\n3> (porta,31)\n1> (ut,68)\n3> (imperdiet,29)\n1> (arcu,29)\n3> (vitae,89)\n1> (ut,69)\n3> (consequat,29)\n1> (eleifend,17)\n3> (iaculis,33)\n1> (nec,58)\n3> (ultricies,29)\n1> (mollis,16)\n3> (nisi,48)\n1> (ac,41)\n3> (iaculis,34)\n1> (suspendisse,24)\n3> (volutpat,26)\n1> (interdum,26)\n3> (consequat,30)\n1> (sapien,33)\n3> (pellentesque,77)\n1> (sem,33)\n3> (purus,33)\n1> (maecenas,25)\n3> (nisi,49)\n1> (eleifend,18)\n3> (ultricies,30)\n3> (non,101)\n3> (iaculis,35)\n3> (dolor,50)\n1> (posuere,29)\n3> (porta,32)\n3> (vitae,90)\n3> (purus,34)\n3> (ligula,40)\n3> (iaculis,36)\n3> (iaculis,37)\n3> (lorem,45)\n3> (metus,38)\n3> (tristique,53)\n3> (vitae,91)\n1> (sem,34)\n3> (ultricies,31)\n1> (mollis,17)\n3> (ligula,41)\n1> (suscipit,22)\n3> (nullam,25)\n1> (suspendisse,25)\n3> (nisi,50)\n1> (venenatis,21)\n3> (metus,39)\n1> (sem,35)\n3> (consequat,31)\n1> (ut,70)\n3> (consequat,32)\n1> (eleifend,19)\n3> (imperdiet,30)\n1> (massa,31)\n3> (purus,35)\n1> (quisque,18)\n3> (non,102)\n1> (nec,59)\n3> (consequat,33)\n1> (interdum,27)\n3> (phasellus,23)\n1> (nunc,51)\n3> (pellentesque,78)\n1> (nec,60)\n3> (ultricies,32)\n1> (suspendisse,26)\n3> (ligula,42)\n1> (interdum,28)\n3> (purus,36)\n1> (sapien,34)\n3> (ligula,43)\n1> (libero,32)\n3> (consequat,34)\n1> (libero,33)\n3> (nullam,26)\n1> (finibus,28)\n3> (volutpat,27)\n1> (ut,71)\n3> (dolor,51)\n1> (libero,34)\n3> (iaculis,38)\n1> (leo,34)\n3> (porta,33)\n1> (sem,36)\n3> (nisi,51)\n1> (sociosqu,3)\n3> (volutpat,28)\n1> (inceptos,3)\n3> (ultricies,33)\n1> (himenaeos,3)\n3> (metus,40)\n1> (leo,35)\n3> (lorem,46)\n1> (ultrices,28)\n3> (volutpat,29)\n1> (quisque,19)\n3> (fringilla,28)\n1> (mollis,18)\n3> (non,103)\n1> (enim,24)\n3> (ornare,31)\n1> (turpis,34)\n3> (porta,34)\n1> (massa,32)\n3> (pellentesque,79)\n3> (non,104)\n3> (ornare,32)\n3> (metus,41)\n3> (nullam,27)\n3> (pellentesque,80)\n3> (volutpat,30)\n3> (vitae,92)\n1> (fusce,17)\n3> (ligula,44)\n1> (rutrum,18)\n3> (dolor,52)\n1> (ut,72)\n3> (vitae,93)\n1> (neque,33)\n3> (fringilla,29)\n3> (ligula,45)\n3> (non,105)\n1> (maecenas,26)\n3> (ornare,33)\n1> (ut,73)\n5> (molestie,1)\n3> (ultricies,34)\n1> (maecenas,27)\n3> (phasellus,24)\n1> (dignissim,26)\n5> (lacinia,1)\n1> (suspendisse,27)\n3> (pellentesque,81)\n1> (ac,42)\n5> (sodales,1)\n3> (nullam,28)\n5> (id,1)\n3> (non,106)\n5> (tortor,1)\n3> (lorem,47)\n3> (phasellus,25)\n1> (suspendisse,28)\n3> (iaculis,39)\n1> (ac,43)\n3> (vitae,94)\n1> (posuere,30)\n1> (quisque,20)\n1> (rutrum,19)\n1> (praesent,20)\n1> (maecenas,28)\n1> (nec,61)\n3> (volutpat,31)\n1> (suspendisse,29)\n3> (metus,42)\n1> (morbi,27)\n3> (metus,43)\n1> (nec,62)\n1> (libero,35)\n1> (ut,74)\n3> (non,107)\n1> (nunc,52)\n3> (tristique,54)\n1> (suspendisse,30)\n3> (lorem,48)\n1> (quisque,21)\n1> (eleifend,20)\n1> (ac,44)\n3> (ultricies,35)\n1> (ipsum,55)\n5> (luctus,1)\n1> (venenatis,22)\n1> (nunc,53)\n5> (eget,1)\n3> (dolor,53)\n1> (eleifend,21)\n3> (consequat,35)\n1> (venenatis,23)\n3> (vitae,95)\n1> (ut,75)\n1> (ut,76)\n1> (praesent,21)\n3> (vitae,96)\n1> (ac,45)\n3> (metus,44)\n5> (blandit,1)\n3> (metus,45)\n1> (nunc,54)\n3> (dolor,54)\n1> (sem,37)\n3> (lorem,49)\n1> (praesent,22)\n3> (vitae,97)\n3> (vitae,98)\n3> (facilisis,36)\n5> (nulla,1)\n3> (ornare,34)\n5> (malesuada,1)\n5> (in,1)\n5> (sollicitudin,1)\n5> (eget,2)\n5> (id,2)\n3> (non,108)\n5> (in,2)\n3> (consequat,36)\n5> (eget,3)\n3> (fringilla,30)\n5> (dapibus,1)\n5> (sollicitudin,2)\n5> (eget,4)\n3> (purus,37)\n5> (luctus,2)\n3> (vitae,99)\n5> (sodales,2)\n5> (tortor,2)\n3> (porta,35)\n5> (sodales,3)\n3> (non,109)\n5> (orci,1)\n3> (nisi,52)\n1> (nec,63)\n5> (eget,5)\n3> (nisi,53)\n5> (blandit,2)\n1> (arcu,30)\n3> (pellentesque,82)\n1> (venenatis,24)\n3> (lorem,50)\n1> (suspendisse,31)\n3> (consequat,37)\n3> (iaculis,40)\n3> (vitae,100)\n1> (dignissim,27)\n3> (purus,38)\n1> (ultrices,29)\n3> (non,110)\n1> (interdum,29)\n1> (nec,64)\n1> (nec,65)\n3> (lorem,51)\n1> (ultrices,30)\n3> (non,111)\n1> (enim,25)\n3> (ultricies,36)\n3> (ultricies,37)\n3> (nullam,29)\n1> (nunc,55)\n3> (facilisis,37)\n5> (orci,2)\n1> (ut,77)\n3> (tristique,55)\n1> (mollis,19)\n3> (pellentesque,83)\n1> (nec,66)\n3> (non,112)\n3> (lorem,52)\n3> (metus,46)\n1> (magna,27)\n3> (dolor,55)\n5> (magnis,1)\n1> (arcu,31)\n3> (tristique,56)\n5> (in,3)\n1> (venenatis,25)\n3> (nisi,54)\n5> (efficitur,1)\n1> (ut,78)\n5> (quam,1)\n1> (nec,67)\n5> (velit,1)\n1> (nec,68)\n1> (rutrum,20)\n5> (id,3)\n3> (facilisis,38)\n5> (sodales,4)\n3> (imperdiet,31)\n1> (fusce,18)\n5> (eget,6)\n3> (purus,39)\n1> (libero,36)\n5> (blandit,3)\n3> (dolor,56)\n5> (molestie,2)\n1> (magna,28)\n3> (nullam,30)\n5> (etiam,1)\n3> (pellentesque,84)\n5> (orci,3)\n3> (tristique,57)\n5> (quam,2)\n5> (id,4)\n5> (sollicitudin,3)\n3> (lorem,53)\n5> (molestie,3)\n3> (facilisis,39)\n5> (orci,4)\n1> (fusce,19)\n5> (molestie,4)\n3> (vitae,101)\n5> (molestie,5)\n1> (nec,69)\n3> (pellentesque,85)\n5> (pharetra,1)\n1> (sapien,35)\n3> (pellentesque,86)\n1> (ipsum,56)\n3> (fringilla,31)\n5> (blandit,4)\n1> (adipiscing,4)\n3> (dolor,57)\n5> (nulla,2)\n1> (nunc,56)\n3> (pellentesque,87)\n5> (in,4)\n3> (lorem,54)\n1> (ac,46)\n5> (sodales,5)\n1> (ut,79)\n5> (pharetra,2)\n3> (dolor,58)\n1> (enim,26)\n3> (imperdiet,32)\n1> (turpis,35)\n5> (tortor,3)\n1> (nunc,57)\n3> (non,113)\n5> (molestie,6)\n3> (phasellus,26)\n5> (nulla,3)\n1> (mollis,20)\n5> (quam,3)\n1> (maecenas,29)\n3> (tristique,58)\n1> (neque,34)\n3> (nisi,55)\n5> (id,5)\n3> (non,114)\n5> (eget,7)\n3> (dolor,59)\n5> (pharetra,3)\n5> (id,6)\n5> (dapibus,2)\n3> (lorem,55)\n5> (sollicitudin,4)\n3> (purus,40)\n5> (sollicitudin,5)\n1> (turpis,36)\n3> (phasellus,27)\n5> (pharetra,4)\n3> (phasellus,28)\n1> (eleifend,22)\n3> (non,115)\n1> (leo,36)\n3> (non,116)\n1> (enim,27)\n1> (arcu,32)\n1> (ac,47)\n3> (lorem,56)\n1> (arcu,33)\n3> (fringilla,32)\n5> (luctus,3)\n1> (dignissim,28)\n3> (lorem,57)\n5> (quam,4)\n1> (ut,80)\n3> (tristique,59)\n5> (sagittis,1)\n1> (enim,28)\n5> (eget,8)\n3> (purus,41)\n1> (finibus,29)\n3> (imperdiet,33)\n1> (enim,29)\n5> (quam,5)\n1> (sapien,36)\n3> (imperdiet,34)\n1> (suspendisse,32)\n5> (tortor,4)\n1> (nunc,58)\n3> (imperdiet,35)\n5> (velit,2)\n3> (facilisis,40)\n5> (nulla,4)\n3> (phasellus,29)\n5> (quam,6)\n5> (nulla,5)\n5> (luctus,4)\n5> (sodales,6)\n3> (fringilla,33)\n5> (eget,9)\n3> (nisi,56)\n5> (blandit,5)\n5> (pharetra,5)\n3> (dolor,60)\n5> (velit,3)\n3> (ultricies,38)\n5> (nulla,6)\n3> (ligula,46)\n3> (metus,47)\n3> (facilisis,41)\n3> (pellentesque,88)\n5> (orci,5)\n3> (imperdiet,36)\n5> (eget,10)\n3> (nisi,57)\n5> (quam,7)\n5> (eget,11)\n5> (etiam,2)\n3> (dolor,61)\n5> (id,7)\n1> (venenatis,26)\n3> (lorem,58)\n5> (lacinia,2)\n1> (neque,35)\n5> (etiam,3)\n1> (eleifend,23)\n3> (ornare,35)\n1> (finibus,30)\n5> (id,8)\n1> (fusce,20)\n3> (vitae,102)\n5> (velit,4)\n3> (consequat,38)\n5> (sollicitudin,6)\n1> (ut,81)\n5> (lacinia,3)\n1> (neque,36)\n5> (in,5)\n5> (etiam,4)\n1> (ipsum,57)\n3> (metus,48)\n1> (nec,70)\n5> (tortor,5)\n1> (libero,37)\n3> (iaculis,41)\n5> (malesuada,2)\n3> (lorem,59)\n1> (nec,71)\n3> (non,117)\n5> (orci,6)\n1> (turpis,37)\n3> (non,118)\n1> (sapien,37)\n3> (iaculis,42)\n1> (sem,38)\n3> (iaculis,43)\n3> (non,119)\n3> (porta,36)\n1> (turpis,38)\n3> (non,120)\n1> (nec,72)\n5> (in,6)\n3> (purus,42)\n1> (nunc,59)\n3> (pellentesque,89)\n5> (in,7)\n3> (consequat,39)\n5> (nulla,7)\n1> (quisque,22)\n5> (habitant,1)\n3> (purus,43)\n1> (finibus,31)\n3> (consequat,40)\n1> (ut,82)\n5> (netus,1)\n3> (volutpat,32)\n5> (malesuada,3)\n1> (morbi,28)\n5> (sodales,7)\n3> (phasellus,30)\n1> (ut,83)\n5> (quam,8)\n3> (consequat,41)\n5> (id,9)\n3> (nullam,31)\n1> (sapien,38)\n5> (velit,5)\n1> (enim,30)\n3> (tristique,60)\n1> (finibus,32)\n5> (efficitur,2)\n1> (suspendisse,33)\n5> (luctus,5)\n1> (enim,31)\n5> (in,8)\n3> (purus,44)\n1> (morbi,29)\n5> (quam,9)\n1> (praesent,23)\n5> (in,9)\n1> (neque,37)\n5> (malesuada,4)\n1> (sapien,39)\n5> (sodales,8)\n3> (lorem,60)\n1> (suscipit,23)\n3> (dolor,62)\n1> (libero,38)\n3> (vitae,103)\n1> (ultrices,31)\n1> (nunc,60)\n1> (libero,39)\n3> (vitae,104)\n1> (nunc,61)\n3> (volutpat,33)\n1> (fusce,21)\n5> (nisl,1)\n3> (porta,37)\n1> (suscipit,24)\n3> (porta,38)\n5> (nulla,8)\n3> (facilisis,42)\n1> (ac,48)\n3> (porta,39)\n1> (ut,84)\n3> (pellentesque,90)\n5> (dapibus,3)\n3> (pellentesque,91)\n1> (turpis,39)\n3> (tristique,61)\n1> (libero,40)\n3> (pellentesque,92)\n1> (arcu,34)\n1> (nunc,62)\n1> (ac,49)\n3> (non,121)\n1> (libero,41)\n3> (nisi,58)\n1> (sapien,40)\n3> (phasellus,31)\n3> (vitae,105)\n3> (phasellus,32)\n1> (venenatis,27)\n3> (tristique,62)\n1> (praesent,24)\n5> (velit,6)\n3> (pellentesque,93)\n1> (posuere,31)\n3> (phasellus,33)\n5> (lacinia,4)\n3> (consequat,42)\n5> (etiam,5)\n3> (lorem,61)\n5> (tortor,6)\n5> (eget,12)\n3> (pellentesque,94)\n1> (turpis,40)\n3> (nisi,59)\n1> (nec,73)\n3> (imperdiet,37)\n1> (nunc,63)\n1> (morbi,30)\n1> (turpis,41)\n3> (lorem,62)\n1> (magna,29)\n3> (nisi,60)\n5> (malesuada,5)\n3> (purus,45)\n1> (eleifend,24)\n3> (ligula,47)\n5> (in,10)\n3> (vitae,106)\n5> (nulla,9)\n3> (imperdiet,38)\n5> (velit,7)\n5> (quam,10)\n5> (etiam,6)\n3> (purus,46)\n5> (in,11)\n3> (vitae,107)\n1> (ac,50)\n5> (dapibus,4)\n3> (ornare,36)\n1> (ac,51)\n3> (purus,47)\n1> (ultrices,32)\n3> (lorem,63)\n3> (vitae,108)\n3> (ornare,37)\n3> (nisi,61)\n1> (ac,52)\n3> (ligula,48)\n5> (orci,7)\n1> (leo,37)\n3> (pellentesque,95)\n5> (in,12)\n3> (vitae,109)\n1> (ut,85)\n3> (non,122)\n5> (velit,8)\n3> (ligula,49)\n5> (quam,11)\n3> (metus,49)\n5> (nisl,2)\n5> (luctus,6)\n5> (in,13)\n5> (platea,1)\n3> (ligula,50)\n5> (in,14)\n3> (volutpat,34)\n1> (ipsum,58)\n5> (nisl,3)\n3> (phasellus,34)\n1> (quisque,23)\n5> (malesuada,6)\n1> (nec,74)\n3> (ligula,51)\n5> (sagittis,2)\n3> (lorem,64)\n1> (posuere,32)\n5> (efficitur,3)\n3> (fringilla,34)\n5> (dapibus,5)\n3> (non,123)\n5> (efficitur,4)\n3> (volutpat,35)\n3> (nisi,62)\n3> (metus,50)\n5> (sollicitudin,7)\n3> (vitae,110)\n5> (nisl,4)\n3> (ligula,52)\n1> (nunc,64)\n5> (eget,13)\n3> (ultricies,39)\n5> (quam,12)\n3> (fringilla,35)\n1> (neque,38)\n3> (iaculis,44)\n1> (ut,86)\n3> (non,124)\n1> (enim,32)\n1> (massa,33)\n1> (nec,75)\n3> (volutpat,36)\n1> (nunc,65)\n3> (purus,48)\n1> (eleifend,25)\n3> (purus,49)\n1> (finibus,33)\n1> (libero,42)\n1> (libero,43)\n3> (ultricies,40)\n1> (suspendisse,34)\n3> (phasellus,35)\n5> (blandit,6)\n3> (tristique,63)\n1> (ultrices,33)\n3> (iaculis,45)\n5> (pharetra,6)\n3> (volutpat,37)\n1> (magna,30)\n3> (ultricies,41)\n5> (molestie,7)\n1> (mollis,21)\n3> (porta,40)\n1> (turpis,42)\n3> (phasellus,36)\n1> (ut,87)\n3> (facilisis,43)\n3> (pellentesque,96)\n3> (purus,50)\n1> (libero,44)\n3> (purus,51)\n1> (finibus,34)\n5> (id,10)\n1> (ac,53)\n3> (ornare,38)\n5> (eget,14)\n1> (massa,34)\n3> (ultricies,42)\n5> (quam,13)\n1> (leo,38)\n5> (nisl,5)\n1> (suscipit,25)\n3> (lorem,65)\n1> (quisque,24)\n3> (non,125)\n5> (in,15)\n3> (non,126)\n1> (interdum,30)\n5> (orci,8)\n1> (arcu,35)\n5> (tortor,7)\n1> (nunc,66)\n1> (venenatis,28)\n1> (nunc,67)\n1> (ac,54)\n1> (suspendisse,35)\n1> (arcu,36)\n4> (convallis,2)\n1> (enim,33)\n4> (vulputate,1)\n1> (quisque,25)\n4> (vel,1)\n1> (rutrum,21)\n3> (lorem,66)\n4> (gravida,1)\n1> (libero,45)\n4> (donec,1)\n1> (venenatis,29)\n3> (pellentesque,97)\n4> (mauris,1)\n1> (venenatis,30)\n3> (ligula,53)\n1> (fusce,22)\n4> (mauris,2)\n1> (sem,39)\n4> (diam,2)\n1> (praesent,25)\n4> (accumsan,1)\n4> (risus,1)\n5> (in,16)\n4> (est,1)\n1> (turpis,43)\n4> (a,2)\n1> (ut,88)\n4> (dui,1)\n1> (massa,35)\n4> (est,2)\n4> (eros,1)\n5> (pharetra,7)\n1> (sem,40)\n5> (dapibus,6)\n1> (ut,89)\n1> (enim,34)\n1> (quisque,26)\n1> (arcu,37)\n1> (ut,90)\n1> (massa,36)\n3> (lorem,67)\n1> (ac,55)\n1> (venenatis,31)\n1> (magna,31)\n1> (suscipit,26)\n3> (pellentesque,98)\n1> (sem,41)\n3> (iaculis,46)\n1> (suspendisse,36)\n3> (facilisis,44)\n1> (arcu,38)\n3> (pellentesque,99)\n1> (maecenas,30)\n3> (ornare,39)\n1> (nec,76)\n3> (metus,51)\n1> (ut,91)\n3> (pellentesque,100)\n1> (posuere,33)\n3> (tristique,64)\n1> (nec,77)\n3> (pellentesque,101)\n1> (magna,32)\n3> (consequat,43)\n1> (turpis,44)\n3> (iaculis,47)\n1> (eleifend,26)\n3> (metus,52)\n1> (turpis,45)\n3> (fringilla,36)\n1> (arcu,39)\n3> (tristique,65)\n1> (massa,37)\n3> (purus,52)\n1> (sapien,41)\n3> (ornare,40)\n1> (nec,78)\n3> (consequat,44)\n1> (massa,38)\n3> (nisi,63)\n1> (morbi,31)\n3> (ultricies,43)\n1> (posuere,34)\n3> (volutpat,38)\n1> (enim,35)\n3> (pellentesque,102)\n1> (quisque,27)\n3> (porta,41)\n1> (suscipit,27)\n3> (non,127)\n1> (neque,39)\n3> (ligula,54)\n1> (finibus,35)\n3> (fringilla,37)\n1> (morbi,32)\n3> (pellentesque,103)\n1> (ut,92)\n3> (fringilla,38)\n1> (neque,40)\n3> (vitae,111)\n1> (dignissim,29)\n3> (iaculis,48)\n1> (leo,39)\n3> (imperdiet,39)\n1> (morbi,33)\n3> (pellentesque,104)\n1> (arcu,40)\n3> (porta,42)\n1> (ac,56)\n3> (nisi,64)\n1> (ipsum,59)\n3> (ultricies,44)\n1> (adipiscing,5)\n3> (tristique,66)\n1> (interdum,31)\n3> (volutpat,39)\n1> (suspendisse,37)\n3> (ornare,41)\n1> (ac,57)\n3> (imperdiet,40)\n1> (massa,39)\n3> (imperdiet,41)\n1> (nec,79)\n3> (pellentesque,105)\n1> (dignissim,30)\n3> (lorem,68)\n1> (ultrices,34)\n3> (facilisis,45)\n1> (sapien,42)\n3> (pellentesque,106)\n1> (turpis,46)\n3> (metus,53)\n3> (dolor,63)\n3> (vitae,112)\n3> (nullam,32)\n1> (suscipit,28)\n3> (nisi,65)\n1> (sem,42)\n3> (dolor,64)\n1> (maecenas,31)\n3> (imperdiet,42)\n1> (interdum,32)\n3> (dolor,65)\n1> (nec,80)\n3> (consequat,45)\n1> (magna,33)\n3> (lorem,69)\n1> (massa,40)\n3> (purus,53)\n1> (ut,93)\n3> (nisi,66)\n1> (arcu,41)\n3> (consequat,46)\n1> (ipsum,60)\n3> (non,128)\n1> (morbi,34)\n3> (ultricies,45)\n1> (suscipit,29)\n3> (nullam,33)\n1> (sem,43)\n3> (nisi,67)\n1> (turpis,47)\n3> (ultricies,46)\n1> (turpis,48)\n3> (consequat,47)\n1> (ac,58)\n3> (pellentesque,107)\n1> (nec,81)\n3> (non,129)\n1> (ipsum,61)\n3> (nisi,68)\n1> (nunc,68)\n3> (metus,54)\n1> (ipsum,62)\n3> (porta,43)\n1> (sem,44)\n3> (iaculis,49)\n1> (sapien,43)\n3> (ultricies,47)\n1> (arcu,42)\n3> (phasellus,37)\n1> (finibus,36)\n3> (fringilla,39)\n1> (neque,41)\n3> (tristique,67)\n1> (dignissim,31)\n3> (nascetur,5)\n1> (ut,94)\n3> (nisi,69)\n1> (ipsum,63)\n3> (porta,44)\n1> (primis,5)\n3> (pellentesque,108)\n1> (ultrices,35)\n3> (vitae,113)\n1> (posuere,35)\n3> (vitae,114)\n1> (curae,3)\n3> (non,130)\n1> (ut,95)\n3> (purus,54)\n1> (fusce,23)\n3> (non,131)\n1> (dignissim,32)\n3> (non,132)\n1> (nunc,69)\n3> (vitae,115)\n1> (suspendisse,38)\n3> (nisi,70)\n1> (mollis,22)\n3> (nullam,34)\n1> (ut,96)\n3> (vitae,116)\n1> (ultrices,36)\n3> (porta,45)\n1> (arcu,43)\n3> (vitae,117)\n1> (interdum,33)\n3> (vitae,118)\n1> (ultrices,37)\n3> (pellentesque,109)\n1> (enim,36)\n3> (vitae,119)\n1> (ut,97)\n3> (vitae,120)\n1> (turpis,49)\n3> (fringilla,40)\n1> (nunc,70)\n3> (porta,46)\n1> (nunc,71)\n3> (nullam,35)\n1> (morbi,35)\n3> (purus,55)\n1> (senectus,9)\n3> (non,133)\n1> (fames,11)\n3> (pellentesque,110)\n1> (ac,59)\n3> (pellentesque,111)\n1> (turpis,50)\n3> (imperdiet,43)\n1> (magna,34)\n3> (vitae,121)\n1> (mollis,23)\n3> (purus,56)\n1> (nunc,72)\n3> (ultricies,48)\n1> (ac,60)\n3> (consequat,48)\n1> (ac,61)\n3> (phasellus,38)\n1> (ut,98)\n3> (vitae,122)\n1> (ipsum,64)\n3> (facilisis,46)\n1> (ut,99)\n3> (consequat,49)\n1> (nec,82)\n3> (non,134)\n1> (leo,40)\n3> (purus,57)\n1> (mollis,24)\n3> (consequat,50)\n1> (magna,35)\n3> (fringilla,41)\n1> (leo,41)\n3> (ligula,55)\n1> (ac,62)\n3> (ultricies,49)\n1> (massa,41)\n3> (lorem,70)\n1> (ac,63)\n3> (dolor,66)\n1> (maecenas,32)\n3> (pellentesque,112)\n1> (libero,46)\n3> (tristique,68)\n1> (enim,37)\n3> (nullam,36)\n1> (suspendisse,39)\n3> (dolor,67)\n1> (ut,100)\n3> (lorem,71)\n1> (libero,47)\n3> (dolor,68)\n1> (interdum,34)\n3> (imperdiet,44)\n1> (morbi,36)\n3> (vitae,123)\n1> (arcu,44)\n3> (dolor,69)\n1> (nec,83)\n3> (facilisis,47)\n1> (arcu,45)\n3> (iaculis,50)\n1> (ut,101)\n3> (vitae,124)\n1> (posuere,36)\n3> (imperdiet,45)\n1> (posuere,37)\n3> (ornare,42)\n1> (ipsum,65)\n3> (lorem,72)\n1> (ac,64)\n3> (phasellus,39)\n1> (nec,84)\n3> (lorem,73)\n1> (fusce,24)\n3> (non,135)\n1> (eleifend,27)\n3> (non,136)\n1> (quisque,28)\n3> (metus,55)\n1> (morbi,37)\n3> (vitae,125)\n1> (leo,42)\n3> (purus,58)\n1> (dignissim,33)\n3> (tristique,69)\n1> (sem,45)\n3> (purus,59)\n1> (nec,85)\n3> (nullam,37)\n1> (nec,86)\n3> (non,137)\n1> (praesent,26)\n3> (purus,60)\n1> (nec,87)\n3> (dolor,70)\n1> (interdum,35)\n3> (volutpat,40)\n1> (suscipit,30)\n3> (purus,61)\n1> (ac,65)\n3> (ligula,56)\n1> (turpis,51)\n3> (metus,56)\n1> (finibus,37)\n3> (pellentesque,113)\n1> (leo,43)\n3> (iaculis,51)\n1> (massa,42)\n3> (pellentesque,114)\n1> (massa,43)\n3> (tristique,70)\n1> (morbi,38)\n3> (fringilla,42)\n1> (ac,66)\n3> (dolor,71)\n1> (interdum,36)\n3> (vitae,126)\n1> (quisque,29)\n3> (fringilla,43)\n1> (magna,36)\n3> (fringilla,44)\n1> (praesent,27)\n3> (imperdiet,46)\n1> (massa,44)\n3> (lorem,74)\n1> (posuere,38)\n3> (hac,10)\n1> (mollis,25)\n3> (habitasse,10)\n1> (nec,88)\n3> (dictumst,10)\n1> (suspendisse,40)\n3> (metus,57)\n1> (suspendisse,41)\n3> (non,138)\n1> (nec,89)\n3> (nullam,38)\n1> (neque,42)\n3> (fringilla,45)\n1> (ut,102)\n3> (pellentesque,115)\n1> (leo,44)\n3> (dolor,72)\n1> (venenatis,32)\n3> (porta,47)\n1> (leo,45)\n3> (lorem,75)\n1> (sapien,44)\n3> (vitae,127)\n1> (interdum,37)\n3> (non,139)\n1> (nunc,73)\n3> (porta,48)\n1> (massa,45)\n3> (porta,49)\n1> (finibus,38)\n3> (metus,58)\n1> (suscipit,31)\n3> (purus,62)\n1> (ipsum,66)\n3> (pellentesque,116)\n1> (morbi,39)\n3> (nisi,71)\n1> (ipsum,67)\n3> (pellentesque,117)\n1> (suscipit,32)\n3> (volutpat,41)\n1> (ac,67)\n3> (nisi,72)\n1> (maecenas,33)\n3> (lorem,76)\n1> (morbi,40)\n3> (ornare,43)\n1> (turpis,52)\n3> (nisi,73)\n1> (magna,37)\n3> (volutpat,42)\n1> (quisque,30)\n3> (lorem,77)\n1> (massa,46)\n3> (vitae,128)\n1> (sem,46)\n3> (lorem,78)\n1> (ut,103)\n3> (dolor,73)\n1> (eleifend,28)\n3> (nisi,74)\n1> (sem,47)\n3> (metus,59)\n1> (turpis,53)\n3> (vitae,129)\n1> (mollis,26)\n3> (metus,60)\n1> (ultrices,38)\n3> (ultricies,50)\n1> (turpis,54)\n3> (vitae,130)\n1> (maecenas,34)\n3> (porta,50)\n1> (nec,90)\n3> (tristique,71)\n1> (finibus,39)\n3> (pellentesque,118)\n1> (sem,48)\n3> (phasellus,40)\n1> (nec,91)\n3> (lorem,79)\n1> (libero,48)\n3> (pellentesque,119)\n1> (quisque,31)\n3> (non,140)\n1> (posuere,39)\n3> (tristique,72)\n1> (sem,49)\n3> (vitae,131)\n3> (ornare,44)\n3> (ligula,57)\n3> (nascetur,6)\n3> (ligula,58)\n1> (enim,38)\n3> (volutpat,43)\n3> (dolor,74)\n3> (iaculis,52)\n3> (metus,61)\n3> (non,141)\n3> (vitae,132)\n3> (ultricies,51)\n3> (consequat,51)\n3> (vitae,133)\n3> (volutpat,44)\n3> (non,142)\n1> (finibus,40)\n3> (non,143)\n1> (sapien,45)\n3> (iaculis,53)\n1> (maecenas,35)\n3> (pellentesque,120)\n1> (ac,68)\n3> (ligula,59)\n1> (leo,46)\n3> (imperdiet,47)\n1> (ut,104)\n3> (facilisis,48)\n1> (posuere,40)\n3> (facilisis,49)\n1> (ipsum,68)\n3> (fringilla,46)\n1> (nunc,74)\n1> (sapien,46)\n1> (magna,38)\n1> (morbi,41)\n1> (senectus,10)\n3> (iaculis,54)\n1> (fames,12)\n1> (ac,69)\n1> (turpis,55)\n1> (sem,50)\n1> (enim,39)\n1> (mollis,27)\n1> (quisque,32)\n1> (ut,105)\n1> (nec,92)\n1> (rutrum,22)\n1> (nec,93)\n1> (magna,39)\n3> (tristique,73)\n1> (sociosqu,4)\n3> (nisi,75)\n1> (inceptos,4)\n3> (metus,62)\n1> (himenaeos,4)\n3> (pellentesque,121)\n1> (ut,106)\n3> (dolor,75)\n1> (rutrum,23)\n3> (pellentesque,122)\n1> (maecenas,36)\n3> (ornare,45)\n1> (sapien,47)\n3> (vitae,134)\n1> (massa,47)\n3> (pellentesque,123)\n1> (ipsum,69)\n3> (vitae,135)\n1> (primis,6)\n3> (tristique,74)\n1> (ultrices,39)\n3> (imperdiet,48)\n1> (posuere,41)\n3> (consequat,52)\n1> (curae,4)\n3> (phasellus,41)\n1> (sapien,48)\n3> (phasellus,42)\n1> (ac,70)\n3> (purus,63)\n1> (nec,94)\n3> (vitae,136)\n1> (fusce,25)\n3> (facilisis,50)\n1> (massa,48)\n3> (dolor,76)\n1> (massa,49)\n3> (pellentesque,124)\n1> (neque,43)\n3> (lorem,80)\n1> (nunc,75)\n3> (imperdiet,49)\n1> (nec,95)\n3> (nisi,76)\n1> (ac,71)\n3> (non,144)\n1> (nec,96)\n3> (ultricies,52)\n1> (libero,49)\n3> (imperdiet,50)\n1> (libero,50)\n3> (metus,63)\n1> (sapien,49)\n3> (non,145)\n1> (ac,72)\n3> (consequat,53)\n1> (arcu,46)\n3> (metus,64)\n1> (arcu,47)\n3> (non,146)\n1> (suspendisse,42)\n3> (purus,64)\n1> (mollis,28)\n3> (consequat,54)\n1> (ac,73)\n3> (pellentesque,125)\n1> (venenatis,33)\n3> (tristique,75)\n1> (fusce,26)\n3> (pellentesque,126)\n1> (suscipit,33)\n3> (imperdiet,51)\n1> (ac,74)\n3> (pellentesque,127)\n1> (nec,97)\n3> (facilisis,51)\n1> (massa,50)\n3> (facilisis,52)\n1> (enim,40)\n3> (iaculis,55)\n1> (ut,107)\n3> (non,147)\n3> (non,148)\n3> (ornare,46)\n3> (facilisis,53)\n3> (fringilla,47)\n3> (porta,51)\n3> (vitae,137)\n3> (ultricies,53)\n3> (tristique,76)\n3> (lorem,81)\n1> (massa,51)\n3> (imperdiet,52)\n1> (rutrum,24)\n3> (non,149)\n1> (morbi,42)\n3> (non,150)\n1> (venenatis,34)\n3> (phasellus,43)\n1> (magna,40)\n3> (pellentesque,128)\n1> (interdum,38)\n3> (vitae,138)\n1> (sapien,50)\n3> (pellentesque,129)\n1> (nunc,76)\n3> (pellentesque,130)\n1> (massa,52)\n3> (pellentesque,131)\n1> (ultrices,40)\n3> (tristique,77)\n1> (magna,41)\n3> (vitae,139)\n1> (nunc,77)\n3> (lorem,82)\n1> (ipsum,70)\n3> (ornare,47)\n1> (ut,108)\n3> (pellentesque,132)\n1> (arcu,48)\n3> (metus,65)\n1> (ac,75)\n3> (facilisis,54)\n1> (turpis,56)\n3> (vitae,140)\n1> (enim,41)\n3> (iaculis,56)\n1> (venenatis,35)\n3> (volutpat,45)\n1> (nec,98)\n3> (ornare,48)\n1> (massa,53)\n3> (imperdiet,53)\n1> (libero,51)\n3> (pellentesque,133)\n1> (ut,109)\n3> (pellentesque,134)\n1> (ac,76)\n3> (ligula,60)\n1> (venenatis,36)\n3> (non,151)\n1> (turpis,57)\n3> (ornare,49)\n1> (ac,77)\n3> (dolor,77)\n1> (nunc,78)\n3> (pellentesque,135)\n1> (venenatis,37)\n3> (purus,65)\n1> (ac,78)\n3> (tristique,78)\n1> (mollis,29)\n3> (porta,52)\n1> (suspendisse,43)\n3> (pellentesque,136)\n1> (sem,51)\n3> (nisi,77)\n1> (magna,42)\n3> (nisi,78)\n1> (ut,110)\n3> (vitae,141)\n1> (massa,54)\n3> (facilisis,55)\n1> (ac,79)\n3> (vitae,142)\n1> (nunc,79)\n3> (metus,66)\n1> (ac,80)\n3> (vitae,143)\n1> (arcu,49)\n3> (ornare,50)\n1> (interdum,39)\n3> (nisi,79)\n1> (nunc,80)\n3> (non,152)\n1> (dignissim,34)\n3> (fringilla,48)\n1> (nec,99)\n3> (phasellus,44)\n1> (nec,100)\n3> (dolor,78)\n1> (mollis,30)\n3> (volutpat,46)\n1> (ipsum,71)\n3> (ligula,61)\n1> (sapien,51)\n3> (phasellus,45)\n1> (neque,44)\n3> (metus,67)\n1> (libero,52)\n3> (metus,68)\n1> (rutrum,25)\n3> (porta,53)\n1> (ac,81)\n3> (consequat,55)\n1> (arcu,50)\n3> (purus,66)\n1> (quisque,33)\n3> (phasellus,46)\n1> (libero,53)\n3> (ornare,51)\n1> (praesent,28)\n3> (vitae,144)\n1> (libero,54)\n3> (non,153)\n1> (ut,111)\n3> (ligula,62)\n1> (nunc,81)\n3> (dolor,79)\n1> (mollis,31)\n3> (phasellus,47)\n1> (magna,43)\n3> (purus,67)\n1> (fusce,27)\n3> (tristique,79)\n1> (neque,45)\n3> (nisi,80)\n1> (mollis,32)\n3> (porta,54)\n1> (sem,52)\n3> (ligula,63)\n1> (ut,112)\n3> (ornare,52)\n1> (ac,82)\n3> (non,154)\n1> (leo,47)\n3> (pellentesque,137)\n1> (praesent,29)\n3> (non,155)\n1> (interdum,40)\n3> (vitae,145)\n1> (ac,83)\n3> (ultricies,54)\n1> (fusce,28)\n3> (non,156)\n1> (maecenas,37)\n3> (lorem,83)\n1> (sapien,52)\n3> (dolor,80)\n1> (nec,101)\n3> (nullam,39)\n1> (sem,53)\n3> (non,157)\n1> (nec,102)\n3> (imperdiet,54)\n1> (rutrum,26)\n3> (pellentesque,138)\n1> (leo,48)\n3> (pellentesque,139)\n1> (nec,103)\n3> (metus,69)\n1> (sem,54)\n3> (pellentesque,140)\n1> (ut,113)\n3> (purus,68)\n1> (suspendisse,44)\n3> (non,158)\n1> (libero,55)\n3> (volutpat,47)\n1> (quisque,34)\n3> (ornare,53)\n1> (sem,55)\n3> (metus,70)\n1> (turpis,58)\n3> (phasellus,48)\n1> (ut,114)\n3> (volutpat,48)\n1> (suspendisse,45)\n3> (nullam,40)\n1> (nunc,82)\n3> (metus,71)\n1> (ut,115)\n3> (ornare,54)\n1> (nec,104)\n3> (non,159)\n1> (ut,116)\n3> (metus,72)\n1> (quisque,35)\n3> (metus,73)\n1> (praesent,30)\n3> (pellentesque,141)\n1> (nec,105)\n3> (fringilla,49)\n1> (leo,49)\n3> (ultricies,55)\n1> (massa,55)\n3> (lorem,84)\n1> (suspendisse,46)\n3> (dolor,81)\n1> (mollis,33)\n3> (tristique,80)\n1> (sem,56)\n3> (ligula,64)\n1> (mollis,34)\n3> (tristique,81)\n1> (libero,56)\n3> (pellentesque,142)\n1> (nunc,83)\n3> (pellentesque,143)\n1> (praesent,31)\n4> (eros,2)\n3> (lorem,85)\n1> (interdum,41)\n3> (metus,74)\n1> (nunc,84)\n3> (ornare,55)\n4> (mauris,3)\n3> (ultricies,56)\n1> (enim,42)\n3> (non,160)\n1> (arcu,51)\n3> (facilisis,56)\n4> (est,3)\n3> (ligula,65)\n4> (ex,1)\n1> (rutrum,27)\n4> (a,3)\n3> (facilisis,57)\n4> (rhoncus,1)\n3> (ligula,66)\n4> (eros,3)\n4> (pretium,1)\n3> (non,161)\n4> (aliquet,1)\n3> (fringilla,50)\n4> (a,4)\n4> (risus,2)\n4> (dui,2)\n3> (purus,69)\n4> (tincidunt,1)\n3> (purus,70)\n4> (ante,1)\n1> (enim,43)\n4> (aenean,1)\n3> (pellentesque,144)\n4> (hendrerit,1)\n1> (mollis,35)\n4> (mauris,4)\n1> (ac,84)\n4> (gravida,2)\n1> (arcu,52)\n1> (eleifend,29)\n1> (ut,117)\n1> (sociosqu,5)\n1> (inceptos,5)\n1> (himenaeos,5)\n4> (pretium,2)\n1> (maecenas,38)\n4> (mi,1)\n1> (leo,50)\n4> (natoque,1)\n1> (ut,118)\n4> (dis,1)\n1> (dignissim,35)\n4> (ridiculus,1)\n1> (sem,57)\n4> (eu,2)\n1> (ut,119)\n4> (vel,2)\n1> (enim,44)\n4> (eu,3)\n1> (magna,44)\n4> (mi,2)\n1> (nec,106)\n4> (mauris,5)\n1> (ut,120)\n4> (rhoncus,2)\n1> (enim,45)\n4> (vel,3)\n1> (interdum,42)\n4> (aliquet,2)\n1> (suscipit,34)\n4> (eu,4)\n1> (massa,56)\n4> (gravida,3)\n1> (sem,58)\n4> (a,5)\n1> (ultrices,41)\n4> (ex,2)\n1> (magna,45)\n4> (eu,5)\n1> (nec,107)\n4> (dui,3)\n1> (rutrum,28)\n4> (vel,4)\n1> (morbi,43)\n4> (semper,1)\n1> (nec,108)\n4> (mauris,6)\n1> (morbi,44)\n4> (a,6)\n1> (arcu,53)\n4> (semper,2)\n1> (quisque,36)\n4> (diam,3)\n3> (ultricies,57)\n4> (mauris,7)\n1> (fusce,29)\n4> (ante,2)\n1> (suspendisse,47)\n4> (gravida,4)\n1> (ultrices,42)\n4> (ante,3)\n1> (ac,85)\n3> (consequat,56)\n4> (a,7)\n3> (nullam,41)\n4> (ante,4)\n3> (ligula,67)\n3> (imperdiet,55)\n3> (nisi,81)\n4> (potenti,1)\n3> (tristique,82)\n4> (dui,4)\n3> (non,162)\n4> (mi,3)\n3> (dolor,82)\n3> (purus,71)\n4> (eu,6)\n3> (non,163)\n4> (vulputate,2)\n3> (lorem,86)\n3> (non,164)\n4> (ante,5)\n3> (iaculis,57)\n4> (rhoncus,3)\n1> (neque,46)\n4> (mi,4)\n3> (dolor,83)\n4> (felis,1)\n3> (iaculis,58)\n4> (est,4)\n3> (nisi,82)\n4> (tincidunt,2)\n4> (felis,2)\n4> (rhoncus,4)\n4> (eros,4)\n3> (lorem,87)\n4> (congue,1)\n3> (vitae,146)\n1> (nec,109)\n4> (diam,4)\n3> (consequat,57)\n1> (sem,59)\n3> (metus,75)\n4> (pretium,3)\n1> (fusce,30)\n4> (ex,3)\n1> (libero,57)\n3> (iaculis,59)\n4> (porttitor,1)\n3> (ligula,68)\n1> (ipsum,72)\n4> (elementum,1)\n3> (metus,76)\n4> (diam,5)\n1> (fusce,31)\n3> (phasellus,49)\n1> (neque,47)\n4> (donec,2)\n3> (fringilla,51)\n1> (leo,51)\n4> (felis,3)\n3> (ligula,69)\n4> (eu,7)\n1> (ut,121)\n4> (diam,6)\n3> (non,165)\n4> (aliquet,3)\n1> (suscipit,35)\n4> (pretium,4)\n1> (ac,86)\n3> (iaculis,60)\n4> (aenean,2)\n3> (facilisis,58)\n4> (felis,4)\n3> (purus,72)\n4> (elementum,2)\n4> (elementum,3)\n4> (semper,3)\n3> (consequat,58)\n4> (diam,7)\n3> (lorem,88)\n4> (diam,8)\n1> (sem,60)\n3> (phasellus,50)\n4> (tincidunt,3)\n1> (dignissim,36)\n3> (ornare,56)\n4> (eu,8)\n3> (tristique,83)\n1> (maecenas,39)\n4> (aliquet,4)\n1> (leo,52)\n4> (mauris,8)\n3> (ligula,70)\n1> (ut,122)\n3> (metus,77)\n4> (porttitor,2)\n3> (purus,73)\n1> (suspendisse,48)\n3> (non,166)\n4> (hendrerit,2)\n1> (dignissim,37)\n3> (ornare,57)\n1> (ut,123)\n3> (purus,74)\n4> (eu,9)\n3> (facilisis,59)\n4> (risus,3)\n3> (vitae,147)\n4> (pretium,5)\n4> (dui,5)\n4> (tincidunt,4)\n3> (ultricies,58)\n4> (eu,10)\n3> (ligula,71)\n4> (vel,5)\n1> (ut,124)\n4> (risus,4)\n3> (nisi,83)\n1> (magna,46)\n3> (fringilla,52)\n4> (aenean,3)\n3> (imperdiet,56)\n1> (suscipit,36)\n3> (purus,75)\n1> (sapien,53)\n3> (purus,76)\n1> (praesent,32)\n1> (turpis,59)\n3> (metus,78)\n1> (suspendisse,49)\n3> (purus,77)\n1> (massa,57)\n1> (enim,46)\n1> (morbi,45)\n1> (praesent,33)\n1> (suscipit,37)\n3> (non,167)\n1> (sapien,54)\n3> (non,168)\n1> (nunc,85)\n3> (porta,55)\n1> (mollis,36)\n3> (ultricies,59)\n1> (nunc,86)\n3> (volutpat,49)\n1> (posuere,42)\n3> (ligula,72)\n1> (venenatis,38)\n3> (imperdiet,57)\n1> (ut,125)\n3> (vitae,148)\n1> (maecenas,40)\n3> (non,169)\n1> (nec,110)\n3> (ornare,58)\n1> (magna,47)\n3> (porta,56)\n1> (posuere,43)\n3> (metus,79)\n1> (turpis,60)\n3> (fringilla,53)\n1> (sem,61)\n3> (lorem,89)\n1> (mollis,37)\n3> (metus,80)\n4> (eu,11)\n3> (lorem,90)\n1> (ipsum,73)\n3> (nisi,84)\n1> (primis,7)\n3> (lorem,91)\n4> (tincidunt,5)\n3> (non,170)\n4> (eu,12)\n3> (fringilla,54)\n4> (aliquet,5)\n4> (felis,5)\n4> (vel,6)\n4> (mauris,9)\n3> (ornare,59)\n4> (accumsan,2)\n3> (metus,81)\n4> (risus,5)\n3> (ornare,60)\n4> (eu,13)\n3> (volutpat,50)\n5> (nulla,10)\n3> (consequat,59)\n4> (a,8)\n3> (nisi,85)\n5> (id,11)\n3> (phasellus,51)\n5> (molestie,8)\n4> (eu,14)\n5> (in,17)\n4> (ex,4)\n3> (metus,82)\n4> (eu,15)\n3> (phasellus,52)\n5> (nulla,11)\n4> (hendrerit,3)\n1> (ultrices,43)\n5> (eget,15)\n4> (vulputate,3)\n1> (posuere,44)\n4> (mauris,10)\n5> (nisl,6)\n4> (eu,16)\n1> (curae,5)\n5> (id,12)\n1> (quisque,37)\n5> (tortor,8)\n1> (ut,126)\n3> (phasellus,53)\n5> (in,18)\n3> (volutpat,51)\n5> (id,13)\n5> (lacinia,5)\n3> (vitae,149)\n1> (sem,62)\n3> (facilisis,60)\n1> (nec,111)\n5> (nisl,7)\n1> (mollis,38)\n5> (quam,14)\n1> (ipsum,74)\n5> (id,14)\n3> (vitae,150)\n1> (ultrices,44)\n4> (porttitor,3)\n1> (suspendisse,50)\n4> (est,5)\n3> (nullam,42)\n4> (rhoncus,5)\n3> (non,171)\n3> (vitae,151)\n3> (metus,83)\n4> (a,9)\n3> (non,172)\n4> (risus,6)\n3> (iaculis,61)\n5> (tortor,9)\n3> (hac,11)\n5> (luctus,7)\n5> (in,19)\n5> (nulla,12)\n3> (habitasse,11)\n5> (in,20)\n1> (ac,87)\n5> (nisl,8)\n1> (quisque,38)\n1> (ut,127)\n1> (morbi,46)\n1> (sapien,55)\n5> (sollicitudin,8)\n4> (pretium,6)\n1> (nunc,87)\n4> (tincidunt,6)\n5> (id,15)\n1> (ut,128)\n4> (vel,7)\n1> (sem,63)\n4> (pretium,7)\n1> (nec,112)\n4> (porttitor,4)\n1> (magna,48)\n4> (mauris,11)\n1> (mollis,39)\n4> (elementum,4)\n1> (praesent,34)\n4> (mi,5)\n1> (neque,48)\n4> (hendrerit,4)\n1> (turpis,61)\n4> (pretium,8)\n1> (interdum,43)\n4> (mi,6)\n1> (suspendisse,51)\n4> (ex,5)\n1> (leo,53)\n4> (risus,7)\n1> (nec,113)\n4> (vel,8)\n1> (suspendisse,52)\n4> (semper,4)\n1> (sem,64)\n4> (gravida,5)\n1> (interdum,44)\n4> (mauris,12)\n1> (fusce,32)\n4> (tincidunt,7)\n1> (turpis,62)\n4> (donec,3)\n1> (sapien,56)\n4> (a,10)\n1> (sem,65)\n4> (ullamcorper,1)\n1> (eleifend,30)\n4> (diam,9)\n1> (nec,114)\n4> (mi,7)\n1> (eleifend,31)\n4> (mauris,13)\n1> (rutrum,29)\n4> (eu,17)\n1> (enim,47)\n1> (magna,49)\n4> (tincidunt,8)\n1> (ac,88)\n4> (donec,4)\n1> (sapien,57)\n4> (convallis,3)\n1> (massa,58)\n4> (eros,5)\n1> (neque,49)\n4> (rhoncus,6)\n1> (interdum,45)\n4> (hendrerit,5)\n1> (magna,50)\n4> (est,6)\n1> (nec,115)\n4> (eros,6)\n1> (ultrices,45)\n4> (accumsan,3)\n3> (dictumst,11)\n4> (ante,6)\n1> (posuere,45)\n1> (turpis,63)\n3> (lorem,92)\n4> (aliquet,6)\n5> (sagittis,3)\n4> (a,11)\n3> (pellentesque,145)\n5> (sagittis,4)\n3> (phasellus,54)\n5> (orci,9)\n4> (vulputate,4)\n5> (in,21)\n3> (porta,57)\n1> (rutrum,30)\n4> (tincidunt,9)\n5> (velit,9)\n1> (finibus,41)\n4> (risus,8)\n5> (pharetra,8)\n3> (non,173)\n4> (ex,6)\n3> (vitae,152)\n4> (vel,9)\n4> (mi,8)\n4> (tincidunt,10)\n4> (eu,18)\n3> (imperdiet,58)\n4> (diam,10)\n3> (porta,58)\n4> (mauris,14)\n3> (lorem,93)\n3> (dolor,84)\n3> (phasellus,55)\n4> (ante,7)\n3> (imperdiet,59)\n4> (hendrerit,6)\n3> (ornare,61)\n4> (eros,7)\n3> (vitae,153)\n3> (iaculis,62)\n4> (mi,9)\n3> (phasellus,56)\n4> (eu,19)\n3> (nisi,86)\n1> (nec,116)\n4> (tincidunt,11)\n1> (nunc,88)\n3> (metus,84)\n1> (sapien,58)\n3> (nisi,87)\n4> (semper,5)\n3> (nisi,88)\n4> (convallis,4)\n3> (porta,59)\n4> (a,12)\n4> (congue,2)\n4> (congue,3)\n3> (consequat,60)\n4> (a,13)\n3> (volutpat,52)\n5> (eget,16)\n4> (mi,10)\n5> (luctus,8)\n5> (nulla,13)\n4> (risus,9)\n5> (nulla,14)\n1> (morbi,47)\n3> (consequat,61)\n4> (mauris,15)\n5> (velit,10)\n1> (ipsum,75)\n4> (convallis,5)\n5> (in,22)\n1> (posuere,46)\n5> (dapibus,7)\n4> (eu,20)\n1> (rutrum,31)\n4> (pretium,9)\n5> (lacinia,6)\n1> (interdum,46)\n4> (mauris,16)\n1> (leo,54)\n5> (in,23)\n4> (porttitor,5)\n1> (ac,89)\n4> (ex,7)\n1> (sem,66)\n4> (eu,21)\n1> (nunc,89)\n1> (eleifend,32)\n1> (morbi,48)\n4> (est,7)\n1> (finibus,42)\n4> (mauris,17)\n5> (luctus,9)\n1> (suspendisse,53)\n4> (eu,22)\n1> (ipsum,76)\n4> (potenti,2)\n1> (magna,51)\n5> (eget,17)\n1> (eleifend,33)\n4> (risus,10)\n5> (sagittis,5)\n1> (rutrum,32)\n4> (vulputate,5)\n1> (ut,129)\n4> (semper,6)\n1> (nunc,90)\n4> (donec,5)\n4> (est,8)\n4> (eu,23)\n4> (porttitor,6)\n1> (sem,67)\n4> (vel,10)\n1> (ultrices,46)\n5> (dapibus,8)\n4> (dui,6)\n1> (eleifend,34)\n4> (gravida,6)\n1> (arcu,54)\n5> (quam,15)\n1> (posuere,47)\n5> (orci,10)\n1> (arcu,55)\n5> (magnis,2)\n1> (ut,130)\n1> (leo,55)\n1> (ac,90)\n1> (ut,131)\n5> (eget,18)\n1> (nunc,91)\n5> (tortor,10)\n1> (enim,48)\n5> (class,1)\n1> (nec,117)\n5> (aptent,1)\n1> (dignissim,38)\n5> (taciti,1)\n1> (massa,59)\n5> (nostra,1)\n5> (in,24)\n5> (in,25)\n1> (posuere,48)\n5> (sollicitudin,9)\n1> (finibus,43)\n5> (sagittis,6)\n1> (enim,49)\n5> (id,16)\n1> (ut,132)\n5> (sollicitudin,10)\n1> (dignissim,39)\n5> (nisl,9)\n1> (nunc,92)\n4> (vel,11)\n1> (finibus,44)\n5> (sodales,9)\n1> (suscipit,38)\n4> (tincidunt,12)\n5> (molestie,9)\n4> (tincidunt,13)\n5> (blandit,7)\n1> (suspendisse,54)\n4> (eu,24)\n1> (rutrum,33)\n4> (accumsan,4)\n5> (id,17)\n1> (maecenas,41)\n5> (id,18)\n1> (finibus,45)\n5> (efficitur,5)\n1> (sem,68)\n1> (magna,52)\n1> (suscipit,39)\n5> (id,19)\n1> (enim,50)\n5> (luctus,10)\n1> (sapien,59)\n5> (in,26)\n1> (sociosqu,6)\n5> (eget,19)\n4> (ullamcorper,2)\n5> (sodales,10)\n1> (inceptos,6)\n5> (eget,20)\n4> (eros,8)\n5> (in,27)\n4> (ullamcorper,3)\n1> (himenaeos,6)\n4> (felis,6)\n1> (ipsum,77)\n5> (orci,11)\n4> (congue,4)\n1> (ac,91)\n4> (mauris,18)\n5> (velit,11)\n1> (enim,51)\n4> (est,9)\n1> (magna,53)\n4> (donec,6)\n5> (id,20)\n1> (arcu,56)\n4> (vel,12)\n1> (ac,92)\n4> (rhoncus,7)\n1> (ac,93)\n4> (convallis,6)\n4> (a,14)\n4> (aliquet,7)\n1> (ac,94)\n4> (ullamcorper,4)\n1> (morbi,49)\n5> (eget,21)\n4> (eros,9)\n1> (senectus,11)\n4> (eros,10)\n1> (fames,13)\n5> (nulla,15)\n1> (ac,95)\n4> (dui,7)\n1> (turpis,64)\n4> (convallis,7)\n1> (maecenas,42)\n4> (dui,8)\n4> (tincidunt,14)\n4> (mauris,19)\n1> (arcu,57)\n4> (vel,13)\n5> (dapibus,9)\n1> (libero,58)\n4> (hendrerit,7)\n1> (fusce,33)\n4> (tincidunt,15)\n1> (turpis,65)\n5> (habitant,2)\n1> (enim,52)\n4> (convallis,8)\n5> (netus,2)\n1> (neque,50)\n4> (felis,7)\n1> (ut,133)\n5> (malesuada,7)\n1> (libero,59)\n4> (convallis,9)\n5> (in,28)\n4> (est,10)\n5> (platea,2)\n1> (sapien,60)\n4> (tincidunt,16)\n5> (pharetra,9)\n4> (porttitor,7)\n1> (rutrum,34)\n4> (pretium,10)\n5> (malesuada,8)\n4> (est,11)\n5> (in,29)\n1> (sapien,61)\n4> (mauris,20)\n5> (platea,3)\n4> (dui,9)\n5> (sagittis,7)\n1> (turpis,66)\n5> (lacinia,7)\n1> (ipsum,78)\n5> (lacinia,8)\n5> (id,21)\n5> (lacinia,9)\n5> (lacinia,10)\n1> (venenatis,39)\n5> (nisl,10)\n1> (turpis,67)\n5> (velit,12)\n1> (suspendisse,55)\n5> (eget,22)\n1> (morbi,50)\n5> (sodales,11)\n1> (enim,53)\n4> (mauris,21)\n5> (quam,16)\n4> (ex,8)\n1> (praesent,35)\n4> (a,15)\n5> (nulla,16)\n1> (arcu,58)\n4> (a,16)\n5> (sagittis,8)\n4> (vel,14)\n1> (sem,69)\n4> (mauris,22)\n5> (sagittis,9)\n4> (vel,15)\n1> (finibus,46)\n5> (sagittis,10)\n1> (maecenas,43)\n5> (molestie,10)\n1> (arcu,59)\n5> (class,2)\n5> (aptent,2)\n5> (taciti,2)\n1> (suspendisse,56)\n5> (nostra,2)\n1> (turpis,68)\n5> (tortor,11)\n1> (dignissim,40)\n5> (nisl,11)\n1> (massa,60)\n5> (in,30)\n1> (maecenas,44)\n5> (sodales,12)\n1> (leo,56)\n5> (velit,13)\n1> (praesent,36)\n5> (id,22)\n1> (interdum,47)\n5> (in,31)\n1> (suspendisse,57)\n5> (eget,23)\n1> (ut,134)\n5> (quam,17)\n1> (posuere,49)\n5> (in,32)\n1> (ut,135)\n5> (molestie,11)\n1> (rutrum,35)\n5> (efficitur,6)\n1> (nec,118)\n5> (molestie,12)\n1> (interdum,48)\n5> (pharetra,10)\n1> (ut,136)\n5> (nulla,17)\n1> (ut,137)\n5> (etiam,7)\n1> (ut,138)\n5> (eget,24)\n1> (nunc,93)\n5> (sagittis,11)\n1> (neque,51)\n5> (eget,25)\n1> (neque,52)\n5> (id,23)\n1> (sem,70)\n5> (quam,18)\n1> (turpis,69)\n5> (pharetra,11)\n1> (ut,139)\n5> (eget,26)\n1> (sapien,62)\n5> (nulla,18)\n1> (nec,119)\n5> (velit,14)\n1> (ut,140)\n5> (eget,27)\n1> (sapien,63)\n5> (nulla,19)\n1> (posuere,50)\n5> (sollicitudin,11)\n1> (eleifend,35)\n5> (in,33)\n1> (ultrices,47)\n5> (in,34)\n1> (interdum,49)\n5> (in,35)\n1> (fames,14)\n5> (eget,28)\n1> (ac,96)\n5> (id,24)\n1> (ipsum,79)\n5> (in,36)\n1> (primis,8)\n5> (id,25)\n1> (suspendisse,58)\n5> (id,26)\n1> (nec,120)\n5> (eget,29)\n1> (nec,121)\n5> (sodales,13)\n1> (massa,61)\n5> (id,27)\n1> (sapien,64)\n5> (in,37)\n1> (nec,122)\n5> (tortor,12)\n1> (ut,141)\n5> (blandit,8)\n1> (magna,54)\n5> (molestie,13)\n1> (nec,123)\n5> (malesuada,9)\n1> (sapien,65)\n5> (id,28)\n1> (ac,97)\n5> (nulla,20)\n1> (sapien,66)\n5> (eget,30)\n1> (ut,142)\n5> (quam,19)\n1> (fusce,34)\n5> (malesuada,10)\n1> (ac,98)\n5> (eget,31)\n1> (turpis,70)\n5> (id,29)\n1> (ipsum,80)\n5> (nulla,21)\n1> (rutrum,36)\n5> (in,38)\n5> (etiam,8)\n5> (id,30)\n1> (ut,143)\n5> (velit,15)\n1> (praesent,37)\n5> (blandit,9)\n1> (magna,55)\n5> (in,39)\n1> (leo,57)\n5> (nulla,22)\n1> (praesent,38)\n5> (luctus,11)\n1> (mollis,40)\n5> (etiam,9)\n1> (libero,60)\n5> (eget,32)\n5> (nulla,23)\n5> (velit,16)\n1> (suspendisse,59)\n5> (in,40)\n1> (nunc,94)\n5> (orci,12)\n1> (ut,144)\n5> (nisl,12)\n1> (eleifend,36)\n5> (quam,20)\n1> (dignissim,41)\n4> (ex,9)\n1> (sapien,67)\n5> (in,41)\n1> (libero,61)\n4> (dui,10)\n1> (nec,124)\n4> (risus,11)\n1> (massa,62)\n4> (mi,11)\n1> (nunc,95)\n4> (congue,5)\n5> (lacinia,11)\n4> (tincidunt,17)\n1> (rutrum,37)\n4> (accumsan,5)\n1> (nec,125)\n1> (praesent,39)\n4> (convallis,10)\n1> (ipsum,81)\n4> (dui,11)\n1> (ultrices,48)\n4> (semper,7)\n1> (ac,99)\n4> (eros,11)\n1> (nec,126)\n4> (hendrerit,8)\n1> (magna,56)\n4> (ante,8)\n1> (nec,127)\n5> (sollicitudin,12)\n1> (rutrum,38)\n5> (quam,21)\n4> (dui,12)\n1> (sem,71)\n4> (vel,16)\n5> (id,31)\n4> (donec,7)\n1> (nunc,96)\n5> (nulla,24)\n4> (a,17)\n1> (arcu,60)\n4> (convallis,11)\n5> (dapibus,10)\n4> (natoque,2)\n5> (luctus,12)\n1> (ut,145)\n4> (dis,2)\n5> (dapibus,11)\n4> (ridiculus,2)\n5> (velit,17)\n1> (arcu,61)\n5> (eget,33)\n4> (gravida,7)\n1> (praesent,40)\n4> (est,12)\n5> (molestie,14)\n4> (mauris,23)\n5> (in,42)\n1> (sapien,68)\n5> (efficitur,7)\n4> (ex,10)\n5> (in,43)\n4> (litora,1)\n5> (malesuada,11)\n4> (torquent,1)\n5> (eget,34)\n4> (conubia,1)\n5> (in,44)\n4> (semper,8)\n5> (eget,35)\n4> (vel,17)\n5> (sollicitudin,13)\n1> (ipsum,82)\n5> (quam,22)\n4> (mauris,24)\n5> (sodales,14)\n4> (vel,18)\n5> (quam,23)\n4> (eros,12)\n1> (adipiscing,6)\n5> (eget,36)\n4> (risus,12)\n1> (arcu,62)\n4> (dui,13)\n5> (blandit,10)\n4> (elementum,5)\n1> (enim,54)\n4> (vel,19)\n5> (nulla,25)\n4> (tincidunt,18)\n5> (in,45)\n4> (felis,8)\n5> (tortor,13)\n5> (tortor,14)\n5> (id,32)\n5> (quam,24)\n5> (orci,13)\n5> (sodales,15)\n4> (convallis,12)\n5> (lacinia,12)\n4> (vel,20)\n5> (sagittis,12)\n1> (finibus,47)\n5> (quam,25)\n4> (semper,9)\n5> (in,46)\n4> (felis,9)\n1> (eleifend,37)\n5> (in,47)\n4> (vel,21)\n5> (efficitur,8)\n4> (vel,22)\n1> (sociosqu,7)\n4> (diam,11)\n1> (inceptos,7)\n5> (blandit,11)\n4> (mauris,25)\n5> (luctus,13)\n4> (est,13)\n1> (himenaeos,7)\n5> (sagittis,13)\n1> (nunc,97)\n4> (pretium,11)\n5> (eget,37)\n1> (dignissim,42)\n4> (vel,23)\n1> (maecenas,45)\n4> (semper,10)\n1> (nec,128)\n4> (felis,10)\n4> (aenean,4)\n4> (hendrerit,9)\n4> (diam,12)\n1> (finibus,48)\n4> (elementum,6)\n1> (ipsum,83)\n4> (donec,8)\n1> (morbi,51)\n4> (pretium,12)\n4> (ullamcorper,5)\n1> (senectus,12)\n4> (mi,12)\n1> (fames,15)\n5> (tortor,15)\n1> (ac,100)\n4> (mauris,26)\n1> (turpis,71)\n4> (accumsan,6)\n5> (nulla,26)\n4> (vel,24)\n5> (eget,38)\n1> (rutrum,39)\n4> (accumsan,7)\n1> (interdum,50)\n4> (vel,25)\n1> (ipsum,84)\n4> (porttitor,8)\n4> (mauris,27)\n4> (donec,9)\n1> (massa,63)\n4> (hendrerit,10)\n1> (ultrices,49)\n5> (luctus,14)\n4> (porttitor,9)\n1> (ut,146)\n5> (nisl,13)\n1> (libero,62)\n5> (luctus,15)\n1> (morbi,52)\n1> (turpis,72)\n1> (nec,129)\n1> (libero,63)\n5> (nulla,27)\n1> (ac,101)\n5> (eget,39)\n1> (ultrices,50)\n5> (tortor,16)\n1> (suspendisse,60)\n5> (eget,40)\n1> (sem,72)\n5> (eget,41)\n1> (ut,147)\n5> (in,48)\n4> (hendrerit,11)\n5> (platea,4)\n4> (diam,13)\n1> (ipsum,85)\n4> (hendrerit,12)\n1> (arcu,63)\n5> (dapibus,12)\n4> (mi,13)\n1> (turpis,73)\n5> (nisl,14)\n1> (ut,148)\n4> (diam,14)\n1> (dignissim,43)\n4> (mauris,28)\n1> (fusce,35)\n4> (eu,25)\n4> (mauris,29)\n4> (ex,11)\n1> (ut,149)\n4> (eu,26)\n1> (ac,102)\n5> (sodales,16)\n1> (venenatis,40)\n4> (porttitor,10)\n1> (morbi,53)\n4> (mauris,30)\n5> (in,49)\n4> (risus,13)\n5> (orci,14)\n4> (accumsan,8)\n4> (a,18)\n4> (convallis,13)\n4> (donec,10)\n5> (luctus,16)\n4> (a,19)\n5> (sodales,17)\n4> (est,14)\n1> (ut,150)\n4> (tincidunt,19)\n5> (orci,15)\n4> (a,20)\n5> (in,50)\n1> (libero,64)\n4> (a,21)\n1> (dignissim,44)\n4> (felis,11)\n1> (magna,57)\n1> (turpis,74)\n1> (magna,58)\n4> (tincidunt,20)\n1> (interdum,51)\n4> (donec,11)\n1> (morbi,54)\n5> (habitant,3)\n1> (interdum,52)\n4> (diam,15)\n5> (netus,3)\n1> (venenatis,41)\n5> (malesuada,12)\n4> (ullamcorper,6)\n5> (sollicitudin,14)\n4> (mi,14)\n5> (id,33)\n5> (quam,26)\n5> (orci,16)\n4> (litora,2)\n5> (magnis,3)\n4> (torquent,2)\n1> (enim,55)\n4> (conubia,2)\n5> (in,51)\n4> (mauris,31)\n1> (nunc,98)\n5> (platea,5)\n1> (fusce,36)\n5> (dapibus,13)\n4> (pretium,13)\n5> (nulla,28)\n1> (ac,103)\n4> (est,15)\n1> (interdum,53)\n5> (luctus,17)\n1> (maecenas,46)\n5> (molestie,15)\n1> (mollis,41)\n5> (eget,42)\n5> (sodales,18)\n5> (lacinia,13)\n5> (habitant,4)\n1> (arcu,64)\n5> (netus,4)\n1> (ultrices,51)\n1> (venenatis,42)\n1> (venenatis,43)\n1> (sem,73)\n1> (nec,130)\n1> (finibus,49)\n1> (neque,53)\n1> (interdum,54)\n1> (interdum,55)\n1> (eleifend,38)\n1> (suspendisse,61)\n1> (neque,54)\n1> (sapien,69)\n1> (ac,104)\n1> (neque,55)\n1> (praesent,41)\n1> (leo,58)\n1> (massa,64)\n1> (nunc,99)\n1> (quisque,39)\n1> (leo,59)\n1> (nec,131)\n1> (praesent,42)\n1> (nunc,100)\n1> (suspendisse,62)\n1> (suspendisse,63)\n1> (neque,56)\n1> (eleifend,39)\n1> (neque,57)\n1> (leo,60)\n1> (ut,151)\n1> (nec,132)\n1> (ipsum,86)\n1> (interdum,56)\n1> (sapien,70)\n1> (nec,133)\n1> (suspendisse,64)\n1> (neque,58)\n1> (mollis,42)\n1> (arcu,65)\n1> (ipsum,87)\n1> (primis,9)\n1> (ultrices,52)\n1> (posuere,51)\n1> (curae,6)\n1> (ut,152)\n1> (interdum,57)\n1> (ultrices,53)\n1> (ut,153)\n1> (finibus,50)\n1> (nec,134)\n1> (posuere,52)\n1> (nunc,101)\n1> (rutrum,40)\n1> (magna,59)\n1> (sem,74)\n1> (magna,60)\n1> (ipsum,88)\n1> (ipsum,89)\n1> (suspendisse,65)\n1> (eleifend,40)\n1> (maecenas,47)\n1> (magna,61)\n1> (libero,65)\n1> (massa,65)\n1> (ac,105)\n1> (interdum,58)\n1> (suscipit,40)\n1> (ut,154)\n1> (dignissim,45)\n1> (ut,155)\n1> (massa,66)\n1> (dignissim,46)\n1> (ut,156)\n1> (arcu,66)\n1> (nec,135)\n1> (sem,75)\n1> (nec,136)\n1> (suspendisse,66)\n1> (ut,157)\n1> (ultrices,54)\n1> (suspendisse,67)\n1> (interdum,59)\n1> (praesent,43)\n1> (ut,158)\n1> (nec,137)\n1> (libero,66)\n1> (nunc,102)\n1> (morbi,55)\n1> (rutrum,41)\n1> (suscipit,41)\n1> (magna,62)"},{"type":"HTML","data":"<div class=\"result-alert alert-warning\" role=\"alert\"><button type=\"button\" class=\"close\" data-dismiss=\"alert\" aria-label=\"Close\"><span aria-hidden=\"true\">&times;</span></button><strong>Output is truncated</strong> to 102400 bytes. Learn more about <strong>ZEPPELIN_INTERPRETER_OUTPUT_LIMIT</strong></div>"}]},"apps":[],"progressUpdateIntervalMs":500,"jobName":"paragraph_1583778752197_412607825","id":"paragraph_1562831656478_1673697102","dateCreated":"2020-03-09T18:32:32+0000","dateStarted":"2020-03-13T13:38:42+0000","dateFinished":"2020-03-13T13:38:42+0000","status":"FINISHED","$$hashKey":"object:195"},{"text":"%md\n\n## 1.B. Windowed Streaming Word Count\n### In this exercice, we'll repeat the same steps with a slight change in the Word Count code (step n°4)\nLet’s say that we want the individual word count per 5 seconds timeframe. We must use Windows in order to do that.\n\n### 1.a. First, we need to define an attribute called windowSize [type = int, value = 10]\n    \n### 1.b. Then, we define a second attribute called slideSize [type = int, value = 5]\n","user":"anonymous","dateUpdated":"2020-03-09T18:32:32+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"runOnSelectionChange":true,"title":false,"checkEmpty":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h2>1.B. Windowed Streaming Word Count</h2>\n<h3>In this exercice, we&rsquo;ll repeat the same steps with a slight change in the Word Count code (step n°4)</h3>\n<p>Let’s say that we want the individual word count per 5 seconds timeframe. We must use Windows in order to do that.</p>\n<h3>1.a. First, we need to define an attribute called windowSize [type = int, value = 10]</h3>\n<h3>1.b. Then, we define a second attribute called slideSize [type = int, value = 5]</h3>\n</div>"}]},"apps":[],"progressUpdateIntervalMs":500,"jobName":"paragraph_1583778752200_-836194859","id":"paragraph_1562831674674_-137040932","dateCreated":"2020-03-09T18:32:32+0000","status":"READY","$$hashKey":"object:196"},{"text":"%java\n\nimport org.apache.flink.api.java.tuple.Tuple2;\nimport org.apache.flink.api.java.utils.ParameterTool;\nimport org.apache.flink.streaming.api.datastream.DataStream;\nimport org.apache.flink.streaming.api.environment.StreamExecutionEnvironment;\nimport org.apache.flink.api.common.functions.FlatMapFunction;\nimport org.apache.flink.util.Collector;\nimport java.util.Arrays;\n\npublic class WindowedStreamingWordCount {\n\n    public static void main(String[] args) throws Exception {\n    \n        // Set up the execution environment\n\t\tfinal StreamExecutionEnvironment env = StreamExecutionEnvironment.getExecutionEnvironment();\n        \n        // Read input text file\n        DataStream<String> text = env.readTextFile(\"./data/batch-exercise-1-loremipsup.txt\");\n        \n\t\t//1.a. TO-DO: Define the window size to 10\n\t\tint windowSize = 10;\n\t\t\n\t\t//1.b. TO-DO: Define the slidesize to 5\n\t\tint slideSize = 5;\n\t}\n}","user":"anonymous","dateUpdated":"2020-03-13T13:19:33+0000","config":{"editorSetting":{"language":"java","editOnDblClick":false,"completionSupport":false},"colWidth":12,"editorMode":"ace/mode/java","fontSize":9,"runOnSelectionChange":true,"title":false,"checkEmpty":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[]},"apps":[],"progressUpdateIntervalMs":500,"jobName":"paragraph_1583778752200_883099621","id":"paragraph_1563965109062_-1222999511","dateCreated":"2020-03-09T18:32:32+0000","dateStarted":"2020-03-13T13:19:33+0000","dateFinished":"2020-03-13T13:19:33+0000","status":"FINISHED","$$hashKey":"object:197"},{"text":"%md\n### 2. Where do we need to specify the window? (only 1 part of the code should be modified) \n--> When we do the count per se, using the flatMap + keyBy + sum operators! We are going to use the **`countWindow`** operator, that takes 2 parameters (windowSize, slideSize) defined previously, after the keyBy operator.\n### And we will get this output\n![output-ex2](http://193.190.127.227/img/streaming/output2.png)","user":"anonymous","dateUpdated":"2020-03-10T07:35:30+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"runOnSelectionChange":true,"title":false,"checkEmpty":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h3>2. Where do we need to specify the window? (only 1 part of the code should be modified)</h3>\n<p>&ndash;&gt; When we do the count per se, using the flatMap + keyBy + sum operators! We are going to use the <strong><code>countWindow</code></strong> operator, that takes 2 parameters (windowSize, slideSize) defined previously, after the keyBy operator.</p>\n<h3>And we will get this output</h3>\n<p><img src=\"http://193.190.127.227/img/streaming/output2.png\" alt=\"output-ex2\" /></p>\n</div>"}]},"apps":[],"progressUpdateIntervalMs":500,"jobName":"paragraph_1583778752200_-1523617163","id":"paragraph_1563965066384_-1098430910","dateCreated":"2020-03-09T18:32:32+0000","dateStarted":"2020-03-10T07:35:30+0000","dateFinished":"2020-03-10T07:35:30+0000","status":"FINISHED","$$hashKey":"object:198"},{"text":"%java\n\nimport org.apache.flink.api.java.tuple.Tuple2;\nimport org.apache.flink.api.java.utils.ParameterTool;\nimport org.apache.flink.streaming.api.datastream.DataStream;\nimport org.apache.flink.streaming.api.environment.StreamExecutionEnvironment;\nimport org.apache.flink.api.common.functions.FlatMapFunction;\nimport org.apache.flink.util.Collector;\nimport java.util.Arrays;\n\npublic class WindowedStreamingWordCount {\n\n    public static void main(String[] args) throws Exception {\n    \n        // Set up the execution environment\n\t\tfinal StreamExecutionEnvironment env = StreamExecutionEnvironment.getExecutionEnvironment();\n        \n        // Read input text file\n        DataStream<String> text = env.readTextFile(\"./data/batch-exercise-1-loremipsup.txt\");\n        \n\t\t//1.a. Define the window size to 10\n\t\tint windowSize = 10;\n\t\t//1.b. Define the slidesize to 5\n\t\tint slideSize = 5;\n\n\t\t//2. Windowed Word Count \n\t\tDataStream<Tuple2<String, Integer>> counts = text\n\t\t    // split up the lines in pairs (2-tuples) containing: (word,1)\n\t\t    .flatMap(new Tokenizer())\n\t\t\t.keyBy(0)\n\t\t\t\n\t\t\t//2. TO-DO: create windows of windowSize records slided every slideSize records\n\t\t\t.countWindow(windowSize, slideSize)\n\t\t\t\n\t\t\t// group by the tuple field \"0\" and sum up tuple field \"1\"\n\t\t\t.sum(1);\n\t\t\t\t\n\t\t// Execute and print results            \n        counts.print();\n        \n        // execute program\n\t\tenv.execute(\"Windowed Streaming WordCount\");\n    }\n    \n\tpublic static final class Tokenizer implements FlatMapFunction<String, Tuple2<String, Integer>> {\n\n\t\t@Override\n\t\tpublic void flatMap(String value, Collector<Tuple2<String, Integer>> out) {\n\t\t\n\t\t\tString[] tokens = value.toLowerCase().split(\"\\\\W+\");\n\t\t\t\n            Arrays.stream(tokens)\n              .filter(token -> token.length() > 0)\n              .forEach(token -> out.collect(new Tuple2<>(token, 1)));\n\t\t}\n\t}\n}","user":"anonymous","dateUpdated":"2020-03-13T13:20:59+0000","config":{"editorSetting":{"language":"java","editOnDblClick":false,"completionSupport":false},"colWidth":12,"editorMode":"ace/mode/java","fontSize":9,"runOnSelectionChange":true,"title":false,"checkEmpty":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"2> (cursus,5)\n2> (elit,5)\n2> (vestibulum,5)\n2> (quis,5)\n2> (et,5)\n2> (nibh,5)\n2> (bibendum,5)\n2> (commodo,5)\n2> (vehicula,5)\n2> (scelerisque,5)\n2> (maximus,5)\n2> (aliquam,5)\n2> (augue,5)\n2> (fermentum,5)\n2> (condimentum,5)\n2> (lacus,5)\n2> (tempus,5)\n2> (quis,10)\n2> (et,10)\n2> (at,5)\n2> (aliquam,10)\n2> (elit,10)\n2> (mattis,5)\n2> (egestas,5)\n2> (pulvinar,5)\n2> (et,10)\n2> (cras,5)\n2> (aliquam,10)\n2> (varius,5)\n2> (quis,10)\n2> (vestibulum,10)\n2> (maximus,10)\n2> (vehicula,10)\n2> (tempor,5)\n2> (quis,10)\n2> (cursus,10)\n2> (duis,5)\n2> (tempus,10)\n2> (et,10)\n2> (tempor,10)\n2> (augue,10)\n2> (vestibulum,10)\n2> (egestas,10)\n2> (et,10)\n2> (elit,10)\n2> (vivamus,5)\n2> (nibh,10)\n2> (commodo,10)\n2> (pulvinar,10)\n2> (et,10)\n2> (quis,10)\n2> (at,10)\n2> (placerat,5)\n2> (cras,10)\n2> (lacus,10)\n2> (aliquam,10)\n2> (condimentum,10)\n2> (fermentum,10)\n2> (maximus,10)\n2> (at,10)\n2> (augue,10)\n2> (bibendum,10)\n2> (vehicula,10)\n2> (lacus,10)\n2> (vestibulum,10)\n2> (mattis,10)\n2> (cursus,10)\n2> (elit,10)\n2> (euismod,5)\n2> (dictum,5)\n2> (quis,10)\n2> (at,10)\n2> (varius,10)\n2> (aliquam,10)\n2> (scelerisque,10)\n2> (tempus,10)\n2> (egestas,10)\n2> (et,10)\n2> (maximus,10)\n2> (at,10)\n2> (quis,10)\n2> (vivamus,10)\n2> (commodo,10)\n2> (lacus,10)\n2> (fermentum,10)\n5> (in,5)\n6> (sed,5)\n5> (orci,5)\n2> (augue,10)\n1> (suspendisse,5)\n3> (non,5)\n2> (elit,10)\n1> (ut,5)\n3> (vitae,5)\n3> (porta,5)\n2> (placerat,10)\n1> (nec,5)\n3> (dolor,5)\n1> (nunc,5)\n4> (eu,5)\n3> (lorem,5)\n1> (venenatis,5)\n4> (vel,5)\n1> (nec,10)\n3> (nisi,5)\n1> (libero,5)\n3> (non,10)\n4> (ante,5)\n1> (ac,5)\n3> (ultricies,5)\n1> (ut,10)\n4> (a,5)\n3> (phasellus,5)\n3> (volutpat,5)\n4> (elementum,5)\n1> (enim,5)\n3> (porta,10)\n4> (a,10)\n3> (facilisis,5)\n1> (eleifend,5)\n4> (porttitor,5)\n3> (non,10)\n4> (dui,5)\n1> (sem,5)\n4> (tincidunt,5)\n1> (turpis,5)\n3> (pellentesque,5)\n1> (quisque,5)\n1> (sapien,5)\n4> (mauris,5)\n1> (finibus,5)\n1> (neque,5)\n1> (nunc,10)\n2> (at,10)\n4> (dui,10)\n1> (fusce,5)\n2> (bibendum,10)\n4> (eros,5)\n1> (ut,10)\n2> (egestas,10)\n1> (arcu,5)\n4> (mi,5)\n2> (et,10)\n1> (libero,10)\n2> (duis,10)\n4> (aliquet,5)\n1> (praesent,5)\n4> (ex,5)\n1> (nec,10)\n4> (donec,5)\n4> (accumsan,5)\n2> (quis,10)\n1> (ac,10)\n2> (nibh,10)\n1> (ultrices,5)\n4> (vel,10)\n2> (condimentum,10)\n4> (a,10)\n4> (mauris,10)\n1> (nunc,10)\n2> (dictum,10)\n1> (suspendisse,10)\n4> (ante,10)\n1> (mollis,5)\n2> (elit,10)\n1> (leo,5)\n2> (vestibulum,10)\n4> (a,10)\n2> (pulvinar,10)\n1> (enim,10)\n4> (diam,5)\n4> (eu,10)\n1> (venenatis,10)\n2> (euismod,10)\n4> (mi,10)\n2> (et,10)\n1> (turpis,10)\n4> (elementum,10)\n1> (massa,5)\n4> (felis,5)\n1> (ut,10)\n2> (at,10)\n4> (risus,5)\n1> (magna,5)\n2> (cursus,10)\n4> (dui,10)\n1> (suscipit,5)\n2> (quis,10)\n1> (maecenas,5)\n4> (congue,5)\n4> (vulputate,5)\n1> (arcu,10)\n2> (augue,10)\n4> (aliquet,10)\n2> (aliquam,10)\n1> (nec,10)\n4> (tincidunt,10)\n1> (morbi,5)\n4> (hendrerit,5)\n2> (commodo,10)\n1> (posuere,5)\n4> (est,5)\n1> (quisque,10)\n2> (varius,10)\n4> (porttitor,10)\n4> (convallis,5)\n1> (ac,10)\n2> (nibh,10)\n4> (vel,10)\n1> (ipsum,5)\n2> (cras,10)\n1> (interdum,5)\n2> (at,10)\n4> (a,10)\n1> (dignissim,5)\n2> (quis,10)\n2> (et,10)\n4> (eu,10)\n1> (massa,10)\n2> (vestibulum,10)\n2> (mattis,10)\n1> (sem,10)\n4> (mauris,10)\n2> (lacus,10)\n1> (turpis,10)\n4> (ex,10)\n4> (tincidunt,10)\n2> (vivamus,10)\n1> (sapien,10)\n2> (fermentum,10)\n1> (ut,10)\n4> (rhoncus,5)\n4> (donec,10)\n2> (elit,10)\n4> (mi,10)\n1> (ultrices,10)\n2> (tempor,10)\n4> (aenean,5)\n1> (nunc,10)\n2> (quis,10)\n4> (a,10)\n2> (at,10)\n4> (gravida,5)\n1> (ac,10)\n4> (vel,10)\n2> (et,10)\n1> (ipsum,10)\n2> (egestas,10)\n1> (ut,10)\n4> (eu,10)\n2> (duis,10)\n2> (vehicula,10)\n1> (libero,10)\n4> (mauris,10)\n1> (suspendisse,10)\n4> (ex,10)\n1> (morbi,10)\n2> (placerat,10)\n1> (arcu,10)\n4> (risus,10)\n1> (nec,10)\n4> (eu,10)\n2> (aliquam,10)\n4> (accumsan,10)\n2> (lacus,10)\n4> (ante,10)\n2> (commodo,10)\n4> (ullamcorper,5)\n1> (finibus,10)\n1> (leo,10)\n2> (condimentum,10)\n4> (est,10)\n1> (ac,10)\n4> (tincidunt,10)\n1> (interdum,10)\n4> (felis,10)\n2> (euismod,10)\n1> (magna,10)\n2> (bibendum,10)\n2> (quis,10)\n4> (eros,10)\n1> (nec,10)\n2> (maximus,10)\n4> (vel,10)\n1> (neque,10)\n2> (scelerisque,10)\n4> (a,10)\n1> (massa,10)\n2> (cursus,10)\n1> (suscipit,10)\n4> (dui,10)\n2> (at,10)\n4> (vulputate,10)\n2> (nibh,10)\n1> (eleifend,10)\n4> (eu,10)\n1> (turpis,10)\n2> (tempor,10)\n4> (rhoncus,10)\n1> (mollis,10)\n4> (pretium,5)\n1> (sem,10)\n2> (pulvinar,10)\n4> (diam,10)\n2> (euismod,10)\n1> (posuere,10)\n4> (mauris,10)\n2> (et,10)\n4> (mi,10)\n1> (enim,10)\n2> (egestas,10)\n4> (a,10)\n1> (ut,10)\n4> (congue,10)\n2> (mattis,10)\n4> (est,10)\n1> (quisque,10)\n2> (et,10)\n4> (elementum,10)\n1> (rutrum,5)\n2> (placerat,10)\n4> (eu,10)\n1> (nec,10)\n2> (vehicula,10)\n1> (ipsum,10)\n2> (lacus,10)\n4> (donec,10)\n2> (vestibulum,10)\n4> (felis,10)\n1> (morbi,10)\n2> (elit,10)\n4> (vel,10)\n1> (ac,10)\n1> (leo,10)\n2> (augue,10)\n1> (ut,10)\n2> (duis,10)\n4> (gravida,10)\n1> (maecenas,10)\n4> (accumsan,10)\n2> (et,10)\n2> (tempus,10)\n1> (nunc,10)\n2> (bibendum,10)\n1> (turpis,10)\n4> (ante,10)\n2> (dictum,10)\n4> (diam,10)\n1> (neque,10)\n2> (vivamus,10)\n4> (tincidunt,10)\n1> (venenatis,10)\n2> (at,10)\n2> (condimentum,10)\n4> (a,10)\n1> (magna,10)\n2> (commodo,10)\n1> (nec,10)\n4> (convallis,10)\n2> (aliquam,10)\n1> (interdum,10)\n4> (elementum,10)\n1> (libero,10)\n4> (eu,10)\n2> (quis,10)\n4> (ex,10)\n1> (dignissim,10)\n2> (varius,10)\n4> (ullamcorper,10)\n1> (enim,10)\n4> (mauris,10)\n1> (finibus,10)\n2> (vestibulum,10)\n1> (ac,10)\n4> (vel,10)\n2> (cursus,10)\n1> (massa,10)\n4> (est,10)\n4> (rhoncus,10)\n2> (vehicula,10)\n1> (nunc,10)\n1> (ut,10)\n4> (a,10)\n1> (sem,10)\n2> (et,10)\n4> (aliquet,10)\n2> (placerat,10)\n4> (mi,10)\n1> (mollis,10)\n2> (maximus,10)\n4> (pretium,10)\n2> (at,10)\n1> (nec,10)\n4> (eros,10)\n1> (suspendisse,10)\n2> (ad,5)\n4> (tincidunt,10)\n1> (arcu,10)\n4> (dui,10)\n2> (augue,10)\n2> (commodo,10)\n4> (hendrerit,10)\n1> (sapien,10)\n2> (mattis,10)\n4> (ante,10)\n4> (donec,10)\n1> (nec,10)\n2> (elit,10)\n2> (scelerisque,10)\n1> (massa,10)\n4> (eu,10)\n1> (neque,10)\n2> (aliquam,10)\n4> (vel,10)\n1> (ultrices,10)\n4> (aenean,10)\n1> (suscipit,10)\n2> (quis,10)\n2> (at,10)\n4> (congue,10)\n2> (vehicula,10)\n4> (risus,10)\n1> (leo,10)\n2> (egestas,10)\n1> (fusce,10)\n4> (vulputate,10)\n2> (pulvinar,10)\n4> (accumsan,10)\n2> (vivamus,10)\n1> (ipsum,10)\n4> (gravida,10)\n2> (varius,10)\n1> (posuere,10)\n2> (vestibulum,10)\n4> (felis,10)\n1> (ac,10)\n1> (neque,10)\n4> (ex,10)\n2> (et,10)\n1> (rutrum,10)\n4> (diam,10)\n1> (nec,10)\n2> (euismod,10)\n1> (morbi,10)\n2> (duis,10)\n4> (vel,10)\n1> (ut,10)\n2> (lacus,10)\n2> (at,10)\n4> (mauris,10)\n1> (finibus,10)\n2> (tempor,10)\n4> (eros,10)\n1> (praesent,10)\n2> (bibendum,10)\n4> (tincidunt,10)\n2> (dictum,10)\n1> (eleifend,10)\n4> (eu,10)\n4> (donec,10)\n2> (tempus,10)\n1> (libero,10)\n2> (quis,10)\n4> (elementum,10)\n1> (nunc,10)\n2> (augue,10)\n4> (ante,10)\n1> (enim,10)\n2> (fermentum,10)\n1> (sem,10)\n4> (a,10)\n1> (ipsum,10)\n2> (vivamus,10)\n4> (risus,10)\n2> (et,10)\n1> (ultrices,10)\n2> (cras,10)\n1> (arcu,10)\n4> (aliquet,10)\n2> (at,10)\n4> (semper,5)\n1> (turpis,10)\n1> (nec,10)\n4> (eu,10)\n2> (egestas,10)\n1> (rutrum,10)\n1> (morbi,10)\n4> (vel,10)\n4> (dui,10)\n1> (ac,10)\n2> (et,10)\n4> (mauris,10)\n2> (quis,10)\n4> (eros,10)\n1> (suspendisse,10)\n4> (est,10)\n2> (elit,10)\n1> (interdum,10)\n4> (donec,10)\n2> (euismod,10)\n1> (nunc,10)\n4> (congue,10)\n2> (lacus,10)\n1> (dignissim,10)\n4> (diam,10)\n2> (nibh,10)\n2> (at,10)\n4> (hendrerit,10)\n1> (neque,10)\n2> (et,10)\n1> (suscipit,10)\n4> (gravida,10)\n2> (quis,10)\n1> (ut,10)\n2> (vestibulum,10)\n4> (rhoncus,10)\n1> (mollis,10)\n2> (commodo,10)\n4> (ex,10)\n1> (sapien,10)\n4> (tincidunt,10)\n1> (ipsum,10)\n2> (bibendum,10)\n4> (mi,10)\n1> (massa,10)\n2> (condimentum,10)\n1> (nec,10)\n4> (pretium,10)\n2> (tempor,10)\n1> (ac,10)\n4> (vel,10)\n1> (posuere,10)\n2> (tempus,10)\n4> (eros,10)\n1> (finibus,10)\n1> (leo,10)\n4> (vulputate,10)\n4> (porttitor,10)\n4> (convallis,10)\n2> (augue,10)\n1> (turpis,10)\n2> (egestas,10)\n1> (enim,10)\n4> (ullamcorper,10)\n2> (euismod,10)\n4> (ante,10)\n1> (ac,10)\n2> (et,10)\n1> (nunc,10)\n4> (mauris,10)\n4> (eu,10)\n1> (maecenas,10)\n2> (nibh,10)\n2> (vehicula,10)\n1> (interdum,10)\n2> (quis,10)\n4> (donec,10)\n5> (in,10)\n1> (ut,10)\n1> (quisque,10)\n5> (quam,5)\n4> (est,10)\n2> (placerat,10)\n4> (a,10)\n5> (id,5)\n2> (at,10)\n1> (venenatis,10)\n4> (vel,10)\n2> (pulvinar,10)\n5> (velit,5)\n4> (mauris,10)\n5> (efficitur,5)\n1> (ipsum,10)\n4> (aliquet,10)\n5> (orci,10)\n2> (vestibulum,10)\n1> (magna,10)\n2> (lacus,10)\n1> (neque,10)\n5> (nisl,5)\n4> (accumsan,10)\n2> (vivamus,10)\n4> (felis,10)\n2> (scelerisque,10)\n4> (risus,10)\n1> (massa,10)\n5> (eget,5)\n2> (aliquam,10)\n1> (morbi,10)\n5> (nulla,5)\n2> (et,10)\n5> (malesuada,5)\n1> (sem,10)\n4> (tincidunt,10)\n2> (quis,10)\n5> (id,10)\n4> (rhoncus,10)\n1> (ac,10)\n2> (maximus,10)\n5> (sollicitudin,5)\n4> (gravida,10)\n1> (nec,10)\n2> (cursus,10)\n5> (efficitur,10)\n4> (dui,10)\n5> (sagittis,5)\n2> (condimentum,10)\n1> (suspendisse,10)\n5> (dapibus,5)\n4> (vel,10)\n2> (egestas,10)\n1> (arcu,10)\n2> (dictum,10)\n5> (sodales,5)\n4> (ex,10)\n2> (mattis,10)\n5> (in,10)\n4> (aenean,10)\n5> (blandit,5)\n1> (leo,10)\n5> (tortor,5)\n2> (elit,10)\n1> (adipiscing,5)\n4> (mi,10)\n4> (a,10)\n1> (ut,10)\n5> (luctus,5)\n4> (eu,10)\n2> (nibh,10)\n1> (nunc,10)\n5> (id,10)\n2> (lacus,10)\n4> (congue,10)\n5> (velit,10)\n1> (ipsum,10)\n2> (fermentum,10)\n5> (nulla,10)\n4> (est,10)\n1> (suscipit,10)\n2> (cras,10)\n4> (elementum,10)\n5> (eget,10)\n1> (ut,10)\n2> (varius,10)\n4> (porttitor,10)\n1> (enim,10)\n4> (tincidunt,10)\n5> (molestie,5)\n2> (augue,10)\n5> (dapibus,10)\n5> (quam,10)\n2> (et,10)\n5> (in,10)\n2> (bibendum,10)\n4> (donec,10)\n4> (mauris,10)\n2> (tempus,10)\n1> (sem,10)\n5> (lacinia,5)\n2> (at,10)\n1> (finibus,10)\n5> (in,10)\n4> (a,10)\n4> (rhoncus,10)\n5> (nulla,10)\n2> (aliquam,10)\n5> (id,10)\n5> (luctus,10)\n1> (magna,10)\n2> (dictum,10)\n4> (vel,10)\n5> (etiam,5)\n1> (sapien,10)\n2> (elit,10)\n5> (molestie,10)\n1> (leo,10)\n4> (gravida,10)\n2> (duis,10)\n1> (libero,10)\n5> (eget,10)\n4> (eu,10)\n2> (tempor,10)\n5> (in,10)\n4> (semper,10)\n2> (vehicula,10)\n1> (fusce,10)\n5> (orci,10)\n4> (diam,10)\n2> (condimentum,10)\n4> (mauris,10)\n5> (pharetra,5)\n1> (posuere,10)\n4> (ante,10)\n1> (nec,10)\n2> (et,10)\n5> (malesuada,10)\n4> (dui,10)\n1> (neque,10)\n4> (mi,10)\n5> (nulla,10)\n2> (bibendum,10)\n1> (turpis,10)\n4> (vulputate,10)\n2> (scelerisque,10)\n5> (velit,10)\n1> (praesent,10)\n4> (est,10)\n2> (quis,10)\n5> (sollicitudin,10)\n1> (mollis,10)\n4> (felis,10)\n5> (nisl,10)\n2> (nibh,10)\n4> (eros,10)\n1> (venenatis,10)\n5> (in,10)\n2> (vestibulum,10)\n4> (pretium,10)\n1> (nunc,10)\n5> (quam,10)\n2> (quis,10)\n4> (aliquet,10)\n1> (maecenas,10)\n5> (sagittis,10)\n2> (at,10)\n1> (ultrices,10)\n5> (efficitur,10)\n4> (diam,10)\n1> (ut,10)\n2> (et,10)\n5> (eget,10)\n4> (hendrerit,10)\n1> (rutrum,10)\n1> (ac,10)\n2> (maximus,10)\n4> (eu,10)\n5> (sodales,10)\n1> (nec,10)\n4> (risus,10)\n2> (quis,10)\n1> (sem,10)\n5> (dapibus,10)\n4> (aenean,10)\n2> (augue,10)\n1> (eleifend,10)\n5> (in,10)\n4> (tincidunt,10)\n2> (euismod,10)\n1> (dignissim,10)\n5> (id,10)\n2> (pulvinar,10)\n4> (a,10)\n2> (elit,10)\n4> (eu,10)\n1> (interdum,10)\n2> (commodo,10)\n2> (at,10)\n4> (vel,10)\n5> (nulla,10)\n4> (pretium,10)\n1> (morbi,10)\n4> (ex,10)\n2> (egestas,10)\n1> (nunc,10)\n5> (in,10)\n4> (mauris,10)\n2> (nibh,10)\n1> (ac,10)\n5> (velit,10)\n5> (blandit,10)\n2> (mattis,10)\n1> (arcu,10)\n4> (convallis,10)\n5> (quam,10)\n1> (quisque,10)\n4> (rhoncus,10)\n2> (duis,10)\n1> (ut,10)\n2> (aliquam,10)\n4> (accumsan,10)\n5> (luctus,10)\n1> (suspendisse,10)\n2> (bibendum,10)\n5> (molestie,10)\n2> (varius,10)\n4> (mi,10)\n2> (vehicula,10)\n4> (tincidunt,10)\n6> (sed,10)\n5> (orci,10)\n4> (ante,10)\n3> (vitae,10)\n5> (in,10)\n3> (non,10)\n3> (lorem,10)\n4> (a,10)\n6> (proin,5)\n5> (sollicitudin,10)\n4> (risus,10)\n4> (eu,10)\n3> (tristique,5)\n5> (etiam,10)\n4> (porttitor,10)\n3> (ligula,5)\n1> (neque,10)\n5> (eget,10)\n4> (mauris,10)\n3> (iaculis,5)\n1> (suscipit,10)\n1> (magna,10)\n3> (metus,5)\n5> (in,10)\n1> (ut,10)\n3> (porta,10)\n5> (tortor,10)\n4> (ullamcorper,10)\n1> (ipsum,10)\n5> (etiam,10)\n1> (finibus,10)\n4> (est,10)\n3> (non,10)\n1> (nec,10)\n4> (donec,10)\n5> (sodales,10)\n3> (vitae,10)\n4> (vel,10)\n3> (dolor,10)\n5> (malesuada,10)\n3> (nisi,10)\n1> (praesent,10)\n5> (efficitur,10)\n4> (eros,10)\n5> (id,10)\n1> (sapien,10)\n3> (ornare,5)\n5> (lacinia,10)\n4> (hendrerit,10)\n3> (purus,5)\n1> (posuere,10)\n4> (tincidunt,10)\n3> (pellentesque,10)\n5> (velit,10)\n4> (convallis,10)\n5> (dapibus,10)\n4> (felis,10)\n3> (imperdiet,5)\n5> (nulla,10)\n4> (dui,10)\n1> (leo,10)\n3> (consequat,5)\n5> (luctus,10)\n1> (ut,10)\n4> (mauris,10)\n1> (enim,10)\n3> (pellentesque,10)\n5> (in,10)\n4> (congue,10)\n1> (massa,10)\n3> (metus,10)\n4> (semper,10)\n5> (nisl,10)\n3> (ultricies,10)\n5> (pharetra,10)\n3> (iaculis,10)\n1> (nec,10)\n4> (ex,10)\n5> (orci,10)\n3> (non,10)\n4> (vel,10)\n1> (massa,10)\n3> (pellentesque,10)\n5> (in,10)\n1> (ipsum,10)\n4> (elementum,10)\n3> (vitae,10)\n5> (class,5)\n1> (fusce,10)\n5> (aptent,5)\n5> (taciti,5)\n4> (vel,10)\n1> (libero,10)\n3> (purus,10)\n5> (nostra,5)\n1> (arcu,10)\n3> (lorem,10)\n5> (malesuada,10)\n3> (facilisis,10)\n1> (turpis,10)\n5> (id,10)\n4> (mauris,10)\n5> (nulla,10)\n1> (maecenas,10)\n4> (diam,10)\n3> (dolor,10)\n5> (molestie,10)\n4> (hendrerit,10)\n1> (mollis,10)\n1> (sem,10)\n4> (mi,10)\n3> (ornare,10)\n1> (nunc,10)\n1> (eleifend,10)\n4> (eu,10)\n3> (nullam,5)\n1> (sapien,10)\n4> (porttitor,10)\n3> (non,10)\n4> (accumsan,10)\n1> (ut,10)\n4> (a,10)\n1> (dignissim,10)\n3> (tristique,10)\n4> (convallis,10)\n1> (neque,10)\n3> (metus,10)\n4> (est,10)\n1> (ac,10)\n3> (pellentesque,10)\n4> (tincidunt,10)\n4> (donec,10)\n3> (vitae,10)\n1> (finibus,10)\n3> (consequat,10)\n1> (morbi,10)\n4> (pretium,10)\n3> (phasellus,10)\n1> (fames,5)\n4> (dui,10)\n1> (rutrum,10)\n3> (nisi,10)\n1> (nec,10)\n4> (vel,10)\n4> (felis,10)\n1> (praesent,10)\n4> (ullamcorper,10)\n3> (imperdiet,10)\n1> (posuere,10)\n3> (pellentesque,10)\n4> (mauris,10)\n1> (leo,10)\n3> (non,10)\n3> (facilisis,10)\n4> (risus,10)\n3> (fringilla,5)\n1> (interdum,10)\n4> (diam,10)\n3> (lorem,10)\n4> (eu,10)\n1> (libero,10)\n4> (a,10)\n1> (ut,10)\n3> (pellentesque,10)\n4> (eros,10)\n1> (arcu,10)\n5> (in,10)\n3> (vitae,10)\n3> (ornare,10)\n1> (quisque,10)\n4> (semper,10)\n5> (tortor,10)\n3> (tristique,10)\n1> (ac,10)\n4> (mauris,10)\n1> (suspendisse,10)\n4> (hendrerit,10)\n1> (suscipit,10)\n4> (aliquet,10)\n3> (ligula,10)\n1> (maecenas,10)\n3> (metus,10)\n1> (nunc,10)\n4> (tincidunt,10)\n3> (porta,10)\n4> (gravida,10)\n1> (sem,10)\n3> (phasellus,10)\n1> (turpis,10)\n4> (dui,10)\n3> (non,10)\n1> (nec,10)\n3> (dolor,10)\n1> (leo,10)\n3> (purus,10)\n1> (nunc,10)\n4> (donec,10)\n3> (pellentesque,10)\n1> (enim,10)\n4> (vulputate,10)\n3> (vitae,10)\n4> (rhoncus,10)\n3> (ultricies,10)\n1> (interdum,10)\n4> (a,10)\n1> (ipsum,10)\n4> (litora,5)\n3> (non,10)\n1> (massa,10)\n4> (torquent,5)\n3> (volutpat,10)\n4> (conubia,5)\n5> (sagittis,10)\n1> (ultrices,10)\n4> (eu,10)\n3> (ornare,10)\n3> (metus,10)\n1> (eleifend,10)\n4> (vel,10)\n5> (eget,10)\n1> (magna,10)\n3> (pellentesque,10)\n5> (orci,10)\n4> (elementum,10)\n5> (in,10)\n3> (ligula,10)\n4> (ante,10)\n1> (sapien,10)\n5> (id,10)\n4> (aenean,10)\n3> (nisi,10)\n1> (turpis,10)\n4> (felis,10)\n3> (non,10)\n4> (congue,10)\n5> (in,10)\n1> (ut,10)\n3> (lorem,10)\n4> (convallis,10)\n5> (nulla,10)\n1> (sociosqu,5)\n3> (iaculis,10)\n1> (inceptos,5)\n4> (a,10)\n5> (velit,10)\n3> (consequat,10)\n1> (himenaeos,5)\n1> (primis,5)\n3> (facilisis,10)\n4> (mauris,10)\n5> (pharetra,10)\n3> (purus,10)\n1> (nec,10)\n4> (diam,10)\n5> (quam,10)\n3> (tristique,10)\n1> (libero,10)\n5> (eget,10)\n3> (metus,10)\n1> (ac,10)\n4> (eros,10)\n3> (ligula,10)\n4> (risus,10)\n1> (fusce,10)\n5> (lacinia,10)\n3> (fringilla,10)\n4> (tincidunt,10)\n5> (nulla,10)\n3> (imperdiet,10)\n1> (massa,10)\n4> (donec,10)\n3> (purus,10)\n5> (nisl,10)\n1> (venenatis,10)\n4> (aliquet,10)\n3> (non,10)\n5> (etiam,10)\n4> (ullamcorper,10)\n3> (ultricies,10)\n1> (nunc,10)\n5> (malesuada,10)\n4> (ante,10)\n5> (in,10)\n4> (potenti,5)\n3> (lorem,10)\n5> (platea,5)\n4> (eu,10)\n1> (ac,10)\n3> (ornare,10)\n5> (eget,10)\n4> (vulputate,10)\n3> (phasellus,10)\n1> (magna,10)\n5> (id,10)\n3> (metus,10)\n1> (ut,10)\n5> (dapibus,10)\n4> (felis,10)\n3> (vitae,10)\n1> (arcu,10)\n5> (pharetra,10)\n4> (ex,10)\n3> (hac,5)\n1> (nec,10)\n5> (molestie,10)\n4> (porttitor,10)\n3> (habitasse,5)\n1> (mollis,10)\n3> (dictumst,5)\n4> (convallis,10)\n5> (in,10)\n1> (sapien,10)\n3> (non,10)\n5> (efficitur,10)\n4> (a,10)\n1> (neque,10)\n3> (porta,10)\n1> (rutrum,10)\n4> (vel,10)\n3> (dolor,10)\n5> (orci,10)\n5> (nisl,10)\n1> (libero,10)\n3> (phasellus,10)\n3> (nisi,10)\n4> (mi,10)\n1> (ac,10)\n4> (tincidunt,10)\n5> (blandit,10)\n3> (volutpat,10)\n1> (praesent,10)\n4> (mauris,10)\n5> (eget,10)\n4> (est,10)\n5> (sodales,10)\n1> (sem,10)\n5> (nulla,10)\n4> (aliquet,10)\n5> (sagittis,10)\n3> (pellentesque,10)\n4> (hendrerit,10)\n1> (suspendisse,10)\n5> (sollicitudin,10)\n4> (donec,10)\n1> (nunc,10)\n3> (vitae,10)\n4> (accumsan,10)\n1> (ut,10)\n4> (semper,10)\n5> (in,10)\n3> (nullam,10)\n1> (nec,10)\n4> (ex,10)\n5> (id,10)\n4> (a,10)\n3> (facilisis,10)\n4> (pretium,10)\n5> (in,10)\n1> (enim,10)\n3> (consequat,10)\n5> (tortor,10)\n1> (mollis,10)\n3> (fringilla,10)\n5> (pharetra,10)\n3> (metus,10)\n4> (risus,10)\n1> (leo,10)\n5> (luctus,10)\n3> (lorem,10)\n4> (vulputate,10)\n1> (ut,10)\n1> (interdum,10)\n3> (vitae,10)\n4> (eu,10)\n5> (eget,10)\n1> (massa,10)\n3> (iaculis,10)\n1> (sem,10)\n5> (efficitur,10)\n4> (vel,10)\n3> (nisi,10)\n5> (quam,10)\n1> (morbi,10)\n3> (ornare,10)\n4> (porttitor,10)\n5> (orci,10)\n1> (quisque,10)\n3> (imperdiet,10)\n5> (in,10)\n4> (rhoncus,10)\n1> (nec,10)\n4> (a,10)\n1> (ipsum,10)\n4> (eros,10)\n5> (sodales,10)\n1> (fusce,10)\n3> (non,10)\n5> (id,10)\n1> (dignissim,10)\n3> (dolor,10)\n4> (mauris,10)\n5> (nisl,10)\n1> (maecenas,10)\n4> (convallis,10)\n3> (ligula,10)\n5> (nulla,10)\n4> (diam,10)\n1> (suscipit,10)\n3> (pellentesque,10)\n5> (velit,10)\n4> (felis,10)\n3> (non,10)\n1> (posuere,10)\n4> (ex,10)\n5> (molestie,10)\n3> (iaculis,10)\n1> (ut,10)\n5> (in,10)\n4> (donec,10)\n3> (facilisis,10)\n1> (magna,10)\n5> (malesuada,10)\n1> (turpis,10)\n4> (tincidunt,10)\n3> (tristique,10)\n1> (ultrices,10)\n4> (est,10)\n3> (vitae,10)\n5> (tortor,10)\n1> (suspendisse,10)\n4> (eu,10)\n5> (etiam,10)\n3> (non,10)\n1> (ac,10)\n4> (ante,10)\n5> (in,10)\n3> (consequat,10)\n1> (nunc,10)\n4> (gravida,10)\n3> (nisi,10)\n1> (sem,10)\n5> (id,10)\n4> (aenean,10)\n3> (volutpat,10)\n4> (risus,10)\n1> (praesent,10)\n5> (lacinia,10)\n3> (vitae,10)\n4> (dui,10)\n3> (dolor,10)\n5> (eget,10)\n1> (sapien,10)\n4> (a,10)\n3> (fringilla,10)\n5> (velit,10)\n1> (nec,10)\n4> (vel,10)\n5> (in,10)\n1> (neque,10)\n3> (imperdiet,10)\n5> (pharetra,10)\n4> (aliquet,10)\n3> (phasellus,10)\n5> (dapibus,10)\n1> (rutrum,10)\n4> (elementum,10)\n3> (pellentesque,10)\n1> (finibus,10)\n5> (tortor,10)\n4> (eu,10)\n3> (ultricies,10)\n5> (orci,10)\n4> (porttitor,10)\n3> (ligula,10)\n5> (quam,10)\n4> (mi,10)\n1> (eleifend,10)\n3> (purus,10)\n5> (sagittis,10)\n4> (aenean,10)\n1> (arcu,10)\n5> (id,10)\n4> (mauris,10)\n3> (vitae,10)\n1> (posuere,10)\n5> (luctus,10)\n3> (lorem,10)\n1> (ut,10)\n4> (vel,10)\n5> (eget,10)\n3> (non,10)\n1> (leo,10)\n4> (a,10)\n5> (in,10)\n3> (dolor,10)\n1> (enim,10)\n4> (vulputate,10)\n5> (nisl,10)\n3> (tristique,10)\n4> (eros,10)\n5> (nulla,10)\n1> (nunc,10)\n4> (semper,10)\n3> (pellentesque,10)\n4> (pretium,10)\n5> (malesuada,10)\n3> (non,10)\n4> (dui,10)\n1> (sem,10)\n5> (tortor,10)\n1> (magna,10)\n3> (ornare,10)\n4> (a,10)\n5> (in,10)\n1> (ipsum,10)\n5> (eget,10)\n4> (donec,10)\n3> (vitae,10)\n1> (ac,10)\n5> (nulla,10)\n4> (diam,10)\n3> (ligula,10)\n1> (morbi,10)\n5> (id,10)\n4> (convallis,10)\n1> (senectus,5)\n3> (nisi,10)\n3> (porta,10)\n1> (turpis,10)\n3> (nullam,10)\n5> (eget,10)\n1> (libero,10)\n3> (metus,10)\n5> (id,10)\n1> (sapien,10)\n1> (venenatis,10)\n4> (tincidunt,10)\n5> (in,10)\n3> (facilisis,10)\n1> (suspendisse,10)\n5> (etiam,10)\n4> (accumsan,10)\n3> (non,10)\n1> (enim,10)\n4> (felis,10)\n3> (iaculis,10)\n1> (finibus,10)\n5> (sodales,10)\n4> (a,10)\n3> (fringilla,10)\n1> (arcu,10)\n4> (est,10)\n3> (tristique,10)\n3> (purus,10)\n1> (maecenas,10)\n4> (ante,10)\n3> (vitae,10)\n1> (interdum,10)\n4> (eu,10)\n3> (consequat,10)\n1> (ut,10)\n4> (eros,10)\n1> (rutrum,10)\n4> (ex,10)\n1> (nec,10)\n3> (non,10)\n4> (donec,10)\n1> (ut,10)\n4> (ullamcorper,10)\n3> (ornare,10)\n1> (massa,10)\n4> (vel,10)\n3> (ligula,10)\n3> (lorem,10)\n1> (ac,10)\n3> (nisi,10)\n4> (mauris,10)\n1> (sapien,10)\n4> (pretium,10)\n3> (vitae,10)\n1> (turpis,10)\n4> (gravida,10)\n3> (dolor,10)\n1> (mollis,10)\n3> (volutpat,10)\n4> (aenean,10)\n1> (dignissim,10)\n1> (nec,10)\n4> (a,10)\n3> (pellentesque,10)\n1> (praesent,10)\n4> (eu,10)\n1> (ultrices,10)\n3> (tristique,10)\n4> (est,10)\n3> (non,10)\n1> (ut,10)\n4> (aliquet,10)\n3> (imperdiet,10)\n4> (congue,10)\n3> (vitae,10)\n4> (felis,10)\n3> (consequat,10)\n4> (vel,10)\n3> (ultricies,10)\n4> (risus,10)\n3> (iaculis,10)\n1> (ipsum,10)\n4> (rhoncus,10)\n1> (sem,10)\n4> (ex,10)\n3> (nullam,10)\n3> (metus,10)\n1> (suspendisse,10)\n4> (elementum,10)\n3> (purus,10)\n4> (mauris,10)\n1> (nunc,10)\n3> (ligula,10)\n1> (magna,10)\n4> (vel,10)\n4> (a,10)\n3> (volutpat,10)\n1> (nec,10)\n4> (porttitor,10)\n1> (ipsum,10)\n3> (fringilla,10)\n4> (dui,10)\n1> (neque,10)\n3> (porta,10)\n4> (hendrerit,10)\n3> (non,10)\n4> (tincidunt,10)\n1> (suscipit,10)\n3> (vitae,10)\n3> (ornare,10)\n1> (leo,10)\n4> (eros,10)\n3> (pellentesque,10)\n4> (est,10)\n1> (arcu,10)\n4> (convallis,10)\n3> (phasellus,10)\n1> (nec,10)\n4> (donec,10)\n1> (interdum,10)\n3> (ultricies,10)\n3> (consequat,10)\n1> (massa,10)\n4> (vulputate,10)\n3> (metus,10)\n3> (dolor,10)\n1> (posuere,10)\n3> (lorem,10)\n4> (vel,10)\n1> (curae,5)\n3> (vitae,10)\n1> (sapien,10)\n1> (ut,10)\n4> (ex,10)\n3> (non,10)\n1> (morbi,10)\n4> (eu,10)\n3> (nisi,10)\n1> (ac,10)\n4> (ante,10)\n3> (iaculis,10)\n4> (accumsan,10)\n1> (ipsum,10)\n1> (fusce,10)\n1> (magna,10)\n3> (facilisis,10)\n4> (mauris,10)\n1> (fames,10)\n4> (felis,10)\n3> (tristique,10)\n1> (libero,10)\n3> (nullam,10)\n1> (sem,10)\n4> (elementum,10)\n3> (pellentesque,10)\n4> (diam,10)\n1> (nunc,10)\n3> (lorem,10)\n4> (congue,10)\n4> (a,10)\n3> (imperdiet,10)\n1> (quisque,10)\n4> (semper,10)\n3> (non,10)\n1> (finibus,10)\n4> (mi,10)\n3> (dolor,10)\n1> (turpis,10)\n3> (purus,10)\n4> (ullamcorper,10)\n4> (vel,10)\n4> (mauris,10)\n3> (fringilla,10)\n1> (ultrices,10)\n4> (eu,10)\n3> (nisi,10)\n4> (est,10)\n3> (lorem,10)\n4> (donec,10)\n1> (ac,10)\n3> (non,10)\n1> (venenatis,10)\n4> (rhoncus,10)\n3> (consequat,10)\n1> (ipsum,10)\n4> (aenean,10)\n3> (phasellus,10)\n1> (rutrum,10)\n4> (ante,10)\n1> (nec,10)\n1> (suspendisse,10)\n3> (facilisis,10)\n1> (ut,10)\n4> (hendrerit,10)\n3> (ligula,10)\n3> (imperdiet,10)\n4> (risus,10)\n1> (posuere,10)\n3> (purus,10)\n4> (semper,10)\n1> (maecenas,10)\n3> (vitae,10)\n4> (vel,10)\n1> (ipsum,10)\n3> (dolor,10)\n4> (ullamcorper,10)\n3> (pellentesque,10)\n1> (libero,10)\n4> (tincidunt,10)\n1> (neque,10)\n3> (tristique,10)\n4> (a,10)\n1> (nunc,10)\n4> (mauris,10)\n3> (nullam,10)\n1> (dignissim,10)\n4> (porttitor,10)\n3> (ornare,10)\n1> (ut,10)\n3> (non,10)\n1> (massa,10)\n3> (vitae,10)\n4> (eu,10)\n1> (sapien,10)\n3> (metus,10)\n4> (donec,10)\n1> (enim,10)\n3> (ultricies,10)\n4> (ante,10)\n1> (venenatis,10)\n3> (pellentesque,10)\n4> (mi,10)\n3> (nisi,10)\n1> (leo,10)\n3> (hac,10)\n1> (nec,10)\n3> (habitasse,10)\n3> (dictumst,10)\n1> (posuere,10)\n1> (arcu,10)\n3> (tristique,10)\n3> (volutpat,10)\n1> (ipsum,10)\n4> (eros,10)\n1> (turpis,10)\n4> (vulputate,10)\n4> (ullamcorper,10)\n1> (ac,10)\n4> (vel,10)\n1> (morbi,10)\n3> (lorem,10)\n3> (pellentesque,10)\n4> (est,10)\n4> (aliquet,10)\n3> (vitae,10)\n4> (diam,10)\n1> (ut,10)\n3> (non,10)\n4> (ante,10)\n1> (nunc,10)\n4> (pretium,10)\n1> (finibus,10)\n3> (dolor,10)\n4> (ex,10)\n1> (nec,10)\n4> (a,10)\n3> (iaculis,10)\n1> (interdum,10)\n4> (rhoncus,10)\n1> (ultrices,10)\n3> (pellentesque,10)\n1> (suscipit,10)\n4> (congue,10)\n3> (tristique,10)\n1> (sapien,10)\n4> (accumsan,10)\n1> (sem,10)\n3> (purus,10)\n3> (consequat,10)\n1> (ipsum,10)\n4> (tincidunt,10)\n3> (porta,10)\n4> (convallis,10)\n1> (dignissim,10)\n3> (non,10)\n4> (eu,10)\n3> (nisi,10)\n4> (felis,10)\n3> (metus,10)\n1> (eleifend,10)\n4> (elementum,10)\n1> (senectus,10)\n3> (vitae,10)\n4> (est,10)\n1> (primis,10)\n4> (vel,10)\n3> (imperdiet,10)\n4> (ante,10)\n1> (magna,10)\n3> (tristique,10)\n4> (eros,10)\n1> (rutrum,10)\n3> (non,10)\n4> (eu,10)\n3> (dolor,10)\n1> (ac,10)\n3> (iaculis,10)\n4> (a,10)\n1> (morbi,10)\n4> (dui,10)\n3> (vitae,10)\n1> (fames,10)\n4> (porttitor,10)\n3> (ligula,10)\n1> (neque,10)\n4> (mauris,10)\n3> (fringilla,10)\n1> (turpis,10)\n1> (ut,10)\n3> (pellentesque,10)\n1> (suspendisse,10)\n4> (donec,10)\n3> (ultricies,10)\n2> (at,10)\n1> (mollis,10)\n2> (quis,10)\n3> (facilisis,10)\n4> (litora,10)\n1> (libero,10)\n2> (elit,10)\n3> (pellentesque,10)\n4> (torquent,10)\n2> (vestibulum,10)\n3> (phasellus,10)\n4> (conubia,10)\n2> (maximus,10)\n3> (lorem,10)\n4> (mi,10)\n1> (ultrices,10)\n1> (ipsum,10)\n2> (et,10)\n3> (metus,10)\n4> (aenean,10)\n3> (volutpat,10)\n4> (eu,10)\n3> (tristique,10)\n1> (massa,10)\n2> (tempor,10)\n3> (nisi,10)\n2> (aliquam,10)\n1> (enim,10)\n3> (nullam,10)\n4> (est,10)\n2> (tempus,10)\n4> (ex,10)\n1> (nec,10)\n2> (lacus,10)\n3> (porta,10)\n1> (nunc,10)\n4> (diam,10)\n2> (nibh,10)\n3> (non,10)\n1> (arcu,10)\n1> (ut,10)\n4> (a,10)\n2> (mattis,10)\n1> (ac,10)\n4> (mauris,10)\n2> (euismod,10)\n1> (interdum,10)\n4> (tincidunt,10)\n2> (augue,10)\n1> (sapien,10)\n4> (risus,10)\n2> (at,10)\n1> (maecenas,10)\n3> (pellentesque,10)\n1> (eleifend,10)\n4> (accumsan,10)\n2> (quis,10)\n4> (eros,10)\n3> (vitae,10)\n3> (lorem,10)\n4> (aliquet,10)\n4> (vel,10)\n1> (dignissim,10)\n3> (purus,10)\n4> (convallis,10)\n3> (ligula,10)\n2> (placerat,10)\n4> (natoque,5)\n3> (imperdiet,10)\n4> (dis,5)\n4> (ridiculus,5)\n3> (nisi,10)\n4> (eu,10)\n3> (pellentesque,10)\n6> (sit,5)\n6> (amet,5)\n4> (gravida,10)\n3> (phasellus,10)\n6> (sed,10)\n4> (hendrerit,10)\n6> (consectetur,5)\n3> (vitae,10)\n4> (mi,10)\n6> (justo,5)\n2> (elit,10)\n3> (ligula,10)\n6> (curabitur,5)\n2> (dictum,10)\n4> (pretium,10)\n4> (dui,10)\n2> (scelerisque,10)\n3> (volutpat,10)\n4> (felis,10)\n2> (maximus,10)\n6> (faucibus,5)\n3> (purus,10)\n6> (sed,10)\n2> (et,10)\n3> (ornare,10)\n4> (vel,10)\n6> (erat,5)\n3> (ultricies,10)\n4> (mauris,10)\n2> (egestas,10)\n6> (integer,5)\n3> (non,10)\n4> (congue,10)\n3> (lorem,10)\n6> (sed,10)\n6> (auctor,5)\n2> (aliquam,10)\n3> (facilisis,10)\n4> (donec,10)\n2> (condimentum,10)\n3> (pellentesque,10)\n6> (urna,5)\n2> (pulvinar,10)\n3> (tristique,10)\n6> (laoreet,5)\n2> (vestibulum,10)\n4> (elementum,10)\n6> (nam,5)\n3> (iaculis,10)\n6> (sit,10)\n3> (metus,10)\n4> (est,10)\n2> (et,10)\n6> (amet,10)\n4> (vel,10)\n2> (vivamus,10)\n6> (consectetur,10)\n3> (porta,10)\n4> (ante,10)\n2> (bibendum,10)\n6> (lobortis,5)\n2> (elit,10)\n3> (fringilla,10)\n6> (erat,10)\n4> (tincidunt,10)\n2> (at,10)\n4> (eu,10)\n6> (curabitur,10)\n4> (diam,10)\n2> (fermentum,10)\n3> (pellentesque,10)\n2> (scelerisque,10)\n6> (sed,10)\n2> (cursus,10)\n3> (dolor,10)\n6> (justo,10)\n4> (donec,10)\n2> (quis,10)\n3> (consequat,10)\n6> (odio,5)\n4> (felis,10)\n2> (vehicula,10)\n3> (nisi,10)\n6> (sit,10)\n4> (porttitor,10)\n2> (dictum,10)\n6> (amet,10)\n6> (integer,10)\n4> (accumsan,10)\n3> (ultricies,10)\n4> (dui,10)\n2> (egestas,10)\n3> (nascetur,5)\n4> (rhoncus,10)\n4> (aliquet,10)\n3> (non,10)\n2> (et,10)\n6> (faucibus,10)\n4> (vel,10)\n3> (vitae,10)\n6> (feugiat,5)\n4> (semper,10)\n2> (augue,10)\n3> (vitae,10)\n6> (lectus,5)\n4> (ante,10)\n2> (duis,10)\n6> (sed,10)\n3> (porta,10)\n4> (a,10)\n2> (vestibulum,10)\n6> (proin,10)\n3> (purus,10)\n4> (ullamcorper,10)\n2> (et,10)\n3> (pellentesque,10)\n6> (tellus,5)\n3> (imperdiet,10)\n4> (tincidunt,10)\n2> (at,10)\n6> (viverra,5)\n4> (gravida,10)\n6> (sit,10)\n3> (consequat,10)\n6> (amet,10)\n2> (lacus,10)\n4> (vulputate,10)\n3> (nullam,10)\n2> (euismod,10)\n6> (urna,10)\n4> (elementum,10)\n3> (lorem,10)\n2> (varius,10)\n4> (diam,10)\n6> (lobortis,10)\n3> (phasellus,10)\n6> (sed,10)\n2> (tempus,10)\n4> (convallis,10)\n3> (non,10)\n6> (erat,10)\n2> (et,10)\n3> (vitae,10)\n4> (ex,10)\n2> (vivamus,10)\n3> (tristique,10)\n4> (eu,10)\n2> (cras,10)\n3> (purus,10)\n4> (eros,10)\n6> (sed,10)\n2> (fermentum,10)\n3> (dolor,10)\n6> (odio,10)\n2> (commodo,10)\n2> (elit,10)\n3> (fringilla,10)\n6> (laoreet,10)\n2> (aliquam,10)\n6> (justo,10)\n3> (metus,10)\n6> (feugiat,10)\n2> (maximus,10)\n3> (pellentesque,10)\n6> (sit,10)\n2> (tempor,10)\n6> (amet,10)\n3> (nisi,10)\n2> (bibendum,10)\n3> (lorem,10)\n2> (nibh,10)\n3> (ornare,10)\n2> (scelerisque,10)\n6> (consectetur,10)\n3> (volutpat,10)\n2> (et,10)\n6> (auctor,10)\n2> (placerat,10)\n3> (vitae,10)\n2> (at,10)\n6> (faucibus,10)\n2> (vestibulum,10)\n6> (tellus,10)\n3> (non,10)\n2> (vehicula,10)\n6> (sed,10)\n3> (ligula,10)\n2> (egestas,10)\n2> (dictum,10)\n3> (iaculis,10)\n6> (sit,10)\n6> (amet,10)\n2> (quis,10)\n3> (pellentesque,10)\n2> (condimentum,10)\n6> (erat,10)\n3> (facilisis,10)\n6> (sed,10)\n6> (curabitur,10)\n2> (tempus,10)\n6> (lectus,10)\n2> (varius,10)\n6> (sed,10)\n2> (fermentum,10)\n6> (viverra,10)\n2> (et,10)\n6> (urna,10)\n2> (lacus,10)\n6> (odio,10)\n2> (euismod,10)\n6> (sit,10)\n2> (aliquam,10)\n6> (amet,10)\n2> (at,10)\n6> (tellus,10)\n2> (quis,10)\n6> (sed,10)\n6> (urna,10)\n2> (bibendum,10)\n6> (auctor,10)\n2> (mattis,10)\n6> (per,5)\n2> (et,10)\n6> (erat,10)\n2> (egestas,10)\n6> (faucibus,10)\n2> (lacus,10)\n6> (per,10)\n2> (nibh,10)\n6> (sit,10)\n2> (et,10)\n6> (amet,10)\n2> (tempor,10)\n6> (odio,10)\n2> (augue,10)\n2> (vivamus,10)\n6> (sed,10)\n2> (aliquam,10)\n6> (justo,10)\n2> (vestibulum,10)\n2> (commodo,10)\n6> (lobortis,10)\n6> (lectus,10)\n2> (cursus,10)\n6> (consectetur,10)\n2> (vehicula,10)\n6> (proin,10)\n2> (quis,10)\n6> (sed,10)\n2> (lacus,10)\n6> (tellus,10)\n2> (placerat,10)\n6> (nam,10)\n6> (faucibus,10)\n2> (at,10)\n2> (et,10)\n6> (integer,10)\n2> (nibh,10)\n6> (curabitur,10)\n2> (dictum,10)\n6> (erat,10)\n6> (odio,10)\n6> (sed,10)\n2> (elit,10)\n6> (feugiat,10)\n6> (sit,10)\n2> (duis,10)\n6> (amet,10)\n2> (egestas,10)\n2> (pulvinar,10)\n2> (tempus,10)\n6> (erat,10)\n6> (auctor,10)\n6> (consectetur,10)\n2> (et,10)\n6> (sed,10)\n2> (condimentum,10)\n6> (proin,10)\n2> (vestibulum,10)\n6> (nam,10)\n2> (maximus,10)\n6> (sit,10)\n6> (amet,10)\n2> (scelerisque,10)\n6> (viverra,10)\n2> (quis,10)\n6> (lobortis,10)\n6> (justo,10)\n2> (commodo,10)\n2> (vehicula,10)\n2> (lacus,10)\n2> (et,10)\n2> (cras,10)\n6> (odio,10)\n2> (aliquam,10)\n2> (nibh,10)\n6> (sed,10)\n2> (at,10)\n6> (lectus,10)\n2> (mattis,10)\n2> (tempor,10)\n6> (integer,10)\n6> (sit,10)\n2> (tempus,10)\n6> (amet,10)\n2> (lacus,10)\n6> (urna,10)\n2> (vestibulum,10)\n6> (odio,10)\n2> (euismod,10)\n2> (at,10)\n6> (proin,10)\n2> (commodo,10)\n6> (tellus,10)\n2> (ad,10)\n6> (curabitur,10)\n6> (sed,10)\n6> (erat,10)\n6> (laoreet,10)\n6> (viverra,10)\n2> (et,10)\n2> (tempor,10)\n6> (sed,10)\n2> (elit,10)\n6> (lobortis,10)\n6> (lectus,10)\n6> (urna,10)\n2> (scelerisque,10)\n2> (pulvinar,10)\n2> (cursus,10)\n2> (vivamus,10)\n2> (mattis,10)\n2> (at,10)\n1> (libero,10)\n1> (ultrices,10)\n6> (faucibus,10)\n2> (egestas,10)\n2> (aliquam,10)\n1> (fusce,10)\n6> (sit,10)\n2> (augue,10)\n1> (venenatis,10)\n6> (amet,10)\n1> (ut,10)\n2> (vestibulum,10)\n6> (odio,10)\n1> (turpis,10)\n1> (magna,10)\n2> (varius,10)\n1> (morbi,10)\n6> (sed,10)\n2> (et,10)\n2> (placerat,10)\n1> (finibus,10)\n2> (quis,10)\n6> (sed,10)\n1> (interdum,10)\n6> (feugiat,10)\n1> (ac,10)\n6> (sit,10)\n2> (euismod,10)\n1> (neque,10)\n6> (amet,10)\n1> (praesent,10)\n2> (dictum,10)\n6> (integer,10)\n1> (leo,10)\n2> (bibendum,10)\n6> (auctor,10)\n1> (quisque,10)\n2> (at,10)\n6> (curabitur,10)\n2> (fermentum,10)\n1> (nec,10)\n6> (lectus,10)\n1> (suspendisse,10)\n6> (viverra,10)\n2> (duis,10)\n6> (sed,10)\n1> (ipsum,10)\n2> (condimentum,10)\n6> (laoreet,10)\n2> (nibh,10)\n2> (vehicula,10)\n6> (justo,10)\n2> (cras,10)\n1> (nunc,10)\n6> (erat,10)\n2> (quis,10)\n1> (sem,10)\n6> (sit,10)\n2> (commodo,10)\n6> (amet,10)\n2> (at,10)\n1> (ut,10)\n6> (sed,10)\n2> (elit,10)\n1> (massa,10)\n6> (lobortis,10)\n2> (et,10)\n1> (arcu,10)\n6> (odio,10)\n1> (nec,10)\n6> (proin,10)\n2> (vestibulum,10)\n1> (suspendisse,10)\n1> (interdum,10)\n6> (auctor,10)\n2> (lacus,10)\n6> (urna,10)\n1> (rutrum,10)\n6> (nam,10)\n6> (integer,10)\n2> (placerat,10)\n2> (vehicula,10)\n6> (sed,10)\n1> (ut,10)\n1> (neque,10)\n2> (aliquam,10)\n6> (sed,10)\n1> (praesent,10)\n6> (tellus,10)\n1> (libero,10)\n2> (quis,10)\n1> (posuere,10)\n6> (consectetur,10)\n2> (augue,10)\n1> (ipsum,10)\n2> (cursus,10)\n6> (odio,10)\n1> (ac,10)\n2> (tempus,10)\n1> (sociosqu,10)\n6> (sit,10)\n1> (inceptos,10)\n6> (amet,10)\n2> (et,10)\n1> (himenaeos,10)\n2> (nibh,10)\n6> (justo,10)\n1> (magna,10)\n2> (vestibulum,10)\n1> (ultrices,10)\n6> (feugiat,10)\n2> (pulvinar,10)\n1> (nunc,10)\n1> (suscipit,10)\n2> (aliquam,10)\n6> (faucibus,10)\n1> (morbi,10)\n2> (at,10)\n2> (egestas,10)\n1> (sapien,10)\n2> (tempor,10)\n6> (auctor,10)\n1> (massa,10)\n1> (turpis,10)\n1> (nec,10)\n1> (ut,10)\n1> (dignissim,10)\n1> (mollis,10)\n6> (lectus,10)\n6> (nam,10)\n1> (posuere,10)\n6> (sed,10)\n1> (leo,10)\n6> (sit,10)\n1> (enim,10)\n6> (amet,10)\n6> (lobortis,10)\n1> (ac,10)\n1> (ipsum,10)\n6> (urna,10)\n1> (penatibus,5)\n6> (odio,10)\n1> (montes,5)\n1> (mus,5)\n1> (eleifend,10)\n6> (viverra,10)\n1> (turpis,10)\n6> (sed,10)\n6> (justo,10)\n1> (ac,10)\n1> (sem,10)\n6> (sit,10)\n1> (maecenas,10)\n6> (amet,10)\n1> (ut,10)\n1> (neque,10)\n1> (adipiscing,10)\n1> (nunc,10)\n6> (erat,10)\n1> (magna,10)\n6> (curabitur,10)\n1> (arcu,10)\n1> (finibus,10)\n6> (facilisi,5)\n6> (sed,10)\n1> (suscipit,10)\n1> (mollis,10)\n6> (sit,10)\n6> (amet,10)\n1> (nec,10)\n1> (morbi,10)\n6> (tellus,10)\n6> (consectetur,10)\n1> (ac,10)\n1> (libero,10)\n6> (lobortis,10)\n1> (quisque,10)\n6> (sed,10)\n1> (ut,10)\n6> (nam,10)\n5> (sollicitudin,10)\n5> (dapibus,10)\n5> (nulla,10)\n5> (in,10)\n5> (molestie,10)\n5> (eget,10)\n5> (id,10)\n6> (faucibus,10)\n5> (in,10)\n6> (erat,10)\n5> (tortor,10)\n5> (blandit,10)\n6> (sed,10)\n5> (nulla,10)\n6> (lectus,10)\n6> (sit,10)\n5> (quam,10)\n6> (amet,10)\n5> (nisl,10)\n6> (auctor,10)\n5> (luctus,10)\n6> (urna,10)\n5> (in,10)\n6> (lobortis,10)\n6> (laoreet,10)\n6> (proin,10)\n6> (feugiat,10)\n5> (lacinia,10)\n6> (sed,10)\n6> (sit,10)\n5> (eget,10)\n6> (amet,10)\n6> (odio,10)\n5> (sodales,10)\n6> (sed,10)\n5> (orci,10)\n6> (justo,10)\n5> (efficitur,10)\n6> (erat,10)\n5> (molestie,10)\n6> (integer,10)\n5> (id,10)\n6> (sed,10)\n6> (faucibus,10)\n5> (blandit,10)\n6> (curabitur,10)\n5> (pharetra,10)\n6> (tellus,10)\n5> (eget,10)\n5> (sollicitudin,10)\n5> (quam,10)\n6> (lectus,10)\n5> (sagittis,10)\n6> (sed,10)\n6> (sit,10)\n5> (velit,10)\n6> (amet,10)\n5> (nulla,10)\n6> (per,10)\n6> (justo,10)\n5> (etiam,10)\n6> (nam,10)\n5> (in,10)\n6> (sed,10)\n5> (tortor,10)\n6> (odio,10)\n5> (malesuada,10)\n6> (viverra,10)\n5> (orci,10)\n5> (habitant,5)\n5> (netus,5)\n6> (laoreet,10)\n5> (id,10)\n6> (erat,10)\n5> (luctus,10)\n6> (feugiat,10)\n5> (quam,10)\n6> (sit,10)\n5> (sodales,10)\n6> (amet,10)\n6> (consectetur,10)\n5> (eget,10)\n6> (sed,10)\n5> (in,10)\n6> (proin,10)\n5> (velit,10)\n5> (dapibus,10)\n5> (nisl,10)\n5> (molestie,10)\n5> (in,10)\n5> (pharetra,10)\n6> (faucibus,10)\n5> (nulla,10)\n6> (cubilia,5)\n6> (justo,10)\n5> (quam,10)\n6> (viverra,10)\n5> (id,10)\n6> (auctor,10)\n5> (in,10)\n6> (sed,10)\n5> (lacinia,10)\n6> (tellus,10)\n5> (eget,10)\n6> (odio,10)\n6> (sit,10)\n5> (tortor,10)\n6> (amet,10)\n6> (integer,10)\n5> (in,10)\n6> (lectus,10)\n5> (sollicitudin,10)\n5> (sagittis,10)\n5> (nisl,10)\n6> (sed,10)\n5> (id,10)\n6> (faucibus,10)\n5> (luctus,10)\n6> (consectetur,10)\n5> (orci,10)\n5> (nulla,10)\n6> (urna,10)\n5> (malesuada,10)\n6> (erat,10)\n6> (per,10)\n5> (velit,10)\n5> (eget,10)\n6> (curabitur,10)\n6> (sed,10)\n5> (in,10)\n6> (sit,10)\n6> (amet,10)\n5> (efficitur,10)\n5> (molestie,10)\n6> (feugiat,10)\n5> (etiam,10)\n6> (justo,10)\n5> (sagittis,10)\n6> (laoreet,10)\n6> (auctor,10)\n5> (eget,10)\n5> (in,10)\n6> (proin,10)\n5> (id,10)\n6> (odio,10)\n6> (sit,10)\n5> (sodales,10)\n6> (amet,10)\n5> (nulla,10)\n6> (lectus,10)\n5> (quam,10)\n6> (sed,10)\n5> (id,10)\n6> (lobortis,10)\n5> (blandit,10)\n5> (eget,10)\n5> (in,10)\n6> (sed,10)\n6> (tellus,10)\n5> (lacinia,10)\n6> (viverra,10)\n6> (faucibus,10)\n6> (odio,10)\n6> (feugiat,10)\n5> (pharetra,10)\n6> (erat,10)\n5> (malesuada,10)\n6> (justo,10)\n5> (id,10)\n5> (dapibus,10)\n6> (sit,10)\n5> (nulla,10)\n6> (amet,10)\n6> (sed,10)\n5> (eget,10)\n6> (sit,10)\n5> (nisl,10)\n6> (amet,10)\n5> (in,10)\n6> (auctor,10)\n6> (consectetur,10)\n5> (luctus,10)\n6> (sed,10)\n5> (velit,10)\n5> (orci,10)\n6> (odio,10)\n5> (tortor,10)\n6> (urna,10)\n5> (sollicitudin,10)\n6> (lobortis,10)\n5> (molestie,10)\n6> (tellus,10)\n6> (justo,10)\n5> (in,10)\n6> (sit,10)\n6> (amet,10)\n5> (dapibus,10)\n5> (nisl,10)\n6> (viverra,10)\n5> (id,10)\n5> (quam,10)\n5> (nulla,10)\n5> (class,10)\n6> (sed,10)\n5> (aptent,10)\n5> (taciti,10)\n5> (nostra,10)\n6> (proin,10)\n5> (eget,10)\n6> (sit,10)\n5> (efficitur,10)\n6> (amet,10)\n5> (etiam,10)\n6> (sed,10)\n6> (tellus,10)\n5> (lacinia,10)\n5> (orci,10)\n6> (lectus,10)\n5> (tortor,10)\n6> (erat,10)\n5> (in,10)\n6> (sed,10)\n5> (nulla,10)\n5> (id,10)\n6> (parturient,5)\n5> (in,10)\n6> (curabitur,10)\n5> (sollicitudin,10)\n6> (lobortis,10)\n5> (velit,10)\n6> (urna,10)\n5> (eget,10)\n6> (nam,10)\n6> (faucibus,10)\n5> (in,10)\n6> (sed,10)\n5> (id,10)\n6> (odio,10)\n5> (sagittis,10)\n6> (integer,10)\n5> (orci,10)\n5> (pharetra,10)\n6> (sit,10)\n5> (eget,10)\n6> (amet,10)\n6> (sed,10)\n5> (sodales,10)\n6> (lectus,10)\n5> (nisl,10)\n6> (sit,10)\n5> (luctus,10)\n6> (amet,10)\n5> (malesuada,10)\n6> (consectetur,10)\n5> (in,10)\n6> (justo,10)\n6> (auctor,10)\n5> (eget,10)\n6> (viverra,10)\n6> (sed,10)\n5> (efficitur,10)\n5> (tortor,10)\n6> (faucibus,10)\n5> (id,10)\n6> (proin,10)\n5> (nulla,10)\n6> (facilisi,10)\n5> (sollicitudin,10)\n6> (curabitur,10)\n5> (in,10)\n6> (tellus,10)\n5> (dapibus,10)\n6> (sit,10)\n5> (quam,10)\n6> (amet,10)\n5> (sagittis,10)\n6> (sed,10)\n5> (id,10)\n5> (in,10)\n6> (justo,10)\n6> (erat,10)\n5> (velit,10)\n6> (lobortis,10)\n5> (orci,10)\n6> (odio,10)\n5> (molestie,10)\n5> (eget,10)\n6> (sit,10)\n6> (amet,10)\n5> (sodales,10)\n6> (feugiat,10)\n5> (blandit,10)\n6> (lectus,10)\n6> (odio,10)\n6> (justo,10)\n6> (sed,10)\n5> (in,10)\n6> (laoreet,10)\n5> (malesuada,10)\n6> (sit,10)\n5> (eget,10)\n6> (amet,10)\n6> (integer,10)\n5> (quam,10)\n6> (urna,10)\n5> (in,10)\n5> (efficitur,10)\n6> (faucibus,10)\n6> (sed,10)\n5> (tortor,10)\n5> (nulla,10)\n5> (nisl,10)\n6> (sit,10)\n5> (luctus,10)\n6> (amet,10)\n5> (eget,10)\n6> (curabitur,10)\n5> (platea,10)\n5> (dapibus,10)\n5> (magnis,5)\n5> (sodales,10)\n5> (lacinia,10)\n5> (habitant,10)\n5> (netus,10)\n5> (eget,10)\n5> (sollicitudin,10)\n5> (id,10)\n5> (nulla,10)\n5> (sagittis,10)\n5> (id,10)\n5> (orci,10)\n5> (in,10)\n5> (malesuada,10)\n5> (pharetra,10)\n5> (velit,10)\n5> (nisl,10)\n5> (eget,10)\n5> (id,10)\n5> (luctus,10)\n5> (eget,10)\n5> (blandit,10)\n5> (orci,10)\n5> (nulla,10)\n5> (etiam,10)\n5> (molestie,10)\n5> (in,10)\n5> (sodales,10)\n5> (quam,10)\n5> (id,10)\n5> (efficitur,10)\n5> (velit,10)\n5> (eget,10)\n5> (tortor,10)\n5> (luctus,10)\n5> (malesuada,10)\n5> (in,10)\n5> (sollicitudin,10)\n5> (nulla,10)\n5> (in,10)\n5> (id,10)\n5> (orci,10)\n5> (dapibus,10)\n5> (eget,10)\n5> (luctus,10)\n5> (in,10)\n5> (nisl,10)\n5> (malesuada,10)\n5> (sodales,10)\n5> (id,10)\n5> (pharetra,10)\n5> (velit,10)\n5> (nulla,10)\n5> (molestie,10)\n5> (eget,10)\n5> (quam,10)\n5> (sollicitudin,10)\n5> (blandit,10)\n1> (ac,10)\n1> (ipsum,10)\n1> (nec,10)\n1> (suspendisse,10)\n1> (arcu,10)\n1> (massa,10)\n1> (sem,10)\n1> (enim,10)\n1> (fusce,10)\n1> (sapien,10)\n1> (ut,10)\n1> (turpis,10)\n1> (morbi,10)\n1> (nunc,10)\n1> (eleifend,10)\n1> (praesent,10)\n"}]},"apps":[],"progressUpdateIntervalMs":500,"jobName":"paragraph_1583778752200_-2092103347","id":"paragraph_1563965526288_2021710817","dateCreated":"2020-03-09T18:32:32+0000","dateStarted":"2020-03-13T13:20:59+0000","dateFinished":"2020-03-13T13:20:59+0000","status":"FINISHED","$$hashKey":"object:199"},{"text":"%md\n### Finally, our final java program will look like:","user":"anonymous","dateUpdated":"2020-03-09T18:32:32+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"runOnSelectionChange":true,"title":false,"checkEmpty":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h3>Finally, our final java program will look like:</h3>\n</div>"}]},"apps":[],"progressUpdateIntervalMs":500,"jobName":"paragraph_1583778752201_-324842336","id":"paragraph_1563965478245_233485786","dateCreated":"2020-03-09T18:32:32+0000","status":"READY","$$hashKey":"object:200"},{"text":"%java\n\nimport org.apache.flink.api.java.tuple.Tuple2;\nimport org.apache.flink.api.java.utils.ParameterTool;\nimport org.apache.flink.streaming.api.datastream.DataStream;\nimport org.apache.flink.streaming.api.environment.StreamExecutionEnvironment;\nimport org.apache.flink.api.common.functions.FlatMapFunction;\nimport org.apache.flink.util.Collector;\nimport java.util.Arrays;\n\npublic class WindowedStreamingWordCount {\n\n    public static void main(String[] args) throws Exception {\n    \n        // Set up the execution environment\n\t\tfinal StreamExecutionEnvironment env = StreamExecutionEnvironment.getExecutionEnvironment();\n        \n        // Read input text file\n        DataStream<String> text = env.readTextFile(\"./data/batch-exercise-1-loremipsup.txt\");\n        \n\t\t//1.a. Define the window size to 10\n\t\tint windowSize = 10;\n\t\t//1.b. Define the slidesize to 5\n\t\tint slideSize = 5;\n\n\t\t//2. Windowed Word Count \n\t\tDataStream<Tuple2<String, Integer>> counts = text\n\t\t    // split up the lines in pairs (2-tuples) containing: (word,1)\n\t\t    .flatMap(new Tokenizer())\n\t\t\t.keyBy(0)\n\t\t\t//2. create windows of windowSize records slided every slideSize records\n\t\t\t.countWindow(windowSize, slideSize)\n\t\t\t// group by the tuple field \"0\" and sum up tuple field \"1\"\n\t\t\t.sum(1);\n\t\t\t\t\n\t\t// Execute and print results            \n        counts.print();.print();\n        \n        // execute program\n\t\tenv.execute(\"Windowed Streaming WordCount\");\n    }\n    \n    // *************************************************************************\n\t// USER FUNCTIONS\n\t// *************************************************************************\n\n\t/**\n\t * Implements the string tokenizer that splits sentences into words as a\n\t * user-defined FlatMapFunction. The function takes a line (String) and\n\t * splits it into multiple pairs in the form of \"(word,1)\" ({@code Tuple2<String,\n\t * Integer>}).\n\t */\n\tpublic static final class Tokenizer implements FlatMapFunction<String, Tuple2<String, Integer>> {\n\n\t\t@Override\n\t\tpublic void flatMap(String value, Collector<Tuple2<String, Integer>> out) {\n\t\t\t// normalize and split the line\n\t\t\tString[] tokens = value.toLowerCase().split(\"\\\\W+\");\n\t\t\t\n\t\t\t/* Original code\n            // emit the pairs\n            for (String token : tokens) {\n                if (token.length() > 0) {\n                    out.collect(new Tuple2<>(token, 1));\n                }\n            }\n            */\n\n            //The functionnal way!\n            Arrays.stream(tokens)\n              .filter(token -> token.length() > 0)\n              .forEach(token -> out.collect(new Tuple2<>(token, 1)));\n\t\t}\n\t}\n}","user":"anonymous","dateUpdated":"2020-03-13T14:49:51+0000","config":{"editorSetting":{"language":"java","editOnDblClick":false,"completionSupport":false},"colWidth":12,"editorMode":"ace/mode/java","fontSize":9,"runOnSelectionChange":true,"title":false,"checkEmpty":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"1> (massa,5)\n1> (nec,5)\n1> (arcu,5)\n1> (turpis,5)\n1> (ipsum,5)\n1> (morbi,5)\n1> (ac,5)\n1> (magna,5)\n1> (posuere,5)\n1> (ac,10)\n1> (dignissim,5)\n1> (nec,10)\n1> (interdum,5)\n1> (suscipit,5)\n1> (massa,10)\n1> (morbi,10)\n1> (quisque,5)\n1> (turpis,10)\n1> (mollis,5)\n1> (maecenas,5)\n1> (nec,10)\n1> (finibus,5)\n1> (enim,5)\n1> (sapien,5)\n1> (ipsum,10)\n1> (ac,10)\n1> (massa,10)\n1> (neque,5)\n1> (nec,10)\n1> (libero,5)\n1> (arcu,10)\n1> (ac,10)\n1> (magna,10)\n1> (sapien,10)\n1> (venenatis,5)\n1> (massa,10)\n1> (ac,10)\n1> (nec,10)\n1> (interdum,10)\n1> (enim,10)\n1> (ac,10)\n1> (turpis,10)\n1> (mollis,10)\n1> (ipsum,10)\n1> (arcu,10)\n1> (neque,10)\n1> (posuere,10)\n1> (ac,10)\n1> (venenatis,10)\n1> (nec,10)\n1> (magna,10)\n1> (suscipit,10)\n1> (libero,10)\n1> (morbi,10)\n1> (nec,10)\n1> (finibus,10)\n1> (massa,10)\n1> (enim,10)\n1> (maecenas,10)\n1> (neque,10)\n1> (turpis,10)\n1> (nec,10)\n1> (sapien,10)\n1> (arcu,10)\n1> (interdum,10)\n1> (nec,10)\n1> (ac,10)\n1> (massa,10)\n1> (ipsum,10)\n1> (mollis,10)\n1> (neque,10)\n1> (libero,10)\n1> (quisque,10)\n1> (posuere,10)\n1> (morbi,10)\n1> (finibus,10)\n1> (ipsum,10)\n1> (ac,10)\n1> (nec,10)\n1> (dignissim,10)\n1> (suscipit,10)\n1> (arcu,10)\n1> (neque,10)\n1> (enim,10)\n1> (ac,10)\n1> (sapien,10)\n1> (nec,10)\n1> (ipsum,10)\n1> (interdum,10)\n1> (mollis,10)\n1> (posuere,10)\n3> (quis,5)\n4> (nisi,5)\n2> (ut,5)\n1> (turpis,10)\n2> (et,5)\n1> (massa,10)\n3> (quis,10)\n4> (metus,5)\n1> (morbi,10)\n3> (non,5)\n4> (pellentesque,5)\n2> (sem,5)\n4> (iaculis,5)\n3> (tempus,5)\n1> (dignissim,10)\n2> (vestibulum,5)\n4> (vitae,5)\n1> (finibus,10)\n3> (cursus,5)\n2> (tempor,5)\n3> (ultricies,5)\n4> (pellentesque,10)\n2> (ut,10)\n3> (vehicula,5)\n1> (venenatis,10)\n4> (purus,5)\n3> (nibh,5)\n2> (et,10)\n3> (pulvinar,5)\n4> (dolor,5)\n1> (ac,10)\n2> (nunc,5)\n1> (ipsum,10)\n2> (egestas,5)\n3> (cras,5)\n1> (nec,10)\n4> (pellentesque,10)\n3> (quis,10)\n3> (maximus,5)\n4> (vitae,10)\n3> (non,10)\n4> (lorem,5)\n1> (libero,10)\n2> (elit,5)\n4> (facilisis,5)\n2> (et,10)\n1> (ipsum,10)\n2> (aliquam,5)\n4> (metus,10)\n1> (maecenas,10)\n2> (augue,5)\n3> (consequat,5)\n4> (ornare,5)\n2> (leo,5)\n3> (bibendum,5)\n1> (posuere,10)\n3> (non,10)\n4> (tristique,5)\n1> (turpis,10)\n3> (vivamus,5)\n4> (ligula,5)\n1> (venenatis,10)\n3> (condimentum,5)\n1> (enim,10)\n3> (placerat,5)\n4> (vitae,10)\n4> (nullam,5)\n1> (sapien,10)\n3> (vehicula,10)\n1> (nec,10)\n4> (volutpat,5)\n3> (fringilla,5)\n1> (arcu,10)\n4> (pellentesque,10)\n1> (magna,10)\n3> (quis,10)\n4> (imperdiet,5)\n1> (ipsum,10)\n3> (tempus,10)\n4> (ornare,10)\n1> (libero,10)\n4> (tristique,10)\n3> (non,10)\n1> (fames,5)\n3> (bibendum,10)\n4> (porta,5)\n3> (maximus,10)\n1> (neque,10)\n4> (vitae,10)\n4> (nisi,10)\n3> (dictum,5)\n1> (ac,10)\n4> (iaculis,10)\n3> (fermentum,5)\n4> (purus,10)\n3> (consequat,10)\n1> (massa,10)\n4> (dolor,10)\n1> (dignissim,10)\n4> (lorem,10)\n3> (vehicula,10)\n4> (metus,10)\n3> (placerat,10)\n1> (nec,10)\n3> (pulvinar,10)\n4> (ligula,10)\n1> (interdum,10)\n1> (suscipit,10)\n3> (ultricies,10)\n4> (volutpat,10)\n1> (ipsum,10)\n3> (quis,10)\n1> (morbi,10)\n3> (cursus,10)\n1> (sapien,10)\n4> (phasellus,5)\n3> (vivamus,10)\n4> (pellentesque,10)\n4> (nullam,10)\n1> (senectus,5)\n3> (non,10)\n4> (iaculis,10)\n1> (primis,5)\n4> (vitae,10)\n1> (posuere,10)\n4> (metus,10)\n3> (quis,10)\n3> (euismod,5)\n3> (consequat,10)\n1> (ac,10)\n4> (facilisis,10)\n1> (turpis,10)\n4> (vitae,10)\n3> (nibh,10)\n4> (nisi,10)\n3> (non,10)\n4> (lorem,10)\n1> (neque,10)\n3> (bibendum,10)\n3> (vivamus,10)\n4> (purus,10)\n1> (quisque,10)\n3> (tempus,10)\n1> (finibus,10)\n4> (dolor,10)\n3> (cras,10)\n4> (imperdiet,10)\n1> (ipsum,10)\n3> (ultricies,10)\n1> (magna,10)\n4> (tristique,10)\n3> (condimentum,10)\n1> (dignissim,10)\n4> (pellentesque,10)\n1> (venenatis,10)\n3> (vehicula,10)\n3> (quis,10)\n1> (massa,10)\n4> (lorem,10)\n3> (fringilla,10)\n1> (libero,10)\n3> (fermentum,10)\n1> (enim,10)\n3> (non,10)\n1> (nec,10)\n3> (euismod,10)\n1> (arcu,10)\n1> (mollis,10)\n3> (quis,10)\n2> (at,5)\n4> (phasellus,10)\n2> (varius,5)\n1> (ac,10)\n4> (dolor,10)\n3> (non,10)\n2> (lacus,5)\n1> (sapien,10)\n4> (facilisis,10)\n2> (suspendisse,5)\n3> (consequat,10)\n1> (morbi,10)\n4> (imperdiet,10)\n2> (ut,10)\n4> (ornare,10)\n1> (turpis,10)\n4> (metus,10)\n3> (euismod,10)\n1> (interdum,10)\n4> (porta,10)\n3> (bibendum,10)\n2> (at,10)\n2> (vestibulum,10)\n3> (pulvinar,10)\n4> (purus,10)\n3> (quis,10)\n2> (commodo,5)\n1> (maecenas,10)\n3> (nibh,10)\n4> (nisi,10)\n2> (ultrices,5)\n1> (finibus,10)\n4> (pellentesque,10)\n2> (sem,10)\n3> (placerat,10)\n1> (interdum,10)\n4> (vitae,10)\n2> (lacus,10)\n3> (vehicula,10)\n4> (tristique,10)\n2> (duis,5)\n1> (ac,10)\n3> (cras,10)\n2> (mattis,5)\n3> (dictum,10)\n2> (augue,10)\n4> (lorem,10)\n1> (ipsum,10)\n3> (tempus,10)\n1> (neque,10)\n2> (et,10)\n3> (maximus,10)\n4> (pellentesque,10)\n3> (non,10)\n4> (iaculis,10)\n1> (massa,10)\n3> (vivamus,10)\n4> (imperdiet,10)\n1> (magna,10)\n3> (quis,10)\n2> (elit,10)\n3> (condimentum,10)\n1> (nec,10)\n2> (et,10)\n4> (pellentesque,10)\n1> (ac,10)\n4> (facilisis,10)\n4> (vitae,10)\n2> (at,10)\n1> (suscipit,10)\n3> (nibh,10)\n4> (ligula,10)\n1> (quisque,10)\n2> (ut,10)\n4> (ornare,10)\n3> (non,10)\n1> (nec,10)\n2> (aliquam,10)\n3> (dictum,10)\n2> (scelerisque,5)\n1> (libero,10)\n4> (metus,10)\n2> (nunc,10)\n3> (consequat,10)\n4> (phasellus,10)\n1> (enim,10)\n3> (bibendum,10)\n2> (vestibulum,10)\n4> (dolor,10)\n4> (volutpat,10)\n2> (egestas,10)\n3> (tempus,10)\n3> (pulvinar,10)\n4> (purus,10)\n2> (commodo,10)\n1> (venenatis,10)\n1> (ac,10)\n3> (non,10)\n4> (tristique,10)\n4> (nisi,10)\n2> (lacus,10)\n3> (condimentum,10)\n1> (nec,10)\n4> (pellentesque,10)\n3> (cursus,10)\n1> (mollis,10)\n4> (vitae,10)\n3> (vivamus,10)\n2> (fusce,5)\n1> (arcu,10)\n3> (nibh,10)\n2> (ut,10)\n3> (fringilla,10)\n4> (nullam,10)\n1> (turpis,10)\n4> (metus,10)\n3> (ultricies,10)\n2> (rutrum,5)\n4> (ornare,10)\n3> (vehicula,10)\n2> (leo,10)\n1> (dignissim,10)\n3> (dictum,10)\n2> (et,10)\n3> (quis,10)\n1> (enim,10)\n4> (pellentesque,10)\n2> (sem,10)\n3> (fermentum,10)\n1> (sapien,10)\n4> (lorem,10)\n1> (neque,10)\n4> (ligula,10)\n2> (suspendisse,10)\n3> (bibendum,10)\n1> (ipsum,10)\n2> (nunc,10)\n3> (quis,10)\n1> (nec,10)\n2> (tempor,10)\n4> (purus,10)\n3> (maximus,10)\n1> (libero,10)\n2> (praesent,5)\n4> (dolor,10)\n3> (non,10)\n1> (finibus,10)\n6> (a,5)\n4> (metus,10)\n3> (quis,10)\n1> (morbi,10)\n6> (molestie,5)\n4> (phasellus,10)\n4> (iaculis,10)\n3> (euismod,10)\n3> (nibh,10)\n6> (quam,5)\n4> (ligula,10)\n1> (venenatis,10)\n6> (etiam,5)\n1> (posuere,10)\n1> (turpis,10)\n6> (velit,5)\n4> (facilisis,10)\n6> (a,10)\n1> (magna,10)\n4> (tristique,10)\n3> (non,10)\n1> (ac,10)\n6> (accumsan,5)\n4> (volutpat,10)\n1> (quisque,10)\n3> (vehicula,10)\n6> (diam,5)\n3> (quis,10)\n6> (sagittis,5)\n1> (nec,10)\n4> (lorem,10)\n6> (a,10)\n3> (maximus,10)\n1> (libero,10)\n4> (imperdiet,10)\n6> (orci,5)\n3> (ultricies,10)\n4> (pellentesque,10)\n3> (euismod,10)\n1> (arcu,10)\n3> (tempus,10)\n4> (dolor,10)\n6> (nisl,5)\n3> (bibendum,10)\n4> (vitae,10)\n6> (a,10)\n4> (pellentesque,10)\n6> (diam,10)\n3> (fermentum,10)\n4> (purus,10)\n6> (quam,10)\n1> (enim,10)\n3> (non,10)\n4> (nisi,10)\n1> (ac,10)\n3> (placerat,10)\n6> (orci,10)\n4> (metus,10)\n6> (aliquet,5)\n4> (tristique,10)\n3> (dictum,10)\n1> (massa,10)\n6> (molestie,10)\n4> (porta,10)\n3> (condimentum,10)\n1> (sapien,10)\n6> (hendrerit,5)\n3> (cursus,10)\n1> (morbi,10)\n3> (consequat,10)\n6> (sollicitudin,5)\n4> (iaculis,10)\n1> (libero,10)\n6> (velit,10)\n3> (nibh,10)\n1> (ac,10)\n6> (tortor,5)\n4> (phasellus,10)\n6> (a,10)\n4> (vitae,10)\n1> (nec,10)\n3> (vehicula,10)\n1> (arcu,10)\n3> (bibendum,10)\n1> (finibus,10)\n4> (dolor,10)\n3> (pulvinar,10)\n3> (quis,10)\n4> (tristique,10)\n6> (nisl,10)\n4> (metus,10)\n3> (non,10)\n1> (turpis,10)\n4> (pellentesque,10)\n1> (interdum,10)\n4> (ligula,10)\n3> (euismod,10)\n1> (maecenas,10)\n6> (orci,10)\n3> (vivamus,10)\n4> (vitae,10)\n4> (pellentesque,10)\n6> (aliquet,10)\n1> (quisque,10)\n3> (quis,10)\n4> (imperdiet,10)\n6> (diam,10)\n1> (suscipit,10)\n4> (porta,10)\n3> (fringilla,10)\n6> (sollicitudin,10)\n4> (lorem,10)\n1> (neque,10)\n3> (non,10)\n6> (a,10)\n4> (facilisis,10)\n1> (massa,10)\n3> (tempus,10)\n6> (tortor,10)\n4> (nisi,10)\n1> (ac,10)\n6> (semper,5)\n4> (purus,10)\n3> (cras,10)\n1> (ipsum,10)\n6> (quam,10)\n4> (nullam,10)\n3> (placerat,10)\n1> (venenatis,10)\n6> (a,10)\n3> (nibh,10)\n4> (tristique,10)\n1> (enim,10)\n6> (velit,10)\n3> (maximus,10)\n4> (pellentesque,10)\n1> (turpis,10)\n6> (accumsan,10)\n3> (dictum,10)\n3> (quis,10)\n6> (aliquet,10)\n1> (mollis,10)\n6> (sagittis,10)\n1> (nec,10)\n3> (bibendum,10)\n6> (nisl,10)\n4> (ornare,10)\n1> (magna,10)\n3> (vehicula,10)\n4> (ligula,10)\n6> (orci,10)\n3> (nibh,10)\n1> (maecenas,10)\n4> (nisi,10)\n6> (blandit,5)\n3> (non,10)\n1> (posuere,10)\n4> (phasellus,10)\n6> (a,10)\n4> (vitae,10)\n3> (ultricies,10)\n1> (finibus,10)\n6> (hendrerit,10)\n4> (dolor,10)\n1> (neque,10)\n6> (etiam,10)\n3> (condimentum,10)\n4> (volutpat,10)\n1> (morbi,10)\n3> (quis,10)\n4> (lorem,10)\n3> (fermentum,10)\n1> (suscipit,10)\n3> (tempus,10)\n4> (ligula,10)\n2> (mattis,10)\n1> (nec,10)\n4> (vitae,10)\n3> (euismod,10)\n4> (pellentesque,10)\n2> (at,10)\n3> (non,10)\n4> (tristique,10)\n1> (dignissim,10)\n2> (augue,10)\n3> (maximus,10)\n4> (hac,5)\n1> (arcu,10)\n4> (dictumst,5)\n2> (ut,10)\n3> (cursus,10)\n1> (sapien,10)\n4> (purus,10)\n1> (ac,10)\n2> (vestibulum,10)\n3> (vehicula,10)\n4> (vitae,10)\n4> (metus,10)\n1> (libero,10)\n3> (pulvinar,10)\n4> (iaculis,10)\n2> (varius,10)\n1> (fames,10)\n3> (nibh,10)\n2> (aliquam,10)\n4> (nisi,10)\n3> (euismod,10)\n2> (commodo,10)\n4> (dolor,10)\n1> (nec,10)\n3> (non,10)\n2> (elit,10)\n4> (nullam,10)\n1> (quisque,10)\n3> (quis,10)\n4> (facilisis,10)\n3> (consequat,10)\n4> (ligula,10)\n1> (interdum,10)\n2> (sem,10)\n1> (ipsum,10)\n4> (tristique,10)\n3> (bibendum,10)\n2> (et,10)\n4> (vitae,10)\n3> (maximus,10)\n1> (neque,10)\n2> (ut,10)\n3> (tempus,10)\n4> (ornare,10)\n1> (magna,10)\n2> (at,10)\n4> (imperdiet,10)\n1> (maecenas,10)\n3> (non,10)\n4> (lorem,10)\n2> (augue,10)\n1> (morbi,10)\n3> (ultricies,10)\n2> (duis,10)\n1> (arcu,10)\n3> (quis,10)\n4> (pellentesque,10)\n2> (ultrices,10)\n3> (placerat,10)\n1> (finibus,10)\n4> (nullam,10)\n3> (fermentum,10)\n1> (sapien,10)\n4> (purus,10)\n2> (suspendisse,10)\n3> (condimentum,10)\n1> (posuere,10)\n4> (nisi,10)\n2> (ut,10)\n3> (habitasse,5)\n4> (vitae,10)\n3> (non,10)\n2> (nunc,10)\n4> (pellentesque,10)\n3> (vivamus,10)\n2> (at,10)\n1> (mollis,10)\n3> (cursus,10)\n4> (tristique,10)\n2> (leo,10)\n1> (ac,10)\n3> (non,10)\n2> (sem,10)\n1> (nec,10)\n3> (vehicula,10)\n2> (fusce,10)\n1> (libero,10)\n4> (vitae,10)\n2> (eleifend,5)\n4> (porta,10)\n1> (massa,10)\n3> (bibendum,10)\n2> (vestibulum,10)\n4> (pellentesque,10)\n1> (enim,10)\n3> (fringilla,10)\n2> (et,10)\n4> (phasellus,10)\n3> (quis,10)\n2> (rutrum,10)\n4> (lorem,10)\n1> (interdum,10)\n2> (egestas,10)\n4> (nisi,10)\n1> (suscipit,10)\n3> (non,10)\n3> (condimentum,10)\n1> (nec,10)\n4> (vitae,10)\n2> (ut,10)\n3> (nibh,10)\n4> (ornare,10)\n1> (neque,10)\n3> (dictum,10)\n4> (ligula,10)\n2> (nunc,10)\n1> (dignissim,10)\n2> (at,10)\n1> (mollis,10)\n4> (volutpat,10)\n3> (tempus,10)\n1> (venenatis,10)\n3> (quis,10)\n2> (et,10)\n4> (purus,10)\n1> (maecenas,10)\n2> (tempor,10)\n3> (nibh,10)\n1> (magna,10)\n4> (pellentesque,10)\n3> (fermentum,10)\n2> (lacus,10)\n1> (turpis,10)\n4> (ligula,10)\n3> (pulvinar,10)\n2> (varius,10)\n4> (lorem,10)\n3> (cursus,10)\n1> (ipsum,10)\n4> (iaculis,10)\n2> (suspendisse,10)\n3> (maximus,10)\n1> (ac,10)\n4> (metus,10)\n2> (praesent,10)\n3> (placerat,10)\n1> (quisque,10)\n4> (tristique,10)\n3> (fringilla,10)\n2> (sem,10)\n1> (morbi,10)\n3> (vivamus,10)\n4> (pellentesque,10)\n1> (sapien,10)\n2> (et,10)\n4> (imperdiet,10)\n3> (euismod,10)\n2> (egestas,10)\n4> (porta,10)\n1> (nec,10)\n3> (ultricies,10)\n2> (elit,10)\n4> (facilisis,10)\n3> (non,10)\n1> (enim,10)\n4> (dolor,10)\n3> (consequat,10)\n2> (at,10)\n4> (nisi,10)\n3> (quis,10)\n2> (ut,10)\n1> (posuere,10)\n3> (dictum,10)\n4> (pellentesque,10)\n1> (arcu,10)\n2> (eleifend,10)\n4> (vitae,10)\n3> (fermentum,10)\n4> (purus,10)\n2> (augue,10)\n1> (finibus,10)\n3> (maximus,10)\n4> (nisi,10)\n1> (magna,10)\n2> (ut,10)\n3> (quis,10)\n4> (vitae,10)\n1> (suscipit,10)\n2> (rutrum,10)\n4> (nullam,10)\n1> (sociosqu,5)\n3> (vehicula,10)\n1> (inceptos,5)\n3> (bibendum,10)\n4> (phasellus,10)\n1> (himenaeos,5)\n3> (non,10)\n2> (lacus,10)\n4> (pellentesque,10)\n1> (ac,10)\n3> (condimentum,10)\n2> (vestibulum,10)\n4> (dolor,10)\n4> (imperdiet,10)\n2> (ultrices,10)\n1> (turpis,10)\n3> (nibh,10)\n4> (vitae,10)\n1> (enim,10)\n3> (quis,10)\n2> (praesent,10)\n4> (ornare,10)\n1> (sapien,10)\n3> (vivamus,10)\n4> (lorem,10)\n2> (et,10)\n3> (placerat,10)\n3> (fringilla,10)\n4> (tristique,10)\n1> (massa,10)\n4> (purus,10)\n3> (cras,10)\n2> (suspendisse,10)\n3> (non,10)\n2> (scelerisque,10)\n4> (metus,10)\n3> (tempus,10)\n2> (leo,10)\n4> (porta,10)\n3> (consequat,10)\n4> (volutpat,10)\n2> (ut,10)\n3> (cursus,10)\n2> (mattis,10)\n4> (vitae,10)\n4> (metus,10)\n2> (at,10)\n3> (non,10)\n4> (iaculis,10)\n2> (egestas,10)\n3> (quis,10)\n4> (lorem,10)\n2> (nunc,10)\n4> (phasellus,10)\n4> (imperdiet,10)\n3> (quis,10)\n4> (ornare,10)\n3> (pulvinar,10)\n4> (nisi,10)\n3> (ultricies,10)\n4> (facilisis,10)\n3> (euismod,10)\n4> (vitae,10)\n3> (non,10)\n4> (porta,10)\n6> (sagittis,10)\n3> (fringilla,10)\n4> (ligula,10)\n3> (condimentum,10)\n6> (molestie,10)\n3> (quis,10)\n4> (dolor,10)\n6> (tortor,10)\n3> (fermentum,10)\n4> (phasellus,10)\n6> (sollicitudin,10)\n1> (interdum,10)\n3> (vehicula,10)\n4> (nisi,10)\n1> (nec,10)\n4> (purus,10)\n4> (lorem,10)\n4> (volutpat,10)\n4> (porta,10)\n4> (vitae,10)\n4> (dolor,10)\n4> (pellentesque,10)\n4> (porta,10)\n4> (iaculis,10)\n4> (lorem,10)\n6> (a,10)\n3> (non,10)\n3> (nibh,10)\n4> (vitae,10)\n6> (diam,10)\n4> (tristique,10)\n3> (dictum,10)\n6> (orci,10)\n3> (placerat,10)\n6> (nisl,10)\n6> (velit,10)\n3> (bibendum,10)\n6> (a,10)\n4> (hac,10)\n3> (euismod,10)\n4> (dictumst,10)\n6> (semper,10)\n3> (maximus,10)\n4> (metus,10)\n3> (cursus,10)\n6> (a,10)\n4> (nullam,10)\n3> (non,10)\n4> (pellentesque,10)\n4> (porta,10)\n3> (consequat,10)\n4> (purus,10)\n6> (quam,10)\n3> (quis,10)\n6> (aliquet,10)\n4> (volutpat,10)\n3> (cras,10)\n4> (ornare,10)\n6> (diam,10)\n4> (nisi,10)\n3> (euismod,10)\n4> (lorem,10)\n6> (a,10)\n3> (condimentum,10)\n3> (pulvinar,10)\n6> (tortor,10)\n4> (vitae,10)\n3> (vivamus,10)\n6> (orci,10)\n3> (dictum,10)\n4> (ligula,10)\n3> (non,10)\n4> (nascetur,5)\n6> (a,10)\n6> (nisl,10)\n4> (dolor,10)\n3> (quis,10)\n6> (accumsan,10)\n3> (vehicula,10)\n6> (molestie,10)\n4> (pellentesque,10)\n3> (habitasse,10)\n4> (imperdiet,10)\n6> (quam,10)\n3> (nibh,10)\n4> (facilisis,10)\n6> (sagittis,10)\n3> (fringilla,10)\n4> (vitae,10)\n4> (metus,10)\n6> (velit,10)\n4> (facilisis,10)\n3> (cursus,10)\n6> (accumsan,10)\n4> (phasellus,10)\n3> (placerat,10)\n4> (volutpat,10)\n6> (diam,10)\n4> (lorem,10)\n3> (tempus,10)\n6> (aliquet,10)\n4> (vitae,10)\n3> (nibh,10)\n6> (etiam,10)\n4> (tristique,10)\n3> (bibendum,10)\n6> (tortor,10)\n3> (maximus,10)\n6> (sollicitudin,10)\n3> (fermentum,10)\n6> (velit,10)\n2> (rutrum,10)\n3> (vivamus,10)\n2> (et,10)\n6> (orci,10)\n3> (non,10)\n2> (ut,10)\n6> (hendrerit,10)\n3> (ultricies,10)\n2> (aliquam,10)\n6> (molestie,10)\n3> (cras,10)\n6> (a,10)\n2> (nunc,10)\n6> (tortor,10)\n3> (vehicula,10)\n2> (vestibulum,10)\n3> (quis,10)\n6> (blandit,10)\n2> (leo,10)\n2> (sem,10)\n6> (nisl,10)\n3> (consequat,10)\n2> (lacus,10)\n3> (fringilla,10)\n2> (augue,10)\n6> (hendrerit,10)\n4> (ligula,10)\n6> (diam,10)\n4> (iaculis,10)\n4> (ornare,10)\n6> (sagittis,10)\n6> (semper,10)\n2> (duis,10)\n6> (aliquet,10)\n2> (tempor,10)\n6> (tortor,10)\n2> (elit,10)\n6> (nisl,10)\n6> (a,10)\n2> (ut,10)\n6> (accumsan,10)\n2> (et,10)\n6> (velit,10)\n6> (orci,10)\n2> (scelerisque,10)\n6> (quam,10)\n6> (blandit,10)\n2> (eleifend,10)\n6> (etiam,10)\n6> (habitant,5)\n6> (molestie,10)\n6> (a,10)\n2> (at,10)\n6> (sollicitudin,10)\n6> (nisl,10)\n2> (ultrices,10)\n2> (aliquam,10)\n6> (semper,10)\n2> (suspendisse,10)\n2> (et,10)\n2> (elit,10)\n2> (egestas,10)\n2> (rutrum,10)\n1> (neque,10)\n2> (augue,10)\n1> (ipsum,10)\n2> (at,10)\n1> (nec,10)\n2> (varius,10)\n1> (sapien,10)\n1> (ac,10)\n2> (et,10)\n1> (turpis,10)\n2> (nunc,10)\n1> (libero,10)\n2> (ut,10)\n1> (dignissim,10)\n2> (sem,10)\n2> (lacus,10)\n1> (arcu,10)\n2> (tempor,10)\n2> (leo,10)\n2> (commodo,10)\n2> (mattis,10)\n2> (aliquam,10)\n2> (elit,10)\n1> (mollis,10)\n1> (magna,10)\n2> (at,10)\n2> (duis,10)\n1> (nec,10)\n2> (nunc,10)\n8> (sit,5)\n2> (vestibulum,10)\n1> (massa,10)\n8> (amet,5)\n2> (commodo,10)\n1> (morbi,10)\n1> (posuere,10)\n1> (ipsum,10)\n2> (ut,10)\n8> (consectetur,5)\n8> (sed,5)\n1> (nec,10)\n8> (faucibus,5)\n8> (erat,5)\n2> (augue,10)\n1> (maecenas,10)\n1> (turpis,10)\n8> (justo,5)\n2> (ultrices,10)\n1> (sapien,10)\n8> (feugiat,5)\n8> (sed,10)\n2> (et,10)\n8> (sit,10)\n2> (sem,10)\n1> (ac,10)\n8> (amet,10)\n2> (fusce,10)\n1> (massa,10)\n2> (at,10)\n8> (urna,5)\n1> (arcu,10)\n2> (nunc,10)\n1> (finibus,10)\n8> (viverra,5)\n1> (senectus,10)\n8> (sed,10)\n8> (odio,5)\n2> (suspendisse,10)\n1> (libero,10)\n8> (sit,10)\n2> (et,10)\n1> (enim,10)\n8> (amet,10)\n2> (duis,10)\n8> (erat,10)\n8> (curabitur,5)\n8> (sed,10)\n8> (tellus,5)\n8> (laoreet,5)\n8> (justo,10)\n8> (sed,10)\n8> (faucibus,10)\n8> (viverra,10)\n8> (sit,10)\n8> (amet,10)\n8> (odio,10)\n8> (feugiat,10)\n6> (hendrerit,10)\n8> (sed,10)\n6> (a,10)\n6> (orci,10)\n6> (velit,10)\n8> (urna,10)\n8> (sit,10)\n8> (amet,10)\n6> (sagittis,10)\n8> (faucibus,10)\n8> (justo,10)\n6> (sollicitudin,10)\n8> (consectetur,10)\n6> (quam,10)\n8> (tellus,10)\n6> (nisl,10)\n6> (diam,10)\n8> (erat,10)\n6> (tortor,10)\n8> (sed,10)\n6> (blandit,10)\n8> (sit,10)\n8> (amet,10)\n8> (sed,10)\n6> (a,10)\n8> (laoreet,10)\n6> (aliquet,10)\n8> (odio,10)\n6> (hendrerit,10)\n6> (orci,10)\n8> (justo,10)\n6> (velit,10)\n6> (accumsan,10)\n8> (sed,10)\n8> (curabitur,10)\n6> (quam,10)\n8> (sit,10)\n6> (class,5)\n6> (aptent,5)\n8> (amet,10)\n6> (conubia,5)\n6> (nostra,5)\n6> (semper,10)\n8> (feugiat,10)\n8> (viverra,10)\n6> (sollicitudin,10)\n8> (faucibus,10)\n6> (molestie,10)\n8> (odio,10)\n8> (sed,10)\n8> (erat,10)\n6> (hendrerit,10)\n6> (platea,5)\n8> (per,5)\n6> (sagittis,10)\n6> (diam,10)\n6> (nisl,10)\n8> (sit,10)\n8> (amet,10)\n6> (a,10)\n8> (urna,10)\n6> (tortor,10)\n8> (sed,10)\n8> (tellus,10)\n6> (diam,10)\n8> (consectetur,10)\n6> (a,10)\n8> (justo,10)\n8> (sit,10)\n6> (hendrerit,10)\n8> (amet,10)\n6> (semper,10)\n8> (odio,10)\n6> (velit,10)\n6> (etiam,10)\n8> (viverra,10)\n6> (accumsan,10)\n8> (sed,10)\n6> (quam,10)\n6> (molestie,10)\n6> (a,10)\n6> (sagittis,10)\n8> (sit,10)\n6> (quam,10)\n8> (amet,10)\n6> (blandit,10)\n8> (justo,10)\n6> (tortor,10)\n6> (orci,10)\n8> (sed,10)\n8> (odio,10)\n6> (habitant,10)\n8> (tellus,10)\n8> (urna,10)\n8> (feugiat,10)\n6> (a,10)\n8> (curabitur,10)\n8> (erat,10)\n8> (viverra,10)\n6> (sollicitudin,10)\n8> (laoreet,10)\n6> (velit,10)\n6> (aliquet,10)\n8> (sed,10)\n6> (diam,10)\n8> (odio,10)\n8> (sit,10)\n6> (a,10)\n8> (amet,10)\n6> (nisl,10)\n6> (orci,10)\n8> (sed,10)\n6> (molestie,10)\n6> (accumsan,10)\n8> (sit,10)\n8> (amet,10)\n6> (sollicitudin,10)\n8> (faucibus,10)\n6> (etiam,10)\n8> (sed,10)\n6> (tortor,10)\n8> (erat,10)\n8> (sed,10)\n6> (velit,10)\n8> (sit,10)\n6> (quam,10)\n8> (amet,10)\n8> (feugiat,10)\n6> (class,10)\n8> (viverra,10)\n6> (aptent,10)\n6> (conubia,10)\n8> (urna,10)\n6> (nostra,10)\n8> (consectetur,10)\n6> (a,10)\n8> (odio,10)\n8> (curabitur,10)\n6> (blandit,10)\n6> (diam,10)\n8> (sed,10)\n6> (orci,10)\n8> (tellus,10)\n6> (molestie,10)\n6> (semper,10)\n8> (sit,10)\n6> (sagittis,10)\n6> (etiam,10)\n8> (amet,10)\n6> (accumsan,10)\n8> (sed,10)\n6> (aliquet,10)\n6> (nisl,10)\n6> (hendrerit,10)\n8> (facilisi,5)\n6> (tortor,10)\n8> (justo,10)\n8> (odio,10)\n6> (orci,10)\n8> (sed,10)\n8> (sit,10)\n6> (a,10)\n8> (amet,10)\n8> (sed,10)\n6> (aliquet,10)\n8> (viverra,10)\n8> (curabitur,10)\n6> (velit,10)\n6> (tortor,10)\n6> (quam,10)\n8> (faucibus,10)\n8> (sed,10)\n6> (a,10)\n6> (molestie,10)\n8> (laoreet,10)\n8> (sit,10)\n8> (amet,10)\n6> (potenti,5)\n6> (etiam,10)\n8> (tellus,10)\n6> (nisl,10)\n8> (justo,10)\n6> (orci,10)\n8> (erat,10)\n6> (sollicitudin,10)\n8> (odio,10)\n6> (a,10)\n8> (sed,10)\n8> (sit,10)\n6> (accumsan,10)\n8> (amet,10)\n6> (a,10)\n6> (quam,10)\n8> (urna,10)\n6> (molestie,10)\n8> (justo,10)\n6> (blandit,10)\n8> (odio,10)\n6> (diam,10)\n8> (faucibus,10)\n8> (cubilia,5)\n6> (orci,10)\n8> (sit,10)\n8> (amet,10)\n6> (aliquet,10)\n6> (sagittis,10)\n6> (quam,10)\n8> (sed,10)\n6> (a,10)\n6> (velit,10)\n8> (curabitur,10)\n6> (hendrerit,10)\n8> (sit,10)\n6> (nisl,10)\n8> (amet,10)\n8> (urna,10)\n6> (orci,10)\n8> (sed,10)\n6> (a,10)\n6> (sollicitudin,10)\n6> (a,10)\n6> (tortor,10)\n8> (feugiat,10)\n6> (accumsan,10)\n8> (faucibus,10)\n6> (aliquet,10)\n6> (velit,10)\n8> (viverra,10)\n8> (laoreet,10)\n8> (sit,10)\n8> (amet,10)\n8> (sed,10)\n6> (diam,10)\n8> (sed,10)\n6> (platea,10)\n8> (erat,10)\n6> (accumsan,10)\n8> (justo,10)\n6> (sagittis,10)\n8> (per,10)\n6> (a,10)\n8> (odio,10)\n6> (aliquet,10)\n8> (sed,10)\n6> (nisl,10)\n6> (semper,10)\n6> (etiam,10)\n8> (consectetur,10)\n8> (faucibus,10)\n6> (natoque,5)\n8> (tellus,10)\n6> (dis,5)\n8> (sit,10)\n8> (amet,10)\n6> (diam,10)\n8> (sed,10)\n6> (a,10)\n8> (justo,10)\n6> (blandit,10)\n8> (erat,10)\n6> (sollicitudin,10)\n6> (a,10)\n8> (feugiat,10)\n8> (sed,10)\n6> (orci,10)\n6> (quam,10)\n8> (curabitur,10)\n6> (aliquet,10)\n8> (odio,10)\n6> (molestie,10)\n8> (sit,10)\n8> (amet,10)\n8> (sed,10)\n6> (tortor,10)\n6> (diam,10)\n6> (quam,10)\n8> (sed,10)\n8> (tellus,10)\n6> (velit,10)\n8> (sit,10)\n6> (hendrerit,10)\n8> (amet,10)\n6> (sollicitudin,10)\n8> (laoreet,10)\n6> (etiam,10)\n6> (accumsan,10)\n8> (urna,10)\n8> (viverra,10)\n6> (a,10)\n8> (sed,10)\n6> (semper,10)\n8> (erat,10)\n6> (orci,10)\n6> (diam,10)\n6> (velit,10)\n6> (quam,10)\n8> (sit,10)\n8> (amet,10)\n8> (consectetur,10)\n6> (nisl,10)\n8> (faucibus,10)\n8> (sed,10)\n6> (blandit,10)\n8> (tellus,10)\n6> (molestie,10)\n8> (odio,10)\n8> (sed,10)\n8> (sed,10)\n8> (sit,10)\n8> (amet,10)\n8> (urna,10)\n8> (erat,10)\n8> (sed,10)\n8> (feugiat,10)\n8> (per,10)\n8> (sit,10)\n8> (amet,10)\n8> (odio,10)\n8> (justo,10)\n8> (faucibus,10)\n8> (curabitur,10)\n8> (per,10)\n8> (viverra,10)\n8> (urna,10)\n8> (tellus,10)\n8> (sed,10)\n8> (odio,10)\n8> (sed,10)\n8> (consectetur,10)\n8> (faucibus,10)\n8> (erat,10)\n8> (justo,10)\n8> (sit,10)\n8> (amet,10)\n8> (curabitur,10)\n8> (sed,10)\n4> (nisi,10)\n4> (pellentesque,10)\n4> (dolor,10)\n4> (iaculis,10)\n4> (vitae,10)\n4> (facilisis,10)\n4> (pellentesque,10)\n2> (vestibulum,10)\n2> (rutrum,10)\n2> (ut,10)\n2> (elit,10)\n2> (scelerisque,10)\n2> (aliquam,10)\n2> (egestas,10)\n2> (et,10)\n2> (leo,10)\n2> (at,10)\n2> (tempor,10)\n2> (nunc,10)\n2> (ut,10)\n2> (lacus,10)\n2> (varius,10)\n2> (mattis,10)\n2> (ultrices,10)\n2> (et,10)\n2> (ut,10)\n2> (at,10)\n2> (commodo,10)\n2> (aliquam,10)\n2> (nunc,10)\n1> (nec,10)\n2> (vestibulum,10)\n2> (eleifend,10)\n1> (posuere,10)\n2> (lacus,10)\n2> (suspendisse,10)\n1> (interdum,10)\n1> (ipsum,10)\n2> (et,10)\n2> (egestas,10)\n1> (quisque,10)\n2> (curae,5)\n1> (ac,10)\n1> (maecenas,10)\n1> (turpis,10)\n2> (et,10)\n1> (neque,10)\n2> (augue,10)\n2> (rutrum,10)\n1> (libero,10)\n2> (aliquam,10)\n1> (nec,10)\n2> (ut,10)\n2> (ultrices,10)\n2> (vestibulum,10)\n1> (ipsum,10)\n2> (lacus,10)\n1> (arcu,10)\n1> (magna,10)\n2> (praesent,10)\n1> (suscipit,10)\n2> (leo,10)\n1> (interdum,10)\n2> (egestas,10)\n1> (venenatis,10)\n1> (dignissim,10)\n2> (at,10)\n1> (sapien,10)\n2> (eleifend,10)\n1> (finibus,10)\n2> (et,10)\n1> (nec,10)\n2> (sem,10)\n1> (morbi,10)\n1> (massa,10)\n1> (neque,10)\n1> (ipsum,10)\n1> (primis,10)\n2> (elit,10)\n2> (nunc,10)\n1> (fames,10)\n2> (ut,10)\n1> (turpis,10)\n1> (penatibus,5)\n2> (scelerisque,10)\n1> (montes,5)\n1> (mus,5)\n1> (magna,10)\n2> (at,10)\n2> (aliquam,10)\n1> (ac,10)\n2> (mattis,10)\n2> (fusce,10)\n2> (tempor,10)\n1> (nec,10)\n2> (et,10)\n1> (ipsum,10)\n2> (ultrices,10)\n1> (libero,10)\n2> (ut,10)\n1> (morbi,10)\n2> (aliquam,10)\n1> (turpis,10)\n2> (leo,10)\n1> (enim,10)\n2> (lacus,10)\n2> (varius,10)\n1> (interdum,10)\n1> (maecenas,10)\n2> (elit,10)\n1> (mollis,10)\n2> (at,10)\n1> (arcu,10)\n2> (suspendisse,10)\n2> (vestibulum,10)\n1> (ac,10)\n2> (sem,10)\n2> (augue,10)\n1> (neque,10)\n2> (duis,10)\n1> (sapien,10)\n1> (nec,10)\n2> (nunc,10)\n1> (finibus,10)\n1> (posuere,10)\n2> (ad,5)\n2> (rutrum,10)\n2> (ut,10)\n2> (commodo,10)\n2> (suspendisse,10)\n2> (mattis,10)\n2> (egestas,10)\n2> (elit,10)\n2> (eleifend,10)\n2> (sem,10)\n2> (lacus,10)\n2> (ut,10)\n2> (vestibulum,10)\n2> (adipiscing,5)\n2> (nunc,10)\n2> (aliquam,10)\n2> (et,10)\n2> (scelerisque,10)\n2> (fusce,10)\n2> (elit,10)\n2> (augue,10)\n2> (ut,10)\n2> (suspendisse,10)\n2> (praesent,10)\n2> (nunc,10)\n2> (et,10)\n2> (ultrices,10)\n2> (aliquam,10)\n2> (at,10)\n2> (commodo,10)\n2> (ut,10)\n2> (leo,10)\n2> (aliquam,10)\n2> (nunc,10)\n2> (vestibulum,10)\n2> (et,10)\n2> (egestas,10)\n2> (eleifend,10)\n2> (suspendisse,10)\n2> (varius,10)\n2> (ut,10)\n2> (lacus,10)\n2> (tempor,10)\n2> (nunc,10)\n2> (aliquam,10)\n2> (vestibulum,10)\n2> (fusce,10)\n2> (et,10)\n2> (mattis,10)\n2> (ut,10)\n2> (sem,10)\n2> (elit,10)\n2> (at,10)\n2> (leo,10)\n2> (ut,10)\n2> (nunc,10)\n2> (praesent,10)\n2> (aliquam,10)\n2> (augue,10)\n2> (egestas,10)\n2> (sem,10)\n2> (at,10)\n2> (et,10)\n2> (lacus,10)\n2> (suspendisse,10)\n2> (nunc,10)\n2> (ultrices,10)\n2> (ut,10)\n2> (rutrum,10)\n2> (elit,10)\n2> (at,10)\n2> (scelerisque,10)\n2> (egestas,10)\n2> (eleifend,10)\n2> (commodo,10)\n2> (ut,10)\n2> (duis,10)\n2> (leo,10)\n2> (varius,10)\n2> (et,10)\n2> (augue,10)\n2> (praesent,10)\n2> (elit,10)\n2> (ut,10)\n2> (vestibulum,10)\n2> (at,10)\n2> (fusce,10)\n2> (aliquam,10)\n2> (et,10)\n2> (nunc,10)\n2> (ut,10)\n1> (ipsum,10)\n1> (magna,10)\n1> (massa,10)\n1> (interdum,10)\n1> (dignissim,10)\n1> (suscipit,10)\n1> (nec,10)\n1> (morbi,10)\n1> (libero,10)\n1> (ac,10)\n1> (sociosqu,10)\n1> (inceptos,10)\n1> (himenaeos,10)\n1> (massa,10)\n1> (turpis,10)\n1> (posuere,10)\n1> (neque,10)\n1> (nec,10)\n1> (arcu,10)\n1> (ipsum,10)\n1> (ac,10)\n1> (quisque,10)\n1> (suscipit,10)\n1> (turpis,10)\n1> (ac,10)\n1> (magna,10)\n1> (sapien,10)\n1> (mollis,10)\n1> (ipsum,10)\n1> (morbi,10)\n1> (enim,10)\n3> (tempus,10)\n3> (condimentum,10)\n3> (pulvinar,10)\n3> (euismod,10)\n3> (non,10)\n3> (dictum,10)\n3> (ultricies,10)\n3> (cursus,10)\n3> (nibh,10)\n3> (placerat,10)\n3> (quis,10)\n3> (non,10)\n3> (consequat,10)\n3> (cras,10)\n3> (vehicula,10)\n8> (tellus,10)\n8> (odio,10)\n8> (urna,10)\n8> (sed,10)\n8> (feugiat,10)\n8> (justo,10)\n8> (sit,10)\n8> (amet,10)\n8> (faucibus,10)\n8> (odio,10)\n8> (sed,10)\n8> (laoreet,10)\n8> (sed,10)\n8> (consectetur,10)\n8> (erat,10)\n8> (curabitur,10)\n8> (sed,10)\n8> (sit,10)\n8> (amet,10)\n8> (justo,10)\n8> (sed,10)\n8> (urna,10)\n8> (consectetur,10)\n8> (curabitur,10)\n8> (faucibus,10)\n8> (sed,10)\n8> (erat,10)\n8> (sed,10)\n8> (sit,10)\n8> (amet,10)\n8> (odio,10)\n8> (erat,10)\n8> (sit,10)\n8> (amet,10)\n8> (justo,10)\n8> (consectetur,10)\n8> (sed,10)\n8> (parturient,5)\n8> (viverra,10)\n8> (sed,10)\n8> (tellus,10)\n8> (sit,10)\n8> (amet,10)\n8> (sed,10)\n8> (laoreet,10)\n8> (erat,10)\n8> (urna,10)\n8> (sit,10)\n8> (amet,10)\n8> (sed,10)\n8> (faucibus,10)\n8> (facilisi,10)\n8> (odio,10)\n8> (sit,10)\n8> (amet,10)\n8> (sed,10)\n8> (consectetur,10)\n8> (tellus,10)\n8> (feugiat,10)\n8> (justo,10)\n8> (erat,10)\n8> (sed,10)\n8> (curabitur,10)\n8> (sit,10)\n8> (amet,10)\n7> (in,5)\n7> (eget,5)\n7> (nulla,5)\n7> (lobortis,5)\n7> (in,10)\n7> (luctus,5)\n7> (proin,5)\n7> (nulla,10)\n7> (malesuada,5)\n7> (in,10)\n7> (id,5)\n7> (dapibus,5)\n7> (eget,10)\n7> (lacinia,5)\n7> (lectus,5)\n7> (in,10)\n7> (integer,5)\n7> (sodales,5)\n7> (pharetra,5)\n7> (efficitur,5)\n7> (id,10)\n7> (in,10)\n7> (nulla,10)\n7> (auctor,5)\n7> (id,10)\n7> (eget,10)\n7> (dapibus,10)\n7> (lectus,10)\n7> (luctus,10)\n7> (in,10)\n7> (integer,10)\n7> (pharetra,10)\n7> (sodales,10)\n7> (efficitur,10)\n7> (eget,10)\n7> (in,10)\n7> (lobortis,10)\n7> (nulla,10)\n7> (id,10)\n7> (lacinia,10)\n7> (nulla,10)\n7> (in,10)\n7> (auctor,10)\n7> (in,10)\n7> (eget,10)\n7> (id,10)\n7> (lectus,10)\n7> (proin,10)\n7> (malesuada,10)\n7> (in,10)\n7> (dapibus,10)\n7> (eget,10)\n7> (id,10)\n7> (efficitur,10)\n7> (luctus,10)\n7> (nulla,10)\n7> (eget,10)\n7> (in,10)\n7> (id,10)\n7> (malesuada,10)\n7> (pharetra,10)\n7> (lobortis,10)\n7> (sodales,10)\n7> (in,10)\n7> (auctor,10)\n7> (dapibus,10)\n3> (pulvinar,10)\n7> (in,10)\n7> (eget,10)\n7> (id,10)\n7> (eget,10)\n7> (efficitur,10)\n7> (in,10)\n7> (proin,10)\n7> (integer,10)\n7> (in,10)\n7> (lectus,10)\n7> (id,10)\n7> (sodales,10)\n7> (lobortis,10)\n7> (eget,10)\n7> (in,10)\n7> (nulla,10)\n7> (proin,10)\n7> (lacinia,10)\n7> (nam,5)\n7> (luctus,10)\n7> (in,10)\n7> (malesuada,10)\n7> (pharetra,10)\n7> (id,10)\n7> (lectus,10)\n2> (at,10)\n2> (mattis,10)\n7> (in,10)\n2> (sem,10)\n7> (integer,10)\n2> (praesent,10)\n7> (eget,10)\n7> (in,10)\n2> (lacus,10)\n7> (lobortis,10)\n2> (leo,10)\n2> (vestibulum,10)\n7> (id,10)\n7> (auctor,10)\n2> (et,10)\n7> (nulla,10)\n7> (lectus,10)\n2> (commodo,10)\n7> (eget,10)\n7> (luctus,10)\n2> (at,10)\n7> (in,10)\n2> (elit,10)\n2> (tempor,10)\n2> (ut,10)\n7> (id,10)\n2> (nunc,10)\n7> (malesuada,10)\n7> (dapibus,10)\n7> (nulla,10)\n2> (egestas,10)\n2> (rutrum,10)\n2> (duis,10)\n7> (eget,10)\n7> (sodales,10)\n2> (et,10)\n7> (in,10)\n2> (suspendisse,10)\n2> (eleifend,10)\n7> (nulla,10)\n2> (ut,10)\n7> (id,10)\n2> (lacus,10)\n7> (eget,10)\n2> (sem,10)\n7> (lobortis,10)\n2> (aliquam,10)\n2> (leo,10)\n2> (varius,10)\n2> (commodo,10)\n2> (augue,10)\n7> (proin,10)\n2> (nunc,10)\n7> (id,10)\n2> (ultrices,10)\n2> (at,10)\n7> (efficitur,10)\n7> (id,10)\n2> (tempor,10)\n7> (auctor,10)\n2> (fusce,10)\n7> (integer,10)\n2> (nunc,10)\n7> (eget,10)\n2> (scelerisque,10)\n7> (in,10)\n2> (praesent,10)\n7> (pharetra,10)\n2> (egestas,10)\n7> (sodales,10)\n2> (et,10)\n7> (lectus,10)\n2> (sem,10)\n7> (nulla,10)\n2> (elit,10)\n2> (at,10)\n7> (eget,10)\n7> (luctus,10)\n7> (id,10)\n2> (ut,10)\n2> (scelerisque,10)\n7> (malesuada,10)\n2> (et,10)\n7> (lobortis,10)\n2> (leo,10)\n7> (nulla,10)\n2> (elit,10)\n7> (netus,5)\n7> (eget,10)\n2> (suspendisse,10)\n7> (in,10)\n2> (vestibulum,10)\n2> (egestas,10)\n7> (id,10)\n7> (efficitur,10)\n2> (et,10)\n7> (luctus,10)\n2> (at,10)\n7> (in,10)\n2> (nunc,10)\n7> (proin,10)\n2> (aliquam,10)\n7> (eget,10)\n2> (ut,10)\n7> (lectus,10)\n2> (et,10)\n7> (in,10)\n7> (malesuada,10)\n7> (nulla,10)\n7> (dapibus,10)\n2> (duis,10)\n2> (lacus,10)\n7> (lacinia,10)\n7> (nam,10)\n2> (mattis,10)\n7> (id,10)\n2> (ultrices,10)\n7> (integer,10)\n2> (sem,10)\n2> (tempor,10)\n2> (et,10)\n2> (ut,10)\n2> (vestibulum,10)\n2> (commodo,10)\n2> (egestas,10)\n2> (eleifend,10)\n2> (scelerisque,10)\n7> (sodales,10)\n2> (suspendisse,10)\n7> (eget,10)\n2> (et,10)\n7> (pharetra,10)\n2> (nunc,10)\n7> (id,10)\n2> (lacus,10)\n7> (auctor,10)\n2> (ut,10)\n7> (in,10)\n2> (augue,10)\n2> (ultrices,10)\n7> (nulla,10)\n2> (elit,10)\n7> (malesuada,10)\n2> (rutrum,10)\n2> (at,10)\n2> (varius,10)\n2> (praesent,10)\n7> (eget,10)\n2> (vestibulum,10)\n2> (tempor,10)\n2> (leo,10)\n2> (ut,10)\n2> (lacus,10)\n2> (commodo,10)\n2> (at,10)\n7> (id,10)\n2> (ad,10)\n7> (luctus,10)\n2> (fusce,10)\n7> (in,10)\n5> (tincidunt,5)\n2> (nunc,10)\n2> (et,10)\n7> (nulla,10)\n5> (vel,5)\n7> (dapibus,10)\n5> (eu,5)\n2> (sem,10)\n5> (ex,5)\n7> (proin,10)\n2> (scelerisque,10)\n5> (mauris,5)\n2> (aliquam,10)\n7> (taciti,5)\n5> (est,5)\n7> (in,10)\n2> (mattis,10)\n5> (donec,5)\n5> (mi,5)\n2> (ut,10)\n7> (lectus,10)\n5> (eu,10)\n7> (id,10)\n2> (at,10)\n5> (vel,10)\n5> (rhoncus,5)\n7> (eget,10)\n2> (suspendisse,10)\n5> (tincidunt,10)\n7> (lobortis,10)\n2> (vestibulum,10)\n5> (risus,5)\n2> (et,10)\n7> (in,10)\n5> (felis,5)\n7> (lacinia,10)\n5> (eu,10)\n5> (gravida,5)\n2> (eleifend,10)\n7> (integer,10)\n5> (est,10)\n7> (sodales,10)\n2> (tempor,10)\n5> (ante,5)\n7> (nam,10)\n2> (at,10)\n5> (dui,5)\n5> (vulputate,5)\n2> (vestibulum,10)\n7> (eget,10)\n5> (mauris,10)\n2> (ut,10)\n7> (pharetra,10)\n2> (duis,10)\n5> (vel,10)\n7> (nulla,10)\n2> (adipiscing,10)\n7> (in,10)\n2> (elit,10)\n5> (tincidunt,10)\n7> (id,10)\n2> (et,10)\n5> (eu,10)\n7> (eget,10)\n5> (congue,5)\n2> (egestas,10)\n2> (sem,10)\n5> (mauris,10)\n2> (nunc,10)\n7> (id,10)\n5> (elementum,5)\n5> (ex,10)\n7> (in,10)\n2> (commodo,10)\n5> (rhoncus,10)\n5> (eros,5)\n7> (nulla,10)\n2> (aliquam,10)\n5> (eu,10)\n2> (augue,10)\n7> (luctus,10)\n5> (donec,10)\n2> (praesent,10)\n5> (felis,10)\n7> (malesuada,10)\n2> (at,10)\n7> (eget,10)\n5> (vel,10)\n7> (in,10)\n5> (convallis,5)\n7> (proin,10)\n5> (aenean,5)\n7> (eget,10)\n5> (mi,10)\n7> (lectus,10)\n5> (est,10)\n7> (dapibus,10)\n5> (ante,10)\n7> (in,10)\n7> (sodales,10)\n5> (vulputate,10)\n5> (pretium,5)\n7> (nulla,10)\n7> (luctus,10)\n5> (donec,10)\n5> (ullamcorper,5)\n7> (netus,10)\n5> (rhoncus,10)\n5> (eros,10)\n5> (risus,10)\n5> (convallis,10)\n5> (eu,10)\n5> (felis,10)\n5> (vel,10)\n5> (mauris,10)\n5> (porttitor,5)\n5> (tincidunt,10)\n5> (ex,10)\n5> (convallis,10)\n5> (vulputate,10)\n5> (felis,10)\n5> (donec,10)\n5> (ante,10)\n5> (mauris,10)\n5> (ex,10)\n5> (tincidunt,10)\n5> (aenean,10)\n5> (risus,10)\n5> (eu,10)\n5> (porttitor,10)\n5> (vel,10)\n5> (congue,10)\n5> (vulputate,10)\n5> (eros,10)\n5> (elementum,10)\n5> (est,10)\n5> (mauris,10)\n5> (gravida,10)\n5> (mi,10)\n5> (ex,10)\n5> (eu,10)\n5> (donec,10)\n5> (vel,10)\n5> (felis,10)\n5> (risus,10)\n5> (tincidunt,10)\n5> (dui,10)\n5> (eu,10)\n5> (pretium,10)\n5> (convallis,10)\n5> (porttitor,10)\n5> (vel,10)\n5> (est,10)\n5> (ullamcorper,10)\n5> (aenean,10)\n5> (ante,10)\n5> (eros,10)\n5> (rhoncus,10)\n5> (donec,10)\n5> (dui,10)\n5> (mauris,10)\n5> (eu,10)\n5> (ante,10)\n5> (mi,10)\n5> (vel,10)\n5> (convallis,10)\n5> (elementum,10)\n5> (vulputate,10)\n5> (tincidunt,10)\n5> (pretium,10)\n5> (dui,10)\n5> (gravida,10)\n5> (ex,10)\n5> (ullamcorper,10)\n5> (felis,10)\n5> (eros,10)\n5> (mauris,10)\n5> (aenean,10)\n5> (congue,10)\n5> (ante,10)\n5> (vel,10)\n5> (eu,10)\n5> (donec,10)\n5> (tincidunt,10)\n5> (risus,10)\n5> (gravida,10)\n5> (est,10)\n5> (vel,10)\n5> (ex,10)\n5> (elementum,10)\n5> (eros,10)\n5> (eu,10)\n5> (donec,10)\n5> (mauris,10)\n5> (ante,10)\n5> (congue,10)\n5> (mi,10)\n5> (vel,10)\n5> (porttitor,10)\n5> (risus,10)\n5> (vulputate,10)\n5> (aenean,10)\n5> (dui,10)\n5> (felis,10)\n5> (eu,10)\n5> (tincidunt,10)\n5> (eros,10)\n5> (donec,10)\n5> (vel,10)\n5> (rhoncus,10)\n5> (pretium,10)\n5> (gravida,10)\n5> (ex,10)\n5> (mauris,10)\n5> (eu,10)\n5> (eros,10)\n5> (convallis,10)\n5> (ante,10)\n5> (dui,10)\n5> (vel,10)\n5> (est,10)\n5> (tincidunt,10)\n5> (congue,10)\n5> (felis,10)\n5> (risus,10)\n5> (vel,10)\n5> (ex,10)\n5> (elementum,10)\n5> (mauris,10)\n5> (donec,10)\n5> (ullamcorper,10)\n5> (porttitor,10)\n5> (mi,10)\n5> (est,10)\n5> (eu,10)\n5> (vulputate,10)\n5> (vel,10)\n5> (rhoncus,10)\n5> (vel,10)\n5> (ex,10)\n5> (donec,10)\n5> (mauris,10)\n5> (ante,10)\n5> (elementum,10)\n5> (eu,10)\n5> (felis,10)\n5> (est,10)\n5> (mauris,10)\n5> (eros,10)\n5> (vel,10)\n5> (convallis,10)\n5> (aenean,10)\n5> (ante,10)\n5> (mi,10)\n5> (ullamcorper,10)\n5> (tincidunt,10)\n5> (pretium,10)\n5> (congue,10)\n5> (risus,10)\n5> (donec,10)\n5> (gravida,10)\n5> (mauris,10)\n5> (porttitor,10)\n5> (vel,10)\n5> (rhoncus,10)\n5> (eu,10)\n5> (ullamcorper,10)\n5> (est,10)\n5> (dui,10)\n5> (tincidunt,10)\n5> (mauris,10)\n5> (vel,10)\n5> (convallis,10)\n5> (eros,10)\n5> (ante,10)\n5> (ex,10)\n7> (id,10)\n5> (litora,5)\n5> (torquent,5)\n7> (efficitur,10)\n5> (dui,10)\n7> (auctor,10)\n5> (vel,10)\n7> (in,10)\n5> (mauris,10)\n7> (eget,10)\n5> (felis,10)\n5> (donec,10)\n7> (in,10)\n5> (mi,10)\n7> (lacinia,10)\n5> (vel,10)\n7> (nam,10)\n5> (mauris,10)\n7> (luctus,10)\n5> (est,10)\n7> (nulla,10)\n7> (dapibus,10)\n5> (pretium,10)\n7> (malesuada,10)\n5> (tincidunt,10)\n5> (eu,10)\n7> (in,10)\n5> (vulputate,10)\n5> (elementum,10)\n7> (in,10)\n5> (ullamcorper,10)\n7> (sodales,10)\n7> (id,10)\n7> (eget,10)\n7> (taciti,10)\n7> (malesuada,10)\n7> (in,10)\n7> (nulla,10)\n7> (id,10)\n7> (auctor,10)\n7> (lectus,10)\n7> (in,10)\n7> (pharetra,10)\n5> (donec,10)\n7> (in,10)\n7> (lobortis,10)\n5> (congue,10)\n5> (porttitor,10)\n7> (nulla,10)\n5> (risus,10)\n7> (eget,10)\n7> (id,10)\n5> (mauris,10)\n7> (lacinia,10)\n7> (luctus,10)\n5> (eu,10)\n7> (dapibus,10)\n5> (dui,10)\n7> (nulla,10)\n5> (tincidunt,10)\n7> (proin,10)\n5> (vel,10)\n7> (in,10)\n5> (rhoncus,10)\n7> (efficitur,10)\n5> (aenean,10)\n7> (eget,10)\n7> (pharetra,10)\n5> (mauris,10)\n5> (felis,10)\n5> (donec,10)\n5> (eros,10)\n5> (tincidunt,10)\n5> (convallis,10)\n5> (pretium,10)\n7> (auctor,10)\n5> (eu,10)\n7> (malesuada,10)\n7> (in,10)\n5> (vel,10)\n7> (nam,10)\n5> (gravida,10)\n5> (ex,10)\n7> (nulla,10)\n5> (est,10)\n7> (eget,10)\n7> (in,10)\n7> (id,10)\n7> (integer,10)\n5> (ante,10)\n7> (lectus,10)\n5> (ullamcorper,10)\n7> (lobortis,10)\n5> (risus,10)\n7> (sodales,10)\n7> (in,10)\n5> (eros,10)\n5> (mauris,10)\n7> (lacinia,10)\n7> (nulla,10)\n5> (eu,10)\n7> (auctor,10)\n5> (elementum,10)\n7> (in,10)\n5> (mi,10)\n7> (eget,10)\n5> (rhoncus,10)\n7> (efficitur,10)\n5> (ante,10)\n7> (in,10)\n5> (pretium,10)\n7> (id,10)\n5> (est,10)\n7> (malesuada,10)\n5> (donec,10)\n7> (luctus,10)\n5> (tincidunt,10)\n7> (dapibus,10)\n7> (proin,10)\n5> (vel,10)\n5> (felis,10)\n7> (nam,10)\n5> (convallis,10)\n7> (id,10)\n5> (eu,10)\n7> (efficitur,10)\n5> (ex,10)\n5> (dui,10)\n7> (in,10)\n7> (nulla,10)\n5> (porttitor,10)\n5> (congue,10)\n7> (sodales,10)\n7> (eget,10)\n5> (vulputate,10)\n7> (integer,10)\n5> (eu,10)\n7> (dapibus,10)\n5> (aenean,10)\n7> (id,10)\n5> (eros,10)\n7> (in,10)\n5> (litora,10)\n5> (torquent,10)\n5> (ante,10)\n5> (vel,10)\n5> (donec,10)\n7> (auctor,10)\n5> (est,10)\n7> (lobortis,10)\n5> (mi,10)\n7> (nulla,10)\n5> (mauris,10)\n7> (in,10)\n5> (tincidunt,10)\n7> (proin,10)\n5> (elementum,10)\n7> (malesuada,10)\n5> (dui,10)\n7> (integer,10)\n5> (eu,10)\n7> (eget,10)\n7> (pharetra,10)\n7> (lectus,10)\n7> (id,10)\n5> (vel,10)\n7> (efficitur,10)\n5> (risus,10)\n7> (in,10)\n5> (felis,10)\n7> (magnis,5)\n5> (eu,10)\n7> (nam,10)\n5> (mauris,10)\n5> (est,10)\n7> (lacinia,10)\n5> (ex,10)\n7> (nam,10)\n5> (ullamcorper,10)\n7> (luctus,10)\n5> (gravida,10)\n7> (eget,10)\n5> (vel,10)\n7> (nulla,10)\n5> (convallis,10)\n7> (id,10)\n7> (in,10)\n5> (pretium,10)\n5> (donec,10)\n7> (sodales,10)\n5> (eros,10)\n7> (eget,10)\n7> (lobortis,10)\n7> (pharetra,10)\n7> (dapibus,10)\n7> (nulla,10)\n7> (eget,10)\n5> (aenean,10)\n7> (id,10)\n5> (tincidunt,10)\n5> (mi,10)\n7> (auctor,10)\n5> (est,10)\n7> (in,10)\n5> (elementum,10)\n7> (malesuada,10)\n5> (mauris,10)\n7> (sodales,10)\n5> (porttitor,10)\n7> (lectus,10)\n5> (vel,10)\n7> (in,10)\n5> (ante,10)\n7> (lobortis,10)\n5> (eu,10)\n7> (luctus,10)\n5> (rhoncus,10)\n7> (efficitur,10)\n5> (mauris,10)\n7> (pharetra,10)\n5> (est,10)\n5> (congue,10)\n5> (dui,10)\n5> (vel,10)\n5> (tincidunt,10)\n5> (rhoncus,10)\n5> (mi,10)\n5> (donec,10)\n5> (felis,10)\n5> (vel,10)\n5> (eu,10)\n5> (ante,10)\n5> (tincidunt,10)\n5> (elementum,10)\n5> (est,10)\n5> (ex,10)\n5> (eros,10)\n5> (porttitor,10)\n5> (dui,10)\n5> (vel,10)\n5> (mauris,10)\n5> (gravida,10)\n5> (ullamcorper,10)\n5> (convallis,10)\n5> (porttitor,10)\n5> (dui,10)\n5> (mi,10)\n5> (ante,10)\n5> (donec,10)\n5> (vulputate,10)\n5> (mauris,10)\n5> (eu,10)\n5> (congue,10)\n5> (elementum,10)\n5> (risus,10)\n5> (mi,10)\n5> (felis,10)\n5> (vel,10)\n5> (dui,10)\n5> (ex,10)\n5> (aenean,10)\n5> (eu,10)\n5> (tincidunt,10)\n5> (ante,10)\n5> (donec,10)\n5> (tincidunt,10)\n5> (porttitor,10)\n5> (felis,10)\n5> (mauris,10)\n5> (eros,10)\n5> (vel,10)\n5> (pretium,10)\n5> (elementum,10)\n5> (eu,10)\n5> (ridiculus,5)\n5> (vulputate,10)\n5> (dui,10)\n5> (rhoncus,10)\n5> (convallis,10)\n5> (gravida,10)\n5> (est,10)\n5> (mauris,10)\n5> (eros,10)\n5> (risus,10)\n5> (tincidunt,10)\n5> (ante,10)\n5> (mi,10)\n5> (vel,10)\n5> (eu,10)\n5> (ex,10)\n5> (dui,10)\n5> (felis,10)\n5> (mauris,10)\n5> (eu,10)\n5> (pretium,10)\n5> (eu,10)\n5> (porttitor,10)\n5> (rhoncus,10)\n5> (tincidunt,10)\n5> (elementum,10)\n5> (risus,10)\n5> (vel,10)\n5> (donec,10)\n5> (mi,10)\n5> (mauris,10)\n5> (est,10)\n5> (ante,10)\n5> (vulputate,10)\n5> (eu,10)\n5> (tincidunt,10)\n5> (convallis,10)\n5> (congue,10)\n5> (ex,10)\n5> (gravida,10)\n5> (eu,10)\n5> (eros,10)\n5> (ullamcorper,10)\n"}]},"apps":[],"progressUpdateIntervalMs":500,"jobName":"paragraph_1583778752201_703294002","id":"paragraph_1562831745555_1327527795","dateCreated":"2020-03-09T18:32:32+0000","status":"READY","$$hashKey":"object:201"},{"text":"%md\n\n## Exercise 2: Incremental learning skeleton (ML) (⭐⭐⭐)\n\n- __Goal of the exercise__: build the skeleton of an incremental machine learning algorithm that builds a new model on every second of new data\n- __Skills__: \n    - *Connected streams*\n    - *CoFunctions*\n    - *Tuple data types*    \n    - *Stream time characteristics*\n- __Operations__: `addSource`, `connect`, `map`, `timeWindowAll`, `collect` \n- __Functions__: `SourceFunction`, `AllWindowFunction`, `CoMapFunction`\n- __What is incremental learning?__ \nIncremental learning is a method of machine learning, in which input data is continuously used to extend the existing model's knowledge i.e. to further train the model. It represents a dynamic technique of supervised learning and unsupervised learning that can be applied when training data becomes available gradually over time or its size is out of system memory limits. \n- __Use case__: Incremental algorithms are frequently applied to data streams or big data, addressing issues in data availability and resource scarcity respectively. Stock trend prediction and user profiling are some examples of data streams where new data becomes continuously available. Applying incremental learning to big data aims to produce faster classification or forecasting times. More precisely, we will write the skeleton of the following program:\n\n| ![space-1.jpg](http://193.190.127.227/img/flink/fig2.png) | \n|:--:| \n| *Fig. 2: Incremental ML dataflow (Source: EURA NOVA).* |","user":"anonymous","dateUpdated":"2020-03-10T07:35:36+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"runOnSelectionChange":true,"title":false,"checkEmpty":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h2>Exercise 2: Incremental learning skeleton (ML) (⭐⭐⭐)</h2>\n<ul>\n  <li><strong>Goal of the exercise</strong>: build the skeleton of an incremental machine learning algorithm that builds a new model on every second of new data</li>\n  <li><strong>Skills</strong>:\n    <ul>\n      <li><em>Connected streams</em></li>\n      <li><em>CoFunctions</em></li>\n      <li><em>Tuple data types</em></li>\n      <li><em>Stream time characteristics</em></li>\n    </ul>\n  </li>\n  <li><strong>Operations</strong>: <code>addSource</code>, <code>connect</code>, <code>map</code>, <code>timeWindowAll</code>, <code>collect</code></li>\n  <li><strong>Functions</strong>: <code>SourceFunction</code>, <code>AllWindowFunction</code>, <code>CoMapFunction</code></li>\n  <li><strong>What is incremental learning?</strong><br/>Incremental learning is a method of machine learning, in which input data is continuously used to extend the existing model&rsquo;s knowledge i.e. to further train the model. It represents a dynamic technique of supervised learning and unsupervised learning that can be applied when training data becomes available gradually over time or its size is out of system memory limits.</li>\n  <li><strong>Use case</strong>: Incremental algorithms are frequently applied to data streams or big data, addressing issues in data availability and resource scarcity respectively. Stock trend prediction and user profiling are some examples of data streams where new data becomes continuously available. Applying incremental learning to big data aims to produce faster classification or forecasting times. More precisely, we will write the skeleton of the following program:</li>\n</ul>\n<table>\n  <thead>\n    <tr>\n      <th align=\"center\"><img src=\"http://193.190.127.227/img/flink/fig2.png\" alt=\"space-1.jpg\" /> </th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td align=\"center\"><em>Fig. 2: Incremental ML dataflow (Source: EURA NOVA).</em> </td>\n    </tr>\n  </tbody>\n</table>\n</div>"}]},"apps":[],"progressUpdateIntervalMs":500,"jobName":"paragraph_1583778752202_1398460971","id":"paragraph_1562832677983_1938344939","dateCreated":"2020-03-09T18:32:32+0000","dateStarted":"2020-03-10T07:35:36+0000","dateFinished":"2020-03-10T07:35:36+0000","status":"FINISHED","$$hashKey":"object:202"},{"text":"%md\n### 1. As always, we start by setting up the execution environment\n    final StreamExecutionEnvironment env = StreamExecutionEnvironment.getExecutionEnvironment();","user":"anonymous","dateUpdated":"2020-03-09T18:32:32+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"runOnSelectionChange":true,"title":false,"checkEmpty":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h3>1. As always, we start by setting up the execution environment</h3>\n<pre><code>final StreamExecutionEnvironment env = StreamExecutionEnvironment.getExecutionEnvironment();\n</code></pre>\n</div>"}]},"apps":[],"progressUpdateIntervalMs":500,"jobName":"paragraph_1583778752202_1664719463","id":"paragraph_1563966846926_792144108","dateCreated":"2020-03-09T18:32:32+0000","status":"READY","$$hashKey":"object:203"},{"text":"%md\n### 2. Then, we need to set up the time characteristics.\nThe first part of a Flink DataStream program usually sets the base time characteristics. This setting defines how DataStream sources behave (for example, whether they will assigned timestamps or not), and what notion of time should be used by window operations. We will use the **event time** here. Please check our “Event time” theoretical introduction in our “Flink Introduction” notebook.\n    \n    env.setStreamTimeCharacteristic(TimeCharacteristic.EventTime);","user":"anonymous","dateUpdated":"2020-03-13T14:50:03+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"runOnSelectionChange":true,"title":false,"checkEmpty":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h3>2. Then, we need to set up the time characteristics.</h3>\n<p>The first part of a Flink DataStream program usually sets the base time characteristics. This setting defines how DataStream sources behave (for example, whether they will assigned timestamps or not), and what notion of time should be used by window operations. We will use the <strong>event time</strong> here. Please check our “Event time” theoretical introduction in our “Flink Introduction” notebook.</p>\n<pre><code>env.setStreamTimeCharacteristic(TimeCharacteristic.EventTime);\n</code></pre>\n</div>"}]},"apps":[],"progressUpdateIntervalMs":500,"jobName":"paragraph_1583778752202_-2112472785","id":"paragraph_1563966881256_299562161","dateCreated":"2020-03-09T18:32:32+0000","dateStarted":"2020-03-13T14:50:03+0000","dateFinished":"2020-03-13T14:50:03+0000","status":"FINISHED","$$hashKey":"object:204"},{"text":"%md\n### 3. Let’s now define our 2 input DataStreams: trainingData and newData:\n- **trainingData**, as the name states it, is our model training data. We will build our model based on this DataStream, and\n- **newData** will be the values we want to predict with the help of our model. \n**We will create, for both of those streams, 2 UDFs that will implement the [SourceFunction interface](https://ci.apache.org/projects/flink/flink-docs-master/api/java/org/apache/flink/streaming/api/functions/source/SourceFunction.html). It has the following syntax:**\n<center> **Interface SourceFunction`<T>`** </center>\n**where:**\n- T - The type of the elements produced by this source.\nSource functions are the base-interfaces for all stream data-source classes in Flink. The contract of a stream source is the following:\n- When the source start emitting elements, the **run()** method is called with a SourceContext as a parameter that can be used for emitting elements. The run method can run for as long as necessary.\n- The source must finally react to an invocation of **cancel()** by breaking out of its main loop.\n\n### 3.a. Let’s start with our trainingData DataStream.\n### We will simply return a constant emission of the Integer 1, here. The implementation is therefore pretty much straightforward","user":"anonymous","dateUpdated":"2020-03-13T13:46:24+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"runOnSelectionChange":true,"title":false,"checkEmpty":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h3>3. Let’s now define our 2 input DataStreams: trainingData and newData:</h3>\n<ul>\n  <li><strong>trainingData</strong>, as the name states it, is our model training data. We will build our model based on this DataStream, and</li>\n  <li><strong>newData</strong> will be the values we want to predict with the help of our model.<br/><strong>We will create, for both of those streams, 2 UDFs that will implement the <a href=\"https://ci.apache.org/projects/flink/flink-docs-master/api/java/org/apache/flink/streaming/api/functions/source/SourceFunction.html\">SourceFunction interface</a>. It has the following syntax:</strong><br/><center> <strong>Interface SourceFunction<code>&lt;T&gt;</code></strong> </center><br/><strong>where:</strong></li>\n  <li>T - The type of the elements produced by this source.<br/>Source functions are the base-interfaces for all stream data-source classes in Flink. The contract of a stream source is the following:</li>\n  <li>When the source start emitting elements, the <strong>run()</strong> method is called with a SourceContext as a parameter that can be used for emitting elements. The run method can run for as long as necessary.</li>\n  <li>The source must finally react to an invocation of <strong>cancel()</strong> by breaking out of its main loop.</li>\n</ul>\n<h3>3.a. Let’s start with our trainingData DataStream.</h3>\n<h3>We will simply return a constant emission of the Integer 1, here. The implementation is therefore pretty much straightforward</h3>\n</div>"}]},"apps":[],"progressUpdateIntervalMs":500,"jobName":"paragraph_1583778752202_1453243820","id":"paragraph_1563966945085_724122512","dateCreated":"2020-03-09T18:32:32+0000","dateStarted":"2020-03-13T13:46:24+0000","dateFinished":"2020-03-13T13:46:24+0000","status":"FINISHED","$$hashKey":"object:205"},{"text":"%md\n### 3.b. Let’s implement our newData DataStream. It will also have a really simple behavior, as it will solely return a constant emission of the Integer 1 as well. Code is therefore the same as the one for our `FiniteTrainingDataSource` function:\n        \n    public static class FiniteNewDataSource implements SourceFunction<Integer> {\n        private static final long serialVersionUID = 1L;\n        private int counter;\n        @Override\n        public void run(SourceContext<Integer> ctx) throws Exception {\n            Thread.sleep(15);\n            while (counter < 50) {\n                ctx.collect(getNewData());\n            }\n        }\n        @Override\n        public void cancel() {\n            // No cleanup needed\n        }\n        private Integer getNewData() throws InterruptedException {\n            Thread.sleep(5);\n            counter++;\n            return 1;\n        }\n    }","user":"anonymous","dateUpdated":"2020-03-13T16:03:06+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"runOnSelectionChange":true,"title":false,"checkEmpty":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h3>3.b. Let’s implement our newData DataStream. It will also have a really simple behavior, as it will solely return a constant emission of the Integer 1 as well. Code is therefore the same as the one for our <code>FiniteTrainingDataSource</code> function:</h3>\n<pre><code>public static class FiniteNewDataSource implements SourceFunction&lt;Integer&gt; {\n    private static final long serialVersionUID = 1L;\n    private int counter;\n    @Override\n    public void run(SourceContext&lt;Integer&gt; ctx) throws Exception {\n        Thread.sleep(15);\n        while (counter &lt; 50) {\n            ctx.collect(getNewData());\n        }\n    }\n    @Override\n    public void cancel() {\n        // No cleanup needed\n    }\n    private Integer getNewData() throws InterruptedException {\n        Thread.sleep(5);\n        counter++;\n        return 1;\n    }\n}\n</code></pre>\n</div>"}]},"apps":[],"progressUpdateIntervalMs":500,"jobName":"paragraph_1583778752202_-1079300182","id":"paragraph_1563967143301_2095803633","dateCreated":"2020-03-09T18:32:32+0000","dateStarted":"2020-03-13T16:03:06+0000","dateFinished":"2020-03-13T16:03:06+0000","status":"FINISHED","$$hashKey":"object:206"},{"text":"%md\n### 3.c. Back to our main class, we can now instantiate our **trainingData DataStream**, which will be a DataStream of Integers","user":"anonymous","dateUpdated":"2020-03-13T16:03:10+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"runOnSelectionChange":true,"title":false,"checkEmpty":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h3>3.c. Back to our main class, we can now instantiate our <strong>trainingData DataStream</strong>, which will be a DataStream of Integers</h3>\n</div>"}]},"apps":[],"progressUpdateIntervalMs":500,"jobName":"paragraph_1583778752202_-1259760964","id":"paragraph_1563967028895_-1203025205","dateCreated":"2020-03-09T18:32:32+0000","dateStarted":"2020-03-13T16:03:10+0000","dateFinished":"2020-03-13T16:03:10+0000","status":"FINISHED","$$hashKey":"object:207"},{"text":"%md\n### 3.d. Our newData DataStream will also be a DataStream of Integers","user":"anonymous","dateUpdated":"2020-03-13T16:03:11+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"runOnSelectionChange":true,"title":false,"checkEmpty":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h3>3.d. Our newData DataStream will also be a DataStream of Integers</h3>\n</div>"}]},"apps":[],"progressUpdateIntervalMs":500,"jobName":"paragraph_1583778752202_1333237448","id":"paragraph_1563967116200_-875335179","dateCreated":"2020-03-09T18:32:32+0000","dateStarted":"2020-03-13T16:03:11+0000","dateFinished":"2020-03-13T16:03:11+0000","status":"FINISHED","$$hashKey":"object:208"},{"text":"%md\n### Now that we have our DataStreams defined, we have 2 more things to do:\n- #### **4.** Build a new model on every new training data.\n    - **4.a.** Assign timestamps and watermarks\n    - **4.b.** Assign a time window to the stream\n    - **4.c.** Apply a new Partial Model Builder\n- #### **5.** Use the partial new model to give prediction out of newData DataStream.","user":"anonymous","dateUpdated":"2020-03-13T16:03:14+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"runOnSelectionChange":true,"title":false,"checkEmpty":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h3>Now that we have our DataStreams defined, we have 2 more things to do:</h3>\n<ul>\n  <li>\n    <h4><strong>4.</strong> Build a new model on every new training data.</h4>\n    <ul>\n      <li><strong>4.a.</strong> Assign timestamps and watermarks</li>\n      <li><strong>4.b.</strong> Assign a time window to the stream</li>\n      <li><strong>4.c.</strong> Apply a new Partial Model Builder</li>\n    </ul>\n  </li>\n  <li>\n  <h4><strong>5.</strong> Use the partial new model to give prediction out of newData DataStream.</h4></li>\n</ul>\n</div>"}]},"apps":[],"progressUpdateIntervalMs":500,"jobName":"paragraph_1583778752202_-1466412963","id":"paragraph_1563967168353_1903098869","dateCreated":"2020-03-09T18:32:32+0000","dateStarted":"2020-03-13T16:03:14+0000","dateFinished":"2020-03-13T16:03:14+0000","status":"FINISHED","$$hashKey":"object:209"},{"text":"%md\n### 4.a.i. Assign timestamps and watermarks\n\nWe will write the **`LinearTimestamp`** class that implements the  [AssignerWithPunctuatedWatermarks interface](https://ci.apache.org/projects/flink/flink-docs-master/api/java/org/apache/flink/streaming/api/functions/AssignerWithPunctuatedWatermarks.html). It has the following syntax:\n<center> **Interface AssignerWithPunctuatedWatermarks`<T>`** </center>\n**where:**\n- T - The type of the elements to which this assignor assigns timestamps.\n**It will contain 2 methods:**\n- 1. ***`extractTimestamp:`*** that will assign our current element a timestamp, and\n- 2. ***`checkAndGetNextWatermark:`*** that will check if the previous element’s timestamp is coherent with the current element’s timestamp (<=> we are processing the elements in the right order)\n\n**Example of AssignerWithPunctuatedWatermarks implementation:**\n    \n    public class WatermarkOnFlagAssigner implements AssignerWithPunctuatedWatermarks<MyElement> {\n    \n        public long extractTimestamp(MyElement element, long previousElementTimestamp) {\n            return element.getSequenceTimestamp();\n        }\n        public Watermark checkAndGetNextWatermark(MyElement lastElement, long extractedTimestamp) {\n            return lastElement.isEndOfSequence() ? new Watermark(extractedTimestamp) : null;\n        }\n    }\n\n__As in our “simplistic” exercise we use counters instead of timestamps, our `LinearTimestamp` class would then be:__","user":"anonymous","dateUpdated":"2020-03-13T16:03:16+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"runOnSelectionChange":true,"title":false,"checkEmpty":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h3>4.a.i. Assign timestamps and watermarks</h3>\n<p>We will write the <strong><code>LinearTimestamp</code></strong> class that implements the <a href=\"https://ci.apache.org/projects/flink/flink-docs-master/api/java/org/apache/flink/streaming/api/functions/AssignerWithPunctuatedWatermarks.html\">AssignerWithPunctuatedWatermarks interface</a>. It has the following syntax:<br/><center> <strong>Interface AssignerWithPunctuatedWatermarks<code>&lt;T&gt;</code></strong> </center><br/><strong>where:</strong><br/>- T - The type of the elements to which this assignor assigns timestamps.<br/><strong>It will contain 2 methods:</strong><br/>- 1. <strong><em><code>extractTimestamp:</code></em></strong> that will assign our current element a timestamp, and<br/>- 2. <strong><em><code>checkAndGetNextWatermark:</code></em></strong> that will check if the previous element’s timestamp is coherent with the current element’s timestamp (&lt;=&gt; we are processing the elements in the right order)</p>\n<p><strong>Example of AssignerWithPunctuatedWatermarks implementation:</strong></p>\n<pre><code>public class WatermarkOnFlagAssigner implements AssignerWithPunctuatedWatermarks&lt;MyElement&gt; {\n\n    public long extractTimestamp(MyElement element, long previousElementTimestamp) {\n        return element.getSequenceTimestamp();\n    }\n    public Watermark checkAndGetNextWatermark(MyElement lastElement, long extractedTimestamp) {\n        return lastElement.isEndOfSequence() ? new Watermark(extractedTimestamp) : null;\n    }\n}\n</code></pre>\n<p><strong>As in our “simplistic” exercise we use counters instead of timestamps, our <code>LinearTimestamp</code> class would then be:</strong></p>\n</div>"}]},"apps":[],"progressUpdateIntervalMs":500,"jobName":"paragraph_1583778752202_-1179773511","id":"paragraph_1563987643728_-1984092934","dateCreated":"2020-03-09T18:32:32+0000","dateStarted":"2020-03-13T16:03:16+0000","dateFinished":"2020-03-13T16:03:16+0000","status":"FINISHED","$$hashKey":"object:210"},{"text":"%java\n    private static class LinearTimestamp implements AssignerWithPunctuatedWatermarks<Integer> {\n        //private static final long serialVersionUID = 1L;\n        \n        private long counter = 0L;\n        @Override\n        public long extractTimestamp(Integer element, long previousElementTimestamp) {\n            return counter += 10L;\n        }\n        @Override\n        public Watermark checkAndGetNextWatermark(Integer lastElement, long extractedTimestamp) {\n            return new Watermark(counter - 1);\n        }\n    }","user":"anonymous","dateUpdated":"2020-03-13T16:03:19+0000","config":{"runOnSelectionChange":true,"title":false,"checkEmpty":true,"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"java","editOnDblClick":false,"completionSupport":false},"editorMode":"ace/mode/java"},"settings":{"params":{},"forms":{}},"results":{"code":"ERROR","msg":[{"type":"TEXT","data":"There isn't any class containing static main method."}]},"apps":[],"progressUpdateIntervalMs":500,"jobName":"paragraph_1583779331416_-2020621623","id":"paragraph_1583779331416_-2020621623","dateCreated":"2020-03-09T18:42:11+0000","dateStarted":"2020-03-13T16:03:20+0000","dateFinished":"2020-03-13T16:03:20+0000","status":"ERROR","$$hashKey":"object:211"},{"text":"%md\n### 4.b. Let's build a new model on every new training data:\nOur model, in our very simplistic scenario, is simply an Array[Double]. It will be built through the **`PartialModelBuilder`** class we will implement with the [AllWindowFunction interface](https://ci.apache.org/projects/flink/flink-docs-master/api/java/org/apache/flink/streaming/api/functions/windowing/AllWindowFunction.html) that extends the Window class. It has the following syntax:\n<center> **Interface AllWindowFunction`<IN,OUT,W extends Window>`** </center>\n**where:**\n- IN - The type of the input value.\n- OUT - The type of the output value.\n- W - The type of Window that this window function can be applied on.\n**We will give it:**\n- an Integer as input,\n- a Double[] (i.e. our model) as output, and\n- a TimeWindow (i.e. the type of windowing we want to achieve).\n**Please also notice that using the AllWindowFunction interface requires us to implement the `apply()` method inside. It has the following syntax:**\n<center> **apply(W window, Iterable`<IN>` values, Collector`<OUT>` out)**</center>\n**where:**\n- window - The window that is being evaluated.\n- values - The elements in the window being evaluated.\n- out - A collector for emitting elements.\n\n**Our PartialModelBuilder skeleton will then look like:**\n    \n    public static class PartialModelBuilder implements AllWindowFunction<Integer, Double[], TimeWindow> {\n        //private static final long serialVersionUID = 1L;\n    \n        protected Double[] buildPartialModel(Iterable<Integer> values) {\n            return new Double[]{1.00};\n        }\n        @Override\n        public void apply(TimeWindow window, Iterable<Integer> values, Collector<Double[]> out) throws Exception {\n            out.collect(buildPartialModel(values));\n        }\n    }","user":"anonymous","dateUpdated":"2020-03-13T16:03:27+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"runOnSelectionChange":true,"title":false,"checkEmpty":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h3>4.b. Let&rsquo;s build a new model on every new training data:</h3>\n<p>Our model, in our very simplistic scenario, is simply an Array[Double]. It will be built through the <strong><code>PartialModelBuilder</code></strong> class we will implement with the <a href=\"https://ci.apache.org/projects/flink/flink-docs-master/api/java/org/apache/flink/streaming/api/functions/windowing/AllWindowFunction.html\">AllWindowFunction interface</a> that extends the Window class. It has the following syntax:<br/><center> <strong>Interface AllWindowFunction<code>&lt;IN,OUT,W extends Window&gt;</code></strong> </center><br/><strong>where:</strong><br/>- IN - The type of the input value.<br/>- OUT - The type of the output value.<br/>- W - The type of Window that this window function can be applied on.<br/><strong>We will give it:</strong><br/>- an Integer as input,<br/>- a Double[] (i.e. our model) as output, and<br/>- a TimeWindow (i.e. the type of windowing we want to achieve).<br/><strong>Please also notice that using the AllWindowFunction interface requires us to implement the <code>apply()</code> method inside. It has the following syntax:</strong><br/><center> <strong>apply(W window, Iterable<code>&lt;IN&gt;</code> values, Collector<code>&lt;OUT&gt;</code> out)</strong></center><br/><strong>where:</strong><br/>- window - The window that is being evaluated.<br/>- values - The elements in the window being evaluated.<br/>- out - A collector for emitting elements.</p>\n<p><strong>Our PartialModelBuilder skeleton will then look like:</strong></p>\n<pre><code>public static class PartialModelBuilder implements AllWindowFunction&lt;Integer, Double[], TimeWindow&gt; {\n    //private static final long serialVersionUID = 1L;\n\n    protected Double[] buildPartialModel(Iterable&lt;Integer&gt; values) {\n        return new Double[]{1.00};\n    }\n    @Override\n    public void apply(TimeWindow window, Iterable&lt;Integer&gt; values, Collector&lt;Double[]&gt; out) throws Exception {\n        out.collect(buildPartialModel(values));\n    }\n}\n</code></pre>\n</div>"}]},"apps":[],"progressUpdateIntervalMs":500,"jobName":"paragraph_1583778752202_-1884923011","id":"paragraph_1563967260144_1380655934","dateCreated":"2020-03-09T18:32:32+0000","dateStarted":"2020-03-13T16:03:27+0000","dateFinished":"2020-03-13T16:03:27+0000","status":"FINISHED","$$hashKey":"object:212"},{"text":"%java\n\npublic static class PartialModelBuilder implements AllWindowFunction<Integer, Double[], TimeWindow> {\n    //private static final long serialVersionUID = 1L;\n    \n    protected Double[] buildPartialModel(Iterable<Integer> values) {\n        return new Double[]{1.00};\n    }\n    \n    @Override\n    public void apply(TimeWindow window, Iterable<Integer> values, Collector<Double[]> out) throws Exception {\n        out.collect(buildPartialModel(values));\n    }\n}\n","user":"anonymous","dateUpdated":"2020-03-13T16:03:30+0000","config":{"editorSetting":{"language":"java","editOnDblClick":false,"completionSupport":false},"colWidth":12,"editorMode":"ace/mode/java","fontSize":9,"editorHide":false,"runOnSelectionChange":true,"title":false,"checkEmpty":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"ERROR","msg":[{"type":"TEXT","data":"There isn't any class containing static main method."}]},"apps":[],"progressUpdateIntervalMs":500,"jobName":"paragraph_1583778752203_1952508611","id":"paragraph_1563988734673_1113250902","dateCreated":"2020-03-09T18:32:32+0000","dateStarted":"2020-03-13T16:03:30+0000","dateFinished":"2020-03-13T16:03:30+0000","status":"ERROR","$$hashKey":"object:213"},{"text":"%md\n### 4.c.i. Assign timestamps and watermarks by instanciating a new LinearTimestamp()","user":"anonymous","dateUpdated":"2020-03-13T16:09:24+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"runOnSelectionChange":true,"title":false,"checkEmpty":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h3>4.c.i. Assign timestamps and watermarks by instanciating a new LinearTimestamp()</h3>\n</div>"}]},"apps":[],"progressUpdateIntervalMs":500,"jobName":"paragraph_1583778752203_2005492031","id":"paragraph_1563988912176_453982358","dateCreated":"2020-03-09T18:32:32+0000","dateStarted":"2020-03-13T16:09:24+0000","dateFinished":"2020-03-13T16:09:24+0000","status":"FINISHED","$$hashKey":"object:214"},{"text":"%md\n### 4.c.ii. Assign a time window to the stream","user":"anonymous","dateUpdated":"2020-03-13T16:09:26+0000","config":{"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"runOnSelectionChange":true,"title":false,"checkEmpty":true,"results":{},"enabled":true,"editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h3>4.c.ii. Assign a time window to the stream</h3>\n</div>"}]},"apps":[],"progressUpdateIntervalMs":500,"jobName":"paragraph_1584115733213_1133451286","id":"paragraph_1584115733213_1133451286","dateCreated":"2020-03-13T16:08:53+0000","dateStarted":"2020-03-13T16:09:26+0000","dateFinished":"2020-03-13T16:09:26+0000","status":"FINISHED","$$hashKey":"object:215"},{"text":"%md\n### 4.c.iii. Finally we apply a new PartialModelBuilder()","user":"anonymous","dateUpdated":"2020-03-13T16:03:36+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"runOnSelectionChange":true,"title":false,"checkEmpty":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h3>4.c.iii. Finally we apply a new PartialModelBuilder()</h3>\n</div>"}]},"apps":[],"progressUpdateIntervalMs":500,"jobName":"paragraph_1583778752203_418763692","id":"paragraph_1563988966589_-2121820754","dateCreated":"2020-03-09T18:32:32+0000","dateStarted":"2020-03-13T16:03:36+0000","dateFinished":"2020-03-13T16:03:36+0000","status":"FINISHED","$$hashKey":"object:216"},{"text":"%md\n### 5.a. Now let’s use the partial new model to give prediction out of newData DataStream.\nSince the predictions are made out of 2 DataStreams (newData and model), we will need to join them. This will be performed with the **connect()** operation, which is a sort of join operation. We also need to write a **`Predictor`** class that implements the [CoMapFunction interface](https://ci.apache.org/projects/flink/flink-docs-master/api/java/org/apache/flink/streaming/api/functions/co/CoMapFunction.html). A CoFlatMapFunction implements a map() transformation over two connected streams. It has the following syntax:\n<center> **Interface CoMapFunction`<IN1,IN2,OUT>`** </center>\n**where:**\n- IN1 - Type of the first input.\n- IN2 - Type of the second input.\n- OUT - Output type.\n**We will give it:**\n- IN1 - an Integer (i.e. the value to predict)\n- IN2 - a Double[] (i.e. our model)\n- OUT - an Integer (i.e. the predicted value)\n**The CoFlatMapFunction needs 2 methods to be implemented:**\n- **OUT map1(IN1 value)**\nThis method is called for each element in the first of the connected streams.\n- **OUT map2(IN2 value)**\nThis method is called for each element in the second of the connected streams.\n\n**Our `Predictor` class will look like this:**\n    \n    public static class Predictor implements CoMapFunction<Integer, Double[], Integer> {\n        //private static final long serialVersionUID = 1L;\n        Double[] batchModel = null;\n        Double[] partialModel = null;\n        @Override\n        public Integer map1(Integer value) {\n            // Return newData\n            return predict(value);\n        }\n        @Override\n        public Integer map2(Double[] value) {\n            // Update model\n            partialModel = value;\n            batchModel = getBatchModel();\n            return 1;\n        }\n        // pulls model built with batch-job on the old training data\n        protected Double[] getBatchModel() {\n            return new Double[]{0.00};\n        }\n        // performs newData using the two models\n        protected Integer predict(Integer inTuple) {\n            return 0;\n        }\n    }","user":"anonymous","dateUpdated":"2020-03-13T16:03:37+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"runOnSelectionChange":true,"title":false,"checkEmpty":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h3>5.a. Now let’s use the partial new model to give prediction out of newData DataStream.</h3>\n<p>Since the predictions are made out of 2 DataStreams (newData and model), we will need to join them. This will be performed with the <strong>connect()</strong> operation, which is a sort of join operation. We also need to write a <strong><code>Predictor</code></strong> class that implements the <a href=\"https://ci.apache.org/projects/flink/flink-docs-master/api/java/org/apache/flink/streaming/api/functions/co/CoMapFunction.html\">CoMapFunction interface</a>. A CoFlatMapFunction implements a map() transformation over two connected streams. It has the following syntax:<br/><center> <strong>Interface CoMapFunction<code>&lt;IN1,IN2,OUT&gt;</code></strong> </center><br/><strong>where:</strong><br/>- IN1 - Type of the first input.<br/>- IN2 - Type of the second input.<br/>- OUT - Output type.<br/><strong>We will give it:</strong><br/>- IN1 - an Integer (i.e. the value to predict)<br/>- IN2 - a Double[] (i.e. our model)<br/>- OUT - an Integer (i.e. the predicted value)<br/><strong>The CoFlatMapFunction needs 2 methods to be implemented:</strong><br/>- <strong>OUT map1(IN1 value)</strong><br/>This method is called for each element in the first of the connected streams.<br/>- <strong>OUT map2(IN2 value)</strong><br/>This method is called for each element in the second of the connected streams.</p>\n<p><strong>Our <code>Predictor</code> class will look like this:</strong></p>\n<pre><code>public static class Predictor implements CoMapFunction&lt;Integer, Double[], Integer&gt; {\n    //private static final long serialVersionUID = 1L;\n    Double[] batchModel = null;\n    Double[] partialModel = null;\n    @Override\n    public Integer map1(Integer value) {\n        // Return newData\n        return predict(value);\n    }\n    @Override\n    public Integer map2(Double[] value) {\n        // Update model\n        partialModel = value;\n        batchModel = getBatchModel();\n        return 1;\n    }\n    // pulls model built with batch-job on the old training data\n    protected Double[] getBatchModel() {\n        return new Double[]{0.00};\n    }\n    // performs newData using the two models\n    protected Integer predict(Integer inTuple) {\n        return 0;\n    }\n}\n</code></pre>\n</div>"}]},"apps":[],"progressUpdateIntervalMs":500,"jobName":"paragraph_1583778752203_-990269719","id":"paragraph_1563967778019_-545608460","dateCreated":"2020-03-09T18:32:32+0000","dateStarted":"2020-03-13T16:03:37+0000","dateFinished":"2020-03-13T16:03:37+0000","status":"FINISHED","$$hashKey":"object:217"},{"text":"%md\n### 5.b. Back to the main class, we can finally call our Predictor","user":"anonymous","dateUpdated":"2020-03-13T16:03:40+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"runOnSelectionChange":true,"title":false,"checkEmpty":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h3>5.b. Back to the main class, we can finally call our Predictor</h3>\n</div>"}]},"apps":[],"progressUpdateIntervalMs":500,"jobName":"paragraph_1583778752203_-1078344956","id":"paragraph_1563967873243_-1025089182","dateCreated":"2020-03-09T18:32:32+0000","dateStarted":"2020-03-13T16:03:40+0000","dateFinished":"2020-03-13T16:03:41+0000","status":"FINISHED","$$hashKey":"object:218"},{"text":"%md\n### 6. Print predicitons","user":"anonymous","dateUpdated":"2020-03-13T16:03:42+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"runOnSelectionChange":true,"title":false,"checkEmpty":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h3>6. Print predicitons</h3>\n</div>"}]},"apps":[],"progressUpdateIntervalMs":500,"jobName":"paragraph_1583778752203_595739558","id":"paragraph_1563967908673_-849969190","dateCreated":"2020-03-09T18:32:32+0000","dateStarted":"2020-03-13T16:03:42+0000","dateFinished":"2020-03-13T16:03:42+0000","status":"FINISHED","$$hashKey":"object:219"},{"text":"%md\n### 7. Execute the program\n    \n### And we'll have a similar output\n![output3](http://193.191.169.12/img/streaming/output3.png)","user":"anonymous","dateUpdated":"2020-03-13T16:03:44+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"runOnSelectionChange":true,"title":false,"checkEmpty":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h3>7. Execute the program</h3>\n<h3>And we&rsquo;ll have a similar output</h3>\n<p><img src=\"http://193.191.169.12/img/streaming/output3.png\" alt=\"output3\" /></p>\n</div>"}]},"apps":[],"progressUpdateIntervalMs":500,"jobName":"paragraph_1583778752203_-1766520473","id":"paragraph_1563967924342_-1723299411","dateCreated":"2020-03-09T18:32:32+0000","dateStarted":"2020-03-13T16:03:44+0000","dateFinished":"2020-03-13T16:03:44+0000","status":"FINISHED","$$hashKey":"object:220"},{"text":"%md\n### We're done, the whole java program is the following","user":"anonymous","dateUpdated":"2020-03-13T16:03:45+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"runOnSelectionChange":true,"title":false,"checkEmpty":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h3>We&rsquo;re done, the whole java program is the following</h3>\n</div>"}]},"apps":[],"progressUpdateIntervalMs":500,"jobName":"paragraph_1583778752203_1922939867","id":"paragraph_1563990643942_1193195743","dateCreated":"2020-03-09T18:32:32+0000","dateStarted":"2020-03-13T16:03:45+0000","dateFinished":"2020-03-13T16:03:45+0000","status":"FINISHED","$$hashKey":"object:221"},{"text":"%java\n\nimport org.apache.flink.api.java.utils.ParameterTool;\nimport org.apache.flink.streaming.api.TimeCharacteristic;\nimport org.apache.flink.streaming.api.datastream.DataStream;\nimport org.apache.flink.streaming.api.environment.StreamExecutionEnvironment;\nimport org.apache.flink.streaming.api.functions.AssignerWithPunctuatedWatermarks;\nimport org.apache.flink.streaming.api.functions.co.CoMapFunction;\nimport org.apache.flink.streaming.api.functions.source.SourceFunction;\nimport org.apache.flink.streaming.api.functions.windowing.AllWindowFunction;\nimport org.apache.flink.streaming.api.watermark.Watermark;\nimport org.apache.flink.streaming.api.windowing.time.Time;\nimport org.apache.flink.streaming.api.windowing.windows.TimeWindow;\nimport org.apache.flink.util.Collector;\nimport java.util.concurrent.TimeUnit;\n\npublic class IncrementalLearningSkeleton {\n\n    public static void main(String[] args) throws Exception {\n    \n        //1. Set up the execution environment\n\t    final StreamExecutionEnvironment env = StreamExecutionEnvironment.getExecutionEnvironment();\n\t\t\n\t\t//2. Setting up the time characteristics\n        env.setStreamTimeCharacteristic(TimeCharacteristic.EventTime);\n\n        //3.c. Create training data datastream\n        DataStream<Integer> trainingData = env.addSource(new FiniteTrainingDataSource());\n        \n        //3.d. Create new data stream datastream\n        DataStream<Integer> newData = env.addSource(new FiniteNewDataSource());\n\n        //4.c. Build new model on every second of new data\n        DataStream<Double[]> model = trainingData\n                //4.c.i. Assign timestamps and watermarks by instanciating a new LinearTimestamp()\n                .assignTimestampsAndWatermarks(new LinearTimestamp())\n                //4.c.ii. Assign a time window to the stream\n                .timeWindowAll(Time.seconds(5))\n                //4.c.iii. Finally we apply a new PartialModelBuilder()\n                .apply(new PartialModelBuilder());\n\n        //5.b. use partial model for newData\n        DataStream<Integer> predictions = newData.connect(model).map(new Predictor());\n\n        //6 print results\n        predictions.print();\n        \n        //7. execute program\n        env.execute(\"Incremental Learning Skeleton\");\n        \n    }\n\n    // *************************************************************************\n    // USER FUNCTIONS\n    // *************************************************************************\n    \n    /**\n     * 3.a. Feeds new training data for the partial model builder. By default it is\n     * implemented as constantly emitting the Integer 1 in a loop.\n     */\n    public static class FiniteTrainingDataSource implements SourceFunction<Integer> {\n        //private static final long serialVersionUID = 1L;\n        private int counter = 0;\n\n        @Override\n        public void run(SourceContext<Integer> collector) throws Exception {\n            while (counter < 8200) {\n                collector.collect(getTrainingData());\n            }\n        }\n\n        @Override\n        public void cancel() {\n            // No cleanup needed\n        }\n\n        private Integer getTrainingData() throws InterruptedException {\n            counter++;\n            return 1;\n        }\n    }\n    \n    /**\n     * 3.b. Feeds new data for newData. By default it is implemented as constantly\n     * emitting the Integer 1 in a loop.\n     */\n    public static class FiniteNewDataSource implements SourceFunction<Integer> {\n        private static final long serialVersionUID = 1L;\n        private int counter;\n\n        @Override\n        public void run(SourceContext<Integer> ctx) throws Exception {\n            Thread.sleep(15);\n            while (counter < 50) {\n                ctx.collect(getNewData());\n            }\n        }\n\n        @Override\n        public void cancel() {\n            // No cleanup needed\n        }\n\n        private Integer getNewData() throws InterruptedException {\n            Thread.sleep(5);\n            counter++;\n            return 1;\n        }\n    }\n\n    /**\n     * 4.a. Feeds new data for newData. By default it is implemented as constantly\n     * emitting the Integer 1 in a loop.\n     */\n    private static class LinearTimestamp implements AssignerWithPunctuatedWatermarks<Integer> {\n        //private static final long serialVersionUID = 1L;\n\n        private long counter = 0L;\n\n        @Override\n        public long extractTimestamp(Integer element, long previousElementTimestamp) {\n            return counter += 10L;\n        }\n\n        @Override\n        public Watermark checkAndGetNextWatermark(Integer lastElement, long extractedTimestamp) {\n            return new Watermark(counter - 1);\n        }\n    }\n\n    /**\n     * 4.b. Builds up-to-date partial models on new training data.\n     */\n    public static class PartialModelBuilder implements AllWindowFunction<Integer, Double[], TimeWindow> {\n        //private static final long serialVersionUID = 1L;\n\n        protected Double[] buildPartialModel(Iterable<Integer> values) {\n            return new Double[]{1.00};\n        }\n\n        @Override\n        public void apply(TimeWindow window, Iterable<Integer> values, Collector<Double[]> out) throws Exception {\n            out.collect(buildPartialModel(values));\n        }\n    }\n\n    /** 5.a.\n     * Creates newData using the model produced in batch-processing and the\n     * up-to-date partial model.\n     * <p>\n     * By default emits the Integer 0 for every newData and the Integer 1\n     * for every model update.\n     * </p>\n     */\n    public static class Predictor implements CoMapFunction<Integer, Double[], Integer> {\n        //private static final long serialVersionUID = 1L;\n\n        Double[] batchModel = null;\n        Double[] partialModel = null;\n\n        @Override\n        public Integer map1(Integer value) {\n            // Return newData\n            return predict(value);\n        }\n\n        @Override\n        public Integer map2(Double[] value) {\n            // Update model\n            partialModel = value;\n            batchModel = getBatchModel();\n            return 1;\n        }\n\n        // pulls model built with batch-job on the old training data\n        protected Double[] getBatchModel() {\n            return new Double[]{0.00};\n        }\n\n        // performs newData using the two models\n        protected Integer predict(Integer inTuple) {\n            return 0;\n        }\n\n    }\n}","user":"anonymous","dateUpdated":"2020-03-23T09:49:54+0000","config":{"lineNumbers":true,"editorSetting":{"language":"java","editOnDblClick":false},"colWidth":12,"editorMode":"ace/mode/java","fontSize":9,"runOnSelectionChange":true,"title":false,"checkEmpty":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"2> 1\n5> 1\n4> 1\n3> 1\n6> 1\n2> 1\n3> 1\n4> 1\n1> 1\n5> 1\n2> 1\n3> 1\n6> 1\n4> 1\n5> 1\n6> 1\n1> 1\n1> 0\n5> 0\n1> 0\n6> 0\n5> 0\n3> 0\n6> 0\n2> 0\n4> 0\n2> 0\n4> 0\n1> 0\n3> 0\n4> 0\n3> 0\n4> 0\n3> 0\n4> 0\n3> 0\n1> 0\n1> 0\n5> 0\n5> 0\n6> 0\n5> 0\n6> 0\n2> 0\n6> 0\n2> 0\n2> 0\n1> 0\n5> 0\n1> 0\n5> 0\n1> 0\n5> 0\n3> 0\n5> 0\n3> 0\n3> 0\n4> 0\n4> 0\n2> 0\n4> 0\n2> 0\n4> 0\n2> 0\n6> 0\n6> 0\n6> 0\n"}]},"apps":[],"progressUpdateIntervalMs":500,"jobName":"paragraph_1583778752203_799469219","id":"paragraph_1562834820694_138041545","dateCreated":"2020-03-09T18:32:32+0000","dateStarted":"2020-03-23T09:49:54+0000","dateFinished":"2020-03-23T09:49:57+0000","status":"FINISHED","$$hashKey":"object:222"},{"text":"%md\n### When we submit the Flink job, we'll be able to see the DAG in the User Interface:\n![dag3](http://193.190.127.227/img/streaming/dag3.png)","user":"anonymous","dateUpdated":"2020-03-10T07:35:50+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"runOnSelectionChange":true,"title":false,"checkEmpty":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h3>When we submit the Flink job, we&rsquo;ll be able to see the DAG in the User Interface:</h3>\n<p><img src=\"http://193.190.127.227/img/streaming/dag3.png\" alt=\"dag3\" /></p>\n</div>"}]},"apps":[],"progressUpdateIntervalMs":500,"jobName":"paragraph_1583778752204_-29019162","id":"paragraph_1563968038844_-278192882","dateCreated":"2020-03-09T18:32:32+0000","dateStarted":"2020-03-10T07:35:50+0000","dateFinished":"2020-03-10T07:35:50+0000","status":"FINISHED","$$hashKey":"object:223"},{"text":"%md\n### Tasks:\n![tasks3](http://193.190.127.227/img/streaming/tasks3.png)","user":"anonymous","dateUpdated":"2020-03-10T07:35:54+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"runOnSelectionChange":true,"title":false,"checkEmpty":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h3>Tasks:</h3>\n<p><img src=\"http://193.190.127.227/img/streaming/tasks3.png\" alt=\"tasks3\" /></p>\n</div>"}]},"apps":[],"progressUpdateIntervalMs":500,"jobName":"paragraph_1583778752204_-1406146776","id":"paragraph_1563990508617_-570636428","dateCreated":"2020-03-09T18:32:32+0000","dateStarted":"2020-03-10T07:35:54+0000","dateFinished":"2020-03-10T07:35:54+0000","status":"FINISHED","$$hashKey":"object:224"},{"text":"%md\n\n## Exercise 3: WikiEdits (⭐⭐)\n\n- __Goal of the exercise__: shows the number of edits and the number of bytes changed made on Wikipedia per minute in real-time. Second part of the exercice groups the changes per user\n- __Skills__: \n    - *AggregateFunctions*\n    - *Accumulators*\n    - *Windowing*    \n    - *Kafka as a sink*\n- __Operations__: `addSource`, `apply`, `timeWindowAll`, `map`, `keyBy`, `timeWindow`, `timeWindowAll`, `collect`, `print`, `addSink`\n- __Functions__: `AllWindowFunction`, `AggregateFunction`","user":"anonymous","dateUpdated":"2020-03-13T16:15:11+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"runOnSelectionChange":true,"title":false,"checkEmpty":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h2>Exercise 3: WikiEdits (⭐⭐)</h2>\n<ul>\n  <li><strong>Goal of the exercise</strong>: shows the number of edits and the number of bytes changed made on Wikipedia per minute in real-time. Second part of the exercice groups the changes per user</li>\n  <li><strong>Skills</strong>:\n    <ul>\n      <li><em>AggregateFunctions</em></li>\n      <li><em>Accumulators</em></li>\n      <li><em>Windowing</em></li>\n      <li><em>Kafka as a sink</em></li>\n    </ul>\n  </li>\n  <li><strong>Operations</strong>: <code>addSource</code>, <code>apply</code>, <code>timeWindowAll</code>, <code>map</code>, <code>keyBy</code>, <code>timeWindow</code>, <code>timeWindowAll</code>, <code>collect</code>, <code>print</code>, <code>addSink</code></li>\n  <li><strong>Functions</strong>: <code>AllWindowFunction</code>, <code>AggregateFunction</code></li>\n</ul>\n</div>"}]},"apps":[],"progressUpdateIntervalMs":500,"jobName":"paragraph_1583778752204_-1135188267","id":"paragraph_1562835282778_-1394141628","dateCreated":"2020-03-09T18:32:32+0000","dateStarted":"2020-03-13T16:15:11+0000","dateFinished":"2020-03-13T16:15:11+0000","status":"FINISHED","$$hashKey":"object:225"},{"text":"%md\n## 3.A. Global edits\n### 1. First of all, we need to clean output directory from previous run\n        \n    String outputDirectory = \"./data/output/wikiEditsGlobalEdits\";\n    try {\n        File f = new File(outputDirectory);\n        if (f.exists()) {\n            FileUtils.cleanDirectory(f); //clean out directory (this is optional -- but good know)\n            FileUtils.forceDelete(f); //delete directory\n            FileUtils.forceMkdir(f); //create directory\n        }\n    } catch (IOException e) {\n        e.printStackTrace();\n    }","user":"anonymous","dateUpdated":"2020-03-13T16:15:57+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"runOnSelectionChange":true,"title":false,"checkEmpty":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h2>3.A. Global edits</h2>\n<h3>1. First of all, we need to clean output directory from previous run</h3>\n<pre><code>String outputDirectory = &quot;./data/output/wikiEditsGlobalEdits&quot;;\ntry {\n    File f = new File(outputDirectory);\n    if (f.exists()) {\n        FileUtils.cleanDirectory(f); //clean out directory (this is optional -- but good know)\n        FileUtils.forceDelete(f); //delete directory\n        FileUtils.forceMkdir(f); //create directory\n    }\n} catch (IOException e) {\n    e.printStackTrace();\n}\n</code></pre>\n</div>"}]},"apps":[],"progressUpdateIntervalMs":500,"jobName":"paragraph_1583778752204_1876460423","id":"paragraph_1564131831663_599326543","dateCreated":"2020-03-09T18:32:32+0000","dateStarted":"2020-03-13T16:15:57+0000","dateFinished":"2020-03-13T16:15:57+0000","status":"FINISHED","$$hashKey":"object:226"},{"text":"%md\n### 2. Next step is, as always, setting up the execution environment","user":"anonymous","dateUpdated":"2020-03-13T16:18:27+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"runOnSelectionChange":true,"title":false,"checkEmpty":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h3>2. Next step is, as always, setting up the execution environment</h3>\n</div>"}]},"apps":[],"progressUpdateIntervalMs":500,"jobName":"paragraph_1583778752204_-230727777","id":"paragraph_1564155908058_206253186","dateCreated":"2020-03-09T18:32:32+0000","dateStarted":"2020-03-13T16:18:27+0000","dateFinished":"2020-03-13T16:18:27+0000","status":"FINISHED","$$hashKey":"object:227"},{"text":"%java\n\nimport org.apache.flink.api.java.tuple.Tuple3;\nimport org.apache.flink.streaming.api.datastream.DataStream;\nimport org.apache.flink.streaming.api.environment.StreamExecutionEnvironment;\nimport org.apache.flink.streaming.api.functions.windowing.AllWindowFunction;\nimport org.apache.flink.streaming.api.windowing.time.Time;\nimport org.apache.flink.streaming.api.windowing.windows.TimeWindow;\nimport org.apache.flink.streaming.connectors.wikiedits.WikipediaEditEvent;\nimport org.apache.flink.streaming.connectors.wikiedits.WikipediaEditsSource;\nimport org.apache.flink.util.Collector;\nimport org.apache.commons.io.FileUtils;\nimport java.io.File;\nimport java.io.IOException;\nimport java.util.Date;\n\npublic class WikiEdits {\n    public static void main(String[] args) throws Exception {\n        \n        //1. Clean output directory from previous run\n        String outputDirectory = \"./data/output/wikiEditsGlobalEdits\";\n        try {\n            File f = new File(outputDirectory);\n            if (f.exists()) {\n                FileUtils.cleanDirectory(f); //clean out directory (this is optional -- but good know)\n                FileUtils.forceDelete(f); //delete directory\n                FileUtils.forceMkdir(f); //create directory\n            }\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n        \n        //2. TO-DO: Set up execution environment\n        //StreamExecutionEnvironment see = StreamExecutionEnvironment.getExecutionEnvironment();\n    }\n}","user":"anonymous","dateUpdated":"2020-03-13T16:18:56+0000","config":{"editorSetting":{"language":"java","editOnDblClick":false,"completionSupport":false},"colWidth":12,"editorMode":"ace/mode/java","fontSize":9,"runOnSelectionChange":true,"title":false,"checkEmpty":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[]},"apps":[],"progressUpdateIntervalMs":500,"jobName":"paragraph_1583778752204_1641504021","id":"paragraph_1564160014816_357058325","dateCreated":"2020-03-09T18:32:32+0000","dateStarted":"2020-03-13T16:18:28+0000","dateFinished":"2020-03-13T16:18:28+0000","status":"FINISHED","$$hashKey":"object:228"},{"text":"%md\n### 3. We will add the WikipediaEditsSource (which is a built-in Flink streaming connector) as a DataStream","user":"anonymous","dateUpdated":"2020-03-13T16:19:39+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"runOnSelectionChange":true,"title":false,"checkEmpty":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h3>3. We will add the WikipediaEditsSource (which is a built-in Flink streaming connector) as a DataStream</h3>\n</div>"}]},"apps":[],"progressUpdateIntervalMs":500,"jobName":"paragraph_1583778752204_1637722764","id":"paragraph_1564156813909_-616512028","dateCreated":"2020-03-09T18:32:32+0000","dateStarted":"2020-03-13T16:19:39+0000","dateFinished":"2020-03-13T16:19:39+0000","status":"FINISHED","$$hashKey":"object:229"},{"text":"%java\n\nimport org.apache.flink.api.java.tuple.Tuple3;\nimport org.apache.flink.streaming.api.datastream.DataStream;\nimport org.apache.flink.streaming.api.environment.StreamExecutionEnvironment;\nimport org.apache.flink.streaming.api.functions.windowing.AllWindowFunction;\nimport org.apache.flink.streaming.api.windowing.time.Time;\nimport org.apache.flink.streaming.api.windowing.windows.TimeWindow;\nimport org.apache.flink.streaming.connectors.wikiedits.WikipediaEditEvent;\nimport org.apache.flink.streaming.connectors.wikiedits.WikipediaEditsSource;\nimport org.apache.flink.util.Collector;\nimport org.apache.commons.io.FileUtils;\nimport java.io.File;\nimport java.io.IOException;\nimport java.util.Date;\n\npublic class WikiEdits {\n    public static void main(String[] args) throws Exception {\n        \n        //1. Clean output directory from previous run\n        String outputDirectory = \"./data/output/wikiEditsGlobalEdits\";\n        try {\n            File f = new File(outputDirectory);\n            if (f.exists()) {\n                FileUtils.cleanDirectory(f); //clean out directory (this is optional -- but good know)\n                FileUtils.forceDelete(f); //delete directory\n                FileUtils.forceMkdir(f); //create directory\n            }\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n        \n        //2. Set up execution environment\n        StreamExecutionEnvironment see = StreamExecutionEnvironment.getExecutionEnvironment();\n        \n        //3. TO-DO: Add the WikipediaEditsSource \n        DataStream<WikipediaEditEvent> edits = see.addSource(new WikipediaEditsSource());\n    }\n}","user":"anonymous","dateUpdated":"2020-03-13T16:19:40+0000","config":{"editorSetting":{"language":"java","editOnDblClick":false,"completionSupport":false},"colWidth":12,"editorMode":"ace/mode/java","fontSize":9,"runOnSelectionChange":true,"title":false,"checkEmpty":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[]},"apps":[],"progressUpdateIntervalMs":500,"jobName":"paragraph_1583778752204_43077523","id":"paragraph_1564160045079_1994474837","dateCreated":"2020-03-09T18:32:32+0000","dateStarted":"2020-03-13T16:19:40+0000","dateFinished":"2020-03-13T16:19:40+0000","status":"FINISHED","$$hashKey":"object:230"},{"text":"%md\n### 4. We will now apply a 1-minute window on our DataStream and count the changes \n**using the [AllWindowFunction interface](https://ci.apache.org/projects/flink/flink-docs-master/api/java/org/apache/flink/streaming/api/functions/windowing/AllWindowFunction.html) that extends the Window class. It has the following syntax:**\n<center> **Interface AllWindowFunction`<IN, OUT, W extends Window>`** </center>\n**where:**\n- IN - The type of the input value.\n- OUT - The type of the output value.\n- W - The type of Window that this window function can be applied on.\n**We will give it:**\n- a WikipediaEditEvent as input,\n- a Tuple3<Date,Long,Long> (i.e. the date aggregated by minute, number of edits and number of bytes changed) as output, and\n- a TimeWindow (i.e. the type of windowing we want to achieve).\n**As for the incremental learning exercise above, we need to implement the apply() method inside. It has the following syntax:**\n<center> **apply(W window, Iterable`<IN>` values, Collector`<OUT>` out)** </center>\n**where:**\n- window - The window that is being evaluated.\n- values - The elements in the window being evaluated.\n- out - A collector for emitting elements.\n\n**Skeleton:**\n        \n    edits\n        .timeWindowAll(Time.minutes(1))\n        .apply(new AllWindowFunction<???>() { ??? })\n        .print();","user":"anonymous","dateUpdated":"2020-03-09T18:32:32+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"runOnSelectionChange":true,"title":false,"checkEmpty":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h3>4. We will now apply a 1-minute window on our DataStream and count the changes</h3>\n<p><strong>using the <a href=\"https://ci.apache.org/projects/flink/flink-docs-master/api/java/org/apache/flink/streaming/api/functions/windowing/AllWindowFunction.html\">AllWindowFunction interface</a> that extends the Window class. It has the following syntax:</strong><br/><center> <strong>Interface AllWindowFunction<code>&lt;IN, OUT, W extends Window&gt;</code></strong> </center><br/><strong>where:</strong><br/>- IN - The type of the input value.<br/>- OUT - The type of the output value.<br/>- W - The type of Window that this window function can be applied on.<br/><strong>We will give it:</strong><br/>- a WikipediaEditEvent as input,<br/>- a Tuple3&lt;Date,Long,Long&gt; (i.e. the date aggregated by minute, number of edits and number of bytes changed) as output, and<br/>- a TimeWindow (i.e. the type of windowing we want to achieve).<br/><strong>As for the incremental learning exercise above, we need to implement the apply() method inside. It has the following syntax:</strong><br/><center> <strong>apply(W window, Iterable<code>&lt;IN&gt;</code> values, Collector<code>&lt;OUT&gt;</code> out)</strong> </center><br/><strong>where:</strong><br/>- window - The window that is being evaluated.<br/>- values - The elements in the window being evaluated.<br/>- out - A collector for emitting elements.</p>\n<p><strong>Skeleton:</strong></p>\n<pre><code>edits\n    .timeWindowAll(Time.minutes(1))\n    .apply(new AllWindowFunction&lt;???&gt;() { ??? })\n    .print();\n</code></pre>\n</div>"}]},"apps":[],"progressUpdateIntervalMs":500,"jobName":"paragraph_1583778752204_-599389380","id":"paragraph_1564156118083_32218689","dateCreated":"2020-03-09T18:32:32+0000","status":"READY","$$hashKey":"object:231"},{"text":"%md\n### 4.1. Let’s implement our `AllWindowFunction function`! Our code becomes:\n\n    edits\n        .timeWindowAll(Time.minutes(1))\n        .apply(new AllWindowFunction<WikipediaEditEvent, Tuple3<Date, Long, Long>, TimeWindow>() { ??? })\n        .print();\n","user":"anonymous","dateUpdated":"2020-03-09T18:32:32+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"runOnSelectionChange":true,"title":false,"checkEmpty":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h3>4.1. Let’s implement our <code>AllWindowFunction function</code>! Our code becomes:</h3>\n<pre><code>edits\n    .timeWindowAll(Time.minutes(1))\n    .apply(new AllWindowFunction&lt;WikipediaEditEvent, Tuple3&lt;Date, Long, Long&gt;, TimeWindow&gt;() { ??? })\n    .print();\n</code></pre>\n</div>"}]},"apps":[],"progressUpdateIntervalMs":500,"jobName":"paragraph_1583778752204_-490308908","id":"paragraph_1564155978186_144727761","dateCreated":"2020-03-09T18:32:32+0000","status":"READY","$$hashKey":"object:232"},{"text":"%md\n### 4.2. Our function needs to count the global number of edits made on Wikipedia as well as the number of bytes changed. \nLet’s do that by defining an **`apply`** method inside our AllWindowFunction function that will iterate over the WikipediaEvents and do the counting:\n\n    \n    edits\n        .timeWindowAll(Time.minutes(1))\n        .apply(new AllWindowFunction<WikipediaEditEvent, Tuple3<Date, Long, Long>, TimeWindow>() { \n            @Override\n            public void apply(TimeWindow timeWindow, Iterable<WikipediaEditEvent> iterable, Collector<Tuple3<Date,Long,Long>> collector) throws Exception {\n                ???\n            } \n        })\n        .print();","user":"anonymous","dateUpdated":"2020-03-09T18:32:32+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"runOnSelectionChange":true,"title":false,"checkEmpty":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h3>4.2. Our function needs to count the global number of edits made on Wikipedia as well as the number of bytes changed.</h3>\n<p>Let’s do that by defining an <strong><code>apply</code></strong> method inside our AllWindowFunction function that will iterate over the WikipediaEvents and do the counting:</p>\n<pre><code>edits\n    .timeWindowAll(Time.minutes(1))\n    .apply(new AllWindowFunction&lt;WikipediaEditEvent, Tuple3&lt;Date, Long, Long&gt;, TimeWindow&gt;() { \n        @Override\n        public void apply(TimeWindow timeWindow, Iterable&lt;WikipediaEditEvent&gt; iterable, Collector&lt;Tuple3&lt;Date,Long,Long&gt;&gt; collector) throws Exception {\n            ???\n        } \n    })\n    .print();\n</code></pre>\n</div>"}]},"apps":[],"progressUpdateIntervalMs":500,"jobName":"paragraph_1583778752204_-26560690","id":"paragraph_1564159173543_1437648527","dateCreated":"2020-03-09T18:32:32+0000","status":"READY","$$hashKey":"object:233"},{"text":"%md\n### 4.3. Count number of edits and changes","user":"anonymous","dateUpdated":"2020-03-09T18:32:32+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"runOnSelectionChange":true,"title":false,"checkEmpty":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h3>4.3. Count number of edits and changes</h3>\n</div>"}]},"apps":[],"progressUpdateIntervalMs":500,"jobName":"paragraph_1583778752204_-1929795298","id":"paragraph_1564159358601_-1408582244","dateCreated":"2020-03-09T18:32:32+0000","status":"READY","$$hashKey":"object:234"},{"text":"%md\n### 4.4. Window's end time by calling getEnd on our \"timeWindow\"","user":"anonymous","dateUpdated":"2020-03-09T18:32:32+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"runOnSelectionChange":true,"title":false,"checkEmpty":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h3>4.4. Window&rsquo;s end time by calling getEnd on our &ldquo;timeWindow&rdquo;</h3>\n</div>"}]},"apps":[],"progressUpdateIntervalMs":500,"jobName":"paragraph_1583778752204_1786274991","id":"paragraph_1564159666447_-409510733","dateCreated":"2020-03-09T18:32:32+0000","status":"READY","$$hashKey":"object:235"},{"text":"%md\n### 4.5. Collect a number of edits and window's end time","user":"anonymous","dateUpdated":"2020-03-09T18:32:32+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"runOnSelectionChange":true,"title":false,"checkEmpty":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h3>4.5. Collect a number of edits and window&rsquo;s end time</h3>\n</div>"}]},"apps":[],"progressUpdateIntervalMs":500,"jobName":"paragraph_1583778752204_982661256","id":"paragraph_1564159742103_-1650130519","dateCreated":"2020-03-09T18:32:32+0000","status":"READY","$$hashKey":"object:236"},{"text":"%java\n\nimport org.apache.flink.api.java.tuple.Tuple3;\nimport org.apache.flink.streaming.api.datastream.DataStream;\nimport org.apache.flink.streaming.api.environment.StreamExecutionEnvironment;\nimport org.apache.flink.streaming.api.functions.windowing.AllWindowFunction;\nimport org.apache.flink.streaming.api.windowing.time.Time;\nimport org.apache.flink.streaming.api.windowing.windows.TimeWindow;\nimport org.apache.flink.streaming.connectors.wikiedits.WikipediaEditEvent;\nimport org.apache.flink.streaming.connectors.wikiedits.WikipediaEditsSource;\nimport org.apache.flink.util.Collector;\nimport org.apache.commons.io.FileUtils;\nimport java.io.File;\nimport java.io.IOException;\nimport java.util.Date;\n\npublic class WikiEdits {\n    public static void main(String[] args) throws Exception {\n        \n        //1. Clean output directory from previous run\n        String outputDirectory = \"./data/output/wikiEditsGlobalEdits\";\n        try {\n            File f = new File(outputDirectory);\n            if (f.exists()) {\n                FileUtils.cleanDirectory(f); //clean out directory (this is optional -- but good know)\n                FileUtils.forceDelete(f); //delete directory\n                FileUtils.forceMkdir(f); //create directory\n            }\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n        \n        //2. Set up execution environment\n        StreamExecutionEnvironment see = StreamExecutionEnvironment.getExecutionEnvironment();\n        \n        //3. \n        DataStream<WikipediaEditEvent> edits = see.addSource(new WikipediaEditsSource());\n        \n        //4. apply a 1-minute window on our DataStream edits and count the changes\n        edits\n            .timeWindowAll(Time.seconds(10))\n            //4.1. Implementation of AllWindowFunction function\n            .apply(new AllWindowFunction<WikipediaEditEvent, Tuple3<Date, Long, Long>, TimeWindow>() {\n                \n                //4.2. Define an apply method that will iterate over the WikipediaEvents and do the counting\n                @Override\n                public void apply(TimeWindow timeWindow, Iterable<WikipediaEditEvent> iterable, Collector<Tuple3<Date, Long, Long>> collector) throws Exception {\n                    long count = 0;\n                    long bytesChanged = 0;\n                    \n                    //4.3. TO-DO: Count number of edits and changes\n                    for (WikipediaEditEvent event : iterable) {\n                        //increment the counts\n                        count++;\n                        //increment the \"bytesChanged\" by calling getByteDiff() on each \"event\"\n                        bytesChanged += event.getByteDiff();\n                    }\n                    \n                    //4.4. TO-DO: Window's end time by calling getEnd on our \"timeWindow\"\n                    Date timeWindowEnd = new Date(timeWindow.getEnd());\n                                                \n                    //4.5. TO-DO: Collect a number of edits and window's end time by applying the collect method on our collector\n                    collector.collect(new Tuple3<>(timeWindowEnd, count, bytesChanged));\n                    \n                }\n            });\n    }\n}","user":"anonymous","dateUpdated":"2020-03-13T16:32:39+0000","config":{"editorSetting":{"language":"java","editOnDblClick":false,"completionSupport":false},"colWidth":12,"editorMode":"ace/mode/java","fontSize":9,"runOnSelectionChange":true,"title":false,"checkEmpty":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[]},"apps":[],"progressUpdateIntervalMs":500,"jobName":"paragraph_1583778752204_2063755731","id":"paragraph_1564160198599_-1566249697","dateCreated":"2020-03-09T18:32:32+0000","dateStarted":"2020-03-13T16:32:39+0000","dateFinished":"2020-03-13T16:32:39+0000","status":"FINISHED","$$hashKey":"object:237"},{"text":"%md\n### 5.6. Since our source is infinite, our DataStream will never stop, so we need to put an end for streaming data from Wikipedia. \n**The intuition is to trigger an exception after 1 min of run so that we will be able to collect the output.**\n\n- Since our source is infinite, we trigger an exception after 1 min of run.\n        \n        Date now = new Date();\n\n    **Then we'll start the count from that moment:**\n        \n        Date end = now;\n        end.setMinutes(end.getMinutes()+1);\n\n- **5.6.ii. We trigger an exception after 1 min of run**\n    \n        if (timeWindowEnd.after(end)) {\n            throw new Exception(\"Triggered exception to quit our infinite DataStream. Don't panic.\");\n        }\n\n**The exception appears with this message \"Triggered exception to quit our infinite DataStream. Don't panic.\"**\n    \n![exception1](http://193.190.127.227/img/streaming/exception1.png)","user":"anonymous","dateUpdated":"2020-03-10T07:36:04+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"runOnSelectionChange":true,"title":false,"checkEmpty":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h3>5.6. Since our source is infinite, our DataStream will never stop, so we need to put an end for streaming data from Wikipedia.</h3>\n<p><strong>The intuition is to trigger an exception after 1 min of run so that we will be able to collect the output.</strong></p>\n<ul>\n  <li>\n    <p>Since our source is infinite, we trigger an exception after 1 min of run.</p>\n    <pre><code>Date now = new Date();\n</code></pre>\n    <p><strong>Then we&rsquo;ll start the count from that moment:</strong></p>\n    <pre><code>Date end = now;\nend.setMinutes(end.getMinutes()+1);\n</code></pre>\n  </li>\n  <li>\n    <p><strong>5.6.ii. We trigger an exception after 1 min of run</strong></p>\n    <pre><code>if (timeWindowEnd.after(end)) {\n    throw new Exception(&quot;Triggered exception to quit our infinite DataStream. Don&#39;t panic.&quot;);\n}\n</code></pre>\n  </li>\n</ul>\n<p><strong>The exception appears with this message &ldquo;Triggered exception to quit our infinite DataStream. Don&rsquo;t panic.&rdquo;</strong></p>\n<p><img src=\"http://193.190.127.227/img/streaming/exception1.png\" alt=\"exception1\" /></p>\n</div>"}]},"apps":[],"progressUpdateIntervalMs":500,"jobName":"paragraph_1583778752204_766479835","id":"paragraph_1564133766709_-210061870","dateCreated":"2020-03-09T18:32:32+0000","dateStarted":"2020-03-10T07:36:04+0000","dateFinished":"2020-03-10T07:36:04+0000","status":"FINISHED","$$hashKey":"object:238"},{"text":"%java\n\nimport org.apache.flink.api.java.tuple.Tuple3;\nimport org.apache.flink.streaming.api.datastream.DataStream;\nimport org.apache.flink.streaming.api.environment.StreamExecutionEnvironment;\nimport org.apache.flink.streaming.api.functions.windowing.AllWindowFunction;\nimport org.apache.flink.streaming.api.windowing.time.Time;\nimport org.apache.flink.streaming.api.windowing.windows.TimeWindow;\nimport org.apache.flink.streaming.connectors.wikiedits.WikipediaEditEvent;\nimport org.apache.flink.streaming.connectors.wikiedits.WikipediaEditsSource;\nimport org.apache.flink.util.Collector;\nimport org.apache.commons.io.FileUtils;\nimport java.io.File;\nimport java.io.IOException;\nimport java.util.Date;\n\npublic class WikiEdits {\n    public static void main(String[] args) throws Exception {\n        \n        //1. Clean output directory from previous run\n        String outputDirectory = \"./data/output/wikiEditsGlobalEdits\";\n        try {\n            File f = new File(outputDirectory);\n            if (f.exists()) {\n                FileUtils.cleanDirectory(f); //clean out directory (this is optional -- but good know)\n                FileUtils.forceDelete(f); //delete directory\n                FileUtils.forceMkdir(f); //create directory\n            }\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n        \n        //4.6.i. Setting an exception after 1 min of run\n        Date now = new Date();\n        Date end = now;\n        end.setMinutes(end.getMinutes()+1);\n        \n        //2. Set up execution environment\n        StreamExecutionEnvironment see = StreamExecutionEnvironment.getExecutionEnvironment();\n        \n        //3. \n        DataStream<WikipediaEditEvent> edits = see.addSource(new WikipediaEditsSource());\n        \n        //4.\n        edits\n            .timeWindowAll(Time.seconds(10))\n            //4.1.\n            .apply(new AllWindowFunction<WikipediaEditEvent, Tuple3<Date, Long, Long>, TimeWindow>() {\n                \n                //4.2.\n                @Override\n                public void apply(TimeWindow timeWindow, Iterable<WikipediaEditEvent> iterable, Collector<Tuple3<Date, Long, Long>> collector) throws Exception {\n                    long count = 0;\n                    long bytesChanged = 0;\n                    \n                    //4.3. Count number of edits and changes\n                    for (WikipediaEditEvent event : iterable) {\n                        count++;\n                        bytesChanged += event.getByteDiff();\n                    }\n                    \n                    //4.4. Window's end time\n                    Date timeWindowEnd = new Date(timeWindow.getEnd());\n                                                \n                    //4.5. Output a number of edits and window's end time\n                    collector.collect(new Tuple3<>(timeWindowEnd, count, bytesChanged));\n                    \n                    //4.6.ii. Triggered exception after 1 min of run\n                    if (timeWindowEnd.after(end)) {\n                        throw new Exception(\"Triggered exception to quit our infinite DataStream. Don't panic.\");\n                    }\n                }\n            });\n    }\n}","user":"anonymous","dateUpdated":"2020-03-13T16:33:12+0000","config":{"editorSetting":{"language":"java","editOnDblClick":false,"completionSupport":false},"colWidth":12,"editorMode":"ace/mode/java","fontSize":9,"runOnSelectionChange":true,"title":false,"checkEmpty":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[]},"apps":[],"progressUpdateIntervalMs":500,"jobName":"paragraph_1583778752204_750536346","id":"paragraph_1564160227106_1342685949","dateCreated":"2020-03-09T18:32:32+0000","dateStarted":"2020-03-13T16:33:12+0000","dateFinished":"2020-03-13T16:33:12+0000","status":"FINISHED","$$hashKey":"object:239"},{"text":"%md\n### 5. Let's write results to output directory","user":"anonymous","dateUpdated":"2020-03-09T18:32:32+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"runOnSelectionChange":true,"title":false,"checkEmpty":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h3>5. Let&rsquo;s write results to output directory</h3>\n</div>"}]},"apps":[],"progressUpdateIntervalMs":500,"jobName":"paragraph_1583778752204_625761668","id":"paragraph_1564159886227_266276768","dateCreated":"2020-03-09T18:32:32+0000","status":"READY","$$hashKey":"object:240"},{"text":"%md\n### 6. That’s it! Last step is the execution of our Flink program","user":"anonymous","dateUpdated":"2020-03-09T18:32:32+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"runOnSelectionChange":true,"title":false,"checkEmpty":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h3>6. That’s it! Last step is the execution of our Flink program</h3>\n</div>"}]},"apps":[],"progressUpdateIntervalMs":500,"jobName":"paragraph_1583778752205_1541758365","id":"paragraph_1564159932972_1827064422","dateCreated":"2020-03-09T18:32:32+0000","status":"READY","$$hashKey":"object:241"},{"text":"%java\n\nimport org.apache.flink.api.java.tuple.Tuple3;\nimport org.apache.flink.streaming.api.datastream.DataStream;\nimport org.apache.flink.streaming.api.environment.StreamExecutionEnvironment;\nimport org.apache.flink.streaming.api.functions.windowing.AllWindowFunction;\nimport org.apache.flink.streaming.api.windowing.time.Time;\nimport org.apache.flink.streaming.api.windowing.windows.TimeWindow;\nimport org.apache.flink.streaming.connectors.wikiedits.WikipediaEditEvent;\nimport org.apache.flink.streaming.connectors.wikiedits.WikipediaEditsSource;\nimport org.apache.flink.util.Collector;\nimport org.apache.commons.io.FileUtils;\nimport java.io.File;\nimport java.io.IOException;\nimport java.util.Date;\n\npublic class WikiEdits {\n    public static void main(String[] args) throws Exception {\n        \n        //1. Clean output directory from previous run\n        String outputDirectory = \"./data/output/wikiEditsGlobalEdits\";\n        try {\n            File f = new File(outputDirectory);\n            if (f.exists()) {\n                FileUtils.cleanDirectory(f); //clean out directory (this is optional -- but good know)\n                FileUtils.forceDelete(f); //delete directory\n                FileUtils.forceMkdir(f); //create directory\n            }\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n        \n        //4.6.i. Setting an exception after 1 min of run\n        Date now = new Date();\n        Date end = now;\n        end.setMinutes(end.getMinutes()+1);\n        \n        //2. Set up execution environment\n        StreamExecutionEnvironment see = StreamExecutionEnvironment.getExecutionEnvironment();\n        \n        //3. \n        DataStream<WikipediaEditEvent> edits = see.addSource(new WikipediaEditsSource());\n        \n        //4.\n        edits\n            .timeWindowAll(Time.seconds(10))\n            //4.1.\n            .apply(new AllWindowFunction<WikipediaEditEvent, Tuple3<Date, Long, Long>, TimeWindow>() {\n                \n                //4.2.\n                @Override\n                public void apply(TimeWindow timeWindow, Iterable<WikipediaEditEvent> iterable, Collector<Tuple3<Date, Long, Long>> collector) throws Exception {\n                    long count = 0;\n                    long bytesChanged = 0;\n                    \n                    //4.3. Count number of edits and changes\n                    for (WikipediaEditEvent event : iterable) {\n                        count++;\n                        bytesChanged += event.getByteDiff();\n                    }\n                    \n                    //4.4. Window's end time\n                    Date timeWindowEnd = new Date(timeWindow.getEnd());\n                                                \n                    //4.5. Output a number of edits and window's end time\n                    collector.collect(new Tuple3<>(timeWindowEnd, count, bytesChanged));\n                    \n                    //4.6.ii. Triggered exception after 1 min of run\n                    if (timeWindowEnd.after(end)) {\n                        throw new Exception(\"Triggered exception to quit our infinite DataStream. Don't panic.\");\n                    }\n                }\n            })\n            //5. TO-DO: write results to output directory\n            .writeAsText(outputDirectory);\n            \n        //6. TO-DO: execute program\n        see.execute(\"WikiEdits\");\n    }\n}","user":"anonymous","dateUpdated":"2020-03-13T16:33:46+0000","config":{"editorSetting":{"language":"java","editOnDblClick":false,"completionSupport":false},"colWidth":12,"editorMode":"ace/mode/java","fontSize":9,"runOnSelectionChange":true,"title":false,"checkEmpty":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"ERROR","msg":[{"type":"TEXT","data":"java.lang.reflect.InvocationTargetException\njava.lang.reflect.InvocationTargetException\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.apache.zeppelin.java.StaticRepl.execute(StaticRepl.java:137)\n\tat org.apache.zeppelin.java.JavaInterpreter.interpret(JavaInterpreter.java:65)\n\tat org.apache.zeppelin.interpreter.LazyOpenInterpreter.interpret(LazyOpenInterpreter.java:103)\n\tat org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer$InterpretJob.jobRun(RemoteInterpreterServer.java:673)\n\tat org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer$InterpretJob.jobRun(RemoteInterpreterServer.java:566)\n\tat org.apache.zeppelin.scheduler.Job.run(Job.java:172)\n\tat org.apache.zeppelin.scheduler.AbstractScheduler.runJob(AbstractScheduler.java:121)\n\tat org.apache.zeppelin.scheduler.FIFOScheduler.lambda$runJobInScheduler$0(FIFOScheduler.java:39)\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\n\tat java.lang.Thread.run(Thread.java:748)\nCaused by: org.apache.flink.runtime.client.JobExecutionException: Job execution failed.\n\tat org.apache.flink.runtime.jobmaster.JobResult.toJobExecutionResult(JobResult.java:146)\n\tat org.apache.flink.runtime.minicluster.MiniCluster.executeJobBlocking(MiniCluster.java:638)\n\tat org.apache.flink.streaming.api.environment.LocalStreamEnvironment.execute(LocalStreamEnvironment.java:123)\n\tat C1fc6fba40dc642d5944c431ef7bae1ea.main(C1fc6fba40dc642d5944c431ef7bae1ea.java:76)\n\t... 15 more\nCaused by: TimerException{java.lang.Exception: Triggered exception to quit our infinite DataStream. Don't panic.}\n\tat org.apache.flink.streaming.runtime.tasks.SystemProcessingTimeService$TriggerTask.run(SystemProcessingTimeService.java:288)\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\n\t... 3 more\nCaused by: java.lang.Exception: Triggered exception to quit our infinite DataStream. Don't panic.\n\tat C1fc6fba40dc642d5944c431ef7bae1ea$1.apply(C1fc6fba40dc642d5944c431ef7bae1ea.java:68)\n\tat C1fc6fba40dc642d5944c431ef7bae1ea$1.apply(C1fc6fba40dc642d5944c431ef7bae1ea.java:46)\n\tat org.apache.flink.streaming.runtime.operators.windowing.functions.InternalIterableAllWindowFunction.process(InternalIterableAllWindowFunction.java:44)\n\tat org.apache.flink.streaming.runtime.operators.windowing.functions.InternalIterableAllWindowFunction.process(InternalIterableAllWindowFunction.java:32)\n\tat org.apache.flink.streaming.runtime.operators.windowing.WindowOperator.emitWindowContents(WindowOperator.java:546)\n\tat org.apache.flink.streaming.runtime.operators.windowing.WindowOperator.onProcessingTime(WindowOperator.java:500)\n\tat org.apache.flink.streaming.api.operators.InternalTimerServiceImpl.onProcessingTime(InternalTimerServiceImpl.java:239)\n\tat org.apache.flink.streaming.runtime.tasks.SystemProcessingTimeService$TriggerTask.run(SystemProcessingTimeService.java:285)\n\t... 7 more\n"}]},"apps":[],"progressUpdateIntervalMs":500,"jobName":"paragraph_1583778752205_-1892747395","id":"paragraph_1564160247462_-957245936","dateCreated":"2020-03-09T18:32:32+0000","dateStarted":"2020-03-13T16:33:46+0000","dateFinished":"2020-03-13T16:34:50+0000","status":"ERROR","$$hashKey":"object:242"},{"text":"%md\n### We're done with the first part `Global Edits`. Our whole java program is the following:","user":"anonymous","dateUpdated":"2020-03-09T18:32:32+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"runOnSelectionChange":true,"title":false,"checkEmpty":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h3>We&rsquo;re done with the first part <code>Global Edits</code>. Our whole java program is the following:</h3>\n</div>"}]},"apps":[],"progressUpdateIntervalMs":500,"jobName":"paragraph_1583778752205_59523153","id":"paragraph_1564160302255_1378868856","dateCreated":"2020-03-09T18:32:32+0000","status":"READY","$$hashKey":"object:243"},{"text":"%java\n\nimport org.apache.flink.api.java.tuple.Tuple3;\nimport org.apache.flink.streaming.api.datastream.DataStream;\nimport org.apache.flink.streaming.api.environment.StreamExecutionEnvironment;\nimport org.apache.flink.streaming.api.functions.windowing.AllWindowFunction;\nimport org.apache.flink.streaming.api.windowing.time.Time;\nimport org.apache.flink.streaming.api.windowing.windows.TimeWindow;\nimport org.apache.flink.streaming.connectors.wikiedits.WikipediaEditEvent;\nimport org.apache.flink.streaming.connectors.wikiedits.WikipediaEditsSource;\nimport org.apache.flink.util.Collector;\nimport org.apache.commons.io.FileUtils;\nimport java.io.File;\nimport java.io.IOException;\nimport java.util.Date;\n\npublic class WikiEdits {\n    public static void main(String[] args) throws Exception {\n        \n        //1. Clean output directory from previous run\n        String outputDirectory = \"./data/output/wikiEditsGlobalEdits\";\n        try {\n            File f = new File(outputDirectory);\n            if (f.exists()) {\n                FileUtils.cleanDirectory(f); //clean out directory (this is optional -- but good know)\n                FileUtils.forceDelete(f); //delete directory\n                FileUtils.forceMkdir(f); //create directory\n            }\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n        \n        //4.6.i. Setting an exception after 1 min of run\n        Date now = new Date();\n        Date end = now;\n        end.setMinutes(end.getMinutes()+1);\n        \n        //2. Set up execution environment\n        StreamExecutionEnvironment see = StreamExecutionEnvironment.getExecutionEnvironment();\n        \n        //3. \n        DataStream<WikipediaEditEvent> edits = see.addSource(new WikipediaEditsSource());\n        \n        //4.\n        edits\n            .timeWindowAll(Time.seconds(10))\n            //4.1.\n            .apply(new AllWindowFunction<WikipediaEditEvent, Tuple3<Date, Long, Long>, TimeWindow>() {\n                \n                //4.2.\n                @Override\n                public void apply(TimeWindow timeWindow, Iterable<WikipediaEditEvent> iterable, Collector<Tuple3<Date, Long, Long>> collector) throws Exception {\n                    long count = 0;\n                    long bytesChanged = 0;\n                    \n                    //4.3. Count number of edits and changes\n                    for (WikipediaEditEvent event : iterable) {\n                        count++;\n                        bytesChanged += event.getByteDiff();\n                    }\n                    \n                    //4.4. Window's end time\n                    Date timeWindowEnd = new Date(timeWindow.getEnd());\n                                                \n                    //4.5. Output a number of edits and window's end time\n                    collector.collect(new Tuple3<>(timeWindowEnd, count, bytesChanged));\n                    \n                    //4.6.ii. Triggered exception after 1 min of run\n                    if (timeWindowEnd.after(end)) {\n                        throw new Exception(\"Triggered exception to quit our infinite DataStream. Don't panic.\");\n                    }\n                }\n            })\n            //5. write results to output directory\n            .writeAsText(outputDirectory);\n            \n        //6.\n        see.execute();\n    }\n}","user":"anonymous","dateUpdated":"2020-03-13T16:39:15+0000","config":{"lineNumbers":true,"editorSetting":{"language":"java","editOnDblClick":false,"completionSupport":false},"colWidth":12,"editorMode":"ace/mode/java","fontSize":9,"runOnSelectionChange":true,"title":false,"checkEmpty":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"ERROR","msg":[{"type":"TEXT","data":"java.lang.reflect.InvocationTargetException\njava.lang.reflect.InvocationTargetException\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.apache.zeppelin.java.StaticRepl.execute(StaticRepl.java:137)\n\tat org.apache.zeppelin.java.JavaInterpreter.interpret(JavaInterpreter.java:65)\n\tat org.apache.zeppelin.interpreter.LazyOpenInterpreter.interpret(LazyOpenInterpreter.java:103)\n\tat org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer$InterpretJob.jobRun(RemoteInterpreterServer.java:673)\n\tat org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer$InterpretJob.jobRun(RemoteInterpreterServer.java:566)\n\tat org.apache.zeppelin.scheduler.Job.run(Job.java:172)\n\tat org.apache.zeppelin.scheduler.AbstractScheduler.runJob(AbstractScheduler.java:121)\n\tat org.apache.zeppelin.scheduler.FIFOScheduler.lambda$runJobInScheduler$0(FIFOScheduler.java:39)\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\n\tat java.lang.Thread.run(Thread.java:748)\nCaused by: org.apache.flink.runtime.client.JobExecutionException: Job execution failed.\n\tat org.apache.flink.runtime.jobmaster.JobResult.toJobExecutionResult(JobResult.java:146)\n\tat org.apache.flink.runtime.minicluster.MiniCluster.executeJobBlocking(MiniCluster.java:638)\n\tat org.apache.flink.streaming.api.environment.LocalStreamEnvironment.execute(LocalStreamEnvironment.java:123)\n\tat org.apache.flink.streaming.api.environment.StreamExecutionEnvironment.execute(StreamExecutionEnvironment.java:1509)\n\tat Cc727ea8f8c7e459ca08eb3e77fc7b028.main(Cc727ea8f8c7e459ca08eb3e77fc7b028.java:76)\n\t... 15 more\nCaused by: TimerException{java.lang.Exception: Triggered exception to quit our infinite DataStream. Don't panic.}\n\tat org.apache.flink.streaming.runtime.tasks.SystemProcessingTimeService$TriggerTask.run(SystemProcessingTimeService.java:288)\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\n\t... 3 more\nCaused by: java.lang.Exception: Triggered exception to quit our infinite DataStream. Don't panic.\n\tat Cc727ea8f8c7e459ca08eb3e77fc7b028$1.apply(Cc727ea8f8c7e459ca08eb3e77fc7b028.java:68)\n\tat Cc727ea8f8c7e459ca08eb3e77fc7b028$1.apply(Cc727ea8f8c7e459ca08eb3e77fc7b028.java:46)\n\tat org.apache.flink.streaming.runtime.operators.windowing.functions.InternalIterableAllWindowFunction.process(InternalIterableAllWindowFunction.java:44)\n\tat org.apache.flink.streaming.runtime.operators.windowing.functions.InternalIterableAllWindowFunction.process(InternalIterableAllWindowFunction.java:32)\n\tat org.apache.flink.streaming.runtime.operators.windowing.WindowOperator.emitWindowContents(WindowOperator.java:546)\n\tat org.apache.flink.streaming.runtime.operators.windowing.WindowOperator.onProcessingTime(WindowOperator.java:500)\n\tat org.apache.flink.streaming.api.operators.InternalTimerServiceImpl.onProcessingTime(InternalTimerServiceImpl.java:239)\n\tat org.apache.flink.streaming.runtime.tasks.SystemProcessingTimeService$TriggerTask.run(SystemProcessingTimeService.java:285)\n\t... 7 more\n"}]},"apps":[],"progressUpdateIntervalMs":500,"jobName":"paragraph_1583778752205_1790926404","id":"paragraph_1564136683344_-2067966761","dateCreated":"2020-03-09T18:32:32+0000","dateStarted":"2020-03-13T16:39:16+0000","dateFinished":"2020-03-13T16:40:20+0000","status":"ERROR","$$hashKey":"object:244"},{"text":"%md\n### Output: We just need to run this code that reads, from our output directory, the results (timeWindowEnd, count, bytesChanged)\n![output3A](http://193.190.127.227/img/streaming/output3A.png)","user":"anonymous","dateUpdated":"2020-03-10T07:37:03+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"runOnSelectionChange":true,"title":false,"checkEmpty":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h3>Output: We just need to run this code that reads, from our output directory, the results (timeWindowEnd, count, bytesChanged)</h3>\n<p><img src=\"http://193.190.127.227/img/streaming/output3A.png\" alt=\"output3A\" /></p>\n</div>"}]},"apps":[],"progressUpdateIntervalMs":500,"jobName":"paragraph_1583778752205_623778616","id":"paragraph_1563365244360_1729312576","dateCreated":"2020-03-09T18:32:32+0000","dateStarted":"2020-03-10T07:37:03+0000","dateFinished":"2020-03-10T07:37:03+0000","status":"FINISHED","$$hashKey":"object:245"},{"text":"%java\n\nimport java.io.File;\nimport java.util.Scanner; \n\npublic class ReadWikiEditsOutput {\n\n    public static void main(String[] args) throws Exception {\n        String outputDirectory = \n        File f = new File(outputDirectory);\n        if (f.exists()) {\n            // Loop on the 8 tasks slots\n            for (int i = 1; i < 9; ++i){\n                File file = new File(outputDirectory + \"/\" + i); \n                Scanner sc = new Scanner(file);\n                \n                while (sc.hasNextLine()) { \n                    System.out.println(sc.nextLine());\n                }\n            }\n        }\n        else {\n            System.out.println(\"Please run the above paragraph to write to output directory.\");\n        }\n    }\n}","user":"anonymous","dateUpdated":"2020-03-13T16:44:00+0000","config":{"lineNumbers":true,"editorSetting":{"language":"java","editOnDblClick":false},"colWidth":12,"editorMode":"ace/mode/java","fontSize":9,"runOnSelectionChange":true,"title":false,"checkEmpty":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"ERROR","msg":[{"type":"TEXT","data":"java.lang.reflect.InvocationTargetException\njava.lang.reflect.InvocationTargetException\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.apache.zeppelin.java.StaticRepl.execute(StaticRepl.java:137)\n\tat org.apache.zeppelin.java.JavaInterpreter.interpret(JavaInterpreter.java:65)\n\tat org.apache.zeppelin.interpreter.LazyOpenInterpreter.interpret(LazyOpenInterpreter.java:103)\n\tat org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer$InterpretJob.jobRun(RemoteInterpreterServer.java:673)\n\tat org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer$InterpretJob.jobRun(RemoteInterpreterServer.java:566)\n\tat org.apache.zeppelin.scheduler.Job.run(Job.java:172)\n\tat org.apache.zeppelin.scheduler.AbstractScheduler.runJob(AbstractScheduler.java:121)\n\tat org.apache.zeppelin.scheduler.FIFOScheduler.lambda$runJobInScheduler$0(FIFOScheduler.java:39)\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\n\tat java.lang.Thread.run(Thread.java:748)\nCaused by: java.io.FileNotFoundException: ./data/output/wikiEditsGlobalEdits/7 (No such file or directory)\n\tat java.io.FileInputStream.open0(Native Method)\n\tat java.io.FileInputStream.open(FileInputStream.java:195)\n\tat java.io.FileInputStream.<init>(FileInputStream.java:138)\n\tat java.util.Scanner.<init>(Scanner.java:611)\n\tat C58f2f5e8848840d8a3c447134a9f6602.main(C58f2f5e8848840d8a3c447134a9f6602.java:13)\n\t... 15 more\n"}]},"apps":[],"progressUpdateIntervalMs":500,"jobName":"paragraph_1583778752205_2144291095","id":"paragraph_1563357050709_-1076560157","dateCreated":"2020-03-09T18:32:32+0000","dateStarted":"2020-03-13T16:43:06+0000","dateFinished":"2020-03-13T16:44:00+0000","status":"ERROR","$$hashKey":"object:246"},{"text":"%md\n### Operations summary:\n\n1. edits = environment. **addSource**(WikiEvent)\n2. edits. **apply(AllWindowFunction)**\n\n### Our DAG looks like:\n\n![dag3A](http://193.190.127.227/img/streaming/dag3A.png)","user":"anonymous","dateUpdated":"2020-03-10T07:36:11+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"runOnSelectionChange":true,"title":false,"checkEmpty":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h3>Operations summary:</h3>\n<ol>\n  <li>edits = environment. <strong>addSource</strong>(WikiEvent)</li>\n  <li>edits. <strong>apply(AllWindowFunction)</strong></li>\n</ol>\n<h3>Our DAG looks like:</h3>\n<p><img src=\"http://193.190.127.227/img/streaming/dag3A.png\" alt=\"dag3A\" /></p>\n</div>"}]},"apps":[],"progressUpdateIntervalMs":500,"jobName":"paragraph_1583778752205_-150837312","id":"paragraph_1564161648014_1645220049","dateCreated":"2020-03-09T18:32:32+0000","dateStarted":"2020-03-10T07:36:11+0000","dateFinished":"2020-03-10T07:36:11+0000","status":"FINISHED","$$hashKey":"object:247"},{"text":"%md\n## 3.B. Edits per user:\n**Now, let’s say we want the number of edits and the number of bytes changed per user.**\n\n### 1. First of all, we need to clean output directory from previous run\n        \n    String outputDirectory = \"./data/output/wikiEditsGlobalEdits\";\n    try {\n        File f = new File(outputDirectory);\n        if (f.exists()) {\n            FileUtils.cleanDirectory(f); //clean out directory (this is optional -- but good know)\n            FileUtils.forceDelete(f); //delete directory\n            FileUtils.forceMkdir(f); //create directory\n        }\n    } catch (IOException e) {\n        e.printStackTrace();\n    }\n### 2. Next step is, as always, setting up the execution environment\n    StreamExecutionEnvironment see = StreamExecutionEnvironment.getExecutionEnvironment();\n### 3. We will add the WikipediaEditsSource (which is a built-in Flink streaming connector) as a DataStream\n    DataStream<WikipediaEditEvent> edits = see.addSource(new WikipediaEditsSource());","user":"anonymous","dateUpdated":"2020-03-09T18:32:32+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"runOnSelectionChange":true,"title":false,"checkEmpty":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h2>3.B. Edits per user:</h2>\n<p><strong>Now, let’s say we want the number of edits and the number of bytes changed per user.</strong></p>\n<h3>1. First of all, we need to clean output directory from previous run</h3>\n<pre><code>String outputDirectory = &quot;./data/output/wikiEditsGlobalEdits&quot;;\ntry {\n    File f = new File(outputDirectory);\n    if (f.exists()) {\n        FileUtils.cleanDirectory(f); //clean out directory (this is optional -- but good know)\n        FileUtils.forceDelete(f); //delete directory\n        FileUtils.forceMkdir(f); //create directory\n    }\n} catch (IOException e) {\n    e.printStackTrace();\n}\n</code></pre>\n<h3>2. Next step is, as always, setting up the execution environment</h3>\n<pre><code>StreamExecutionEnvironment see = StreamExecutionEnvironment.getExecutionEnvironment();\n</code></pre>\n<h3>3. We will add the WikipediaEditsSource (which is a built-in Flink streaming connector) as a DataStream</h3>\n<pre><code>DataStream&lt;WikipediaEditEvent&gt; edits = see.addSource(new WikipediaEditsSource());\n</code></pre>\n</div>"}]},"apps":[],"progressUpdateIntervalMs":500,"jobName":"paragraph_1583778752205_1627565910","id":"paragraph_1562839453212_631511746","dateCreated":"2020-03-09T18:32:32+0000","status":"READY","$$hashKey":"object:248"},{"text":"%md\n### 4. Instead of setting a regular DataStream, we’ll have to set a KeyedStream where the user would be the key:\n    KeyedStream<WikipediaEditEvent, String> keyedEdits = edits\n        .keyBy((KeySelector<WikipediaEditEvent, String>) event -> event.getUser());","user":"anonymous","dateUpdated":"2020-03-09T18:32:32+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"runOnSelectionChange":true,"title":false,"checkEmpty":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h3>4. Instead of setting a regular DataStream, we’ll have to set a KeyedStream where the user would be the key:</h3>\n<pre><code>KeyedStream&lt;WikipediaEditEvent, String&gt; keyedEdits = edits\n    .keyBy((KeySelector&lt;WikipediaEditEvent, String&gt;) event -&gt; event.getUser());\n</code></pre>\n</div>"}]},"apps":[],"progressUpdateIntervalMs":500,"jobName":"paragraph_1583778752205_-1904406017","id":"paragraph_1564396977333_471305685","dateCreated":"2020-03-09T18:32:32+0000","status":"READY","$$hashKey":"object:249"},{"text":"%md\n### 5. Let’s now transform this KeyedStream into a DataStream using the [AggregateFunction interface](https://ci.apache.org/projects/flink/flink-docs-master/api/java/index.html?org/apache/flink/api/common/functions/AggregateFunction.html). It has the following syntax:\n**<center> Interface AggregateFunction`<IN,ACC,OUT>`</center>**\n**where:**\n- IN - The type of the values that are aggregated (input values)\n- ACC - The type of the accumulator (intermediate aggregate state).\n- OUT - The type of the aggregated result\n**We will give it:**\n- IN: our WikipediaEditEvent,\n- ACC: a Tuple3<Date, String, Long> (i.e. the date aggregated by minute, the user name, the number of bytes edited),\n- OUT: a Tuple3<Date, String, Long> (i.e. the date aggregated by minute, the user name, the number of bytes edited).\n\n| ![space-1.jpg](http://193.190.127.227/img/flink/fig5.png) | \n|:--:| \n| *Fig. 5: Aggregate Function (Source: Flink doc.).* |","user":"anonymous","dateUpdated":"2020-03-10T07:36:15+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"runOnSelectionChange":true,"title":false,"checkEmpty":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h3>5. Let’s now transform this KeyedStream into a DataStream using the <a href=\"https://ci.apache.org/projects/flink/flink-docs-master/api/java/index.html?org/apache/flink/api/common/functions/AggregateFunction.html\">AggregateFunction interface</a>. It has the following syntax:</h3>\n<p><strong><center> Interface AggregateFunction<code>&lt;IN,ACC,OUT&gt;</code></center></strong><br/><strong>where:</strong><br/>- IN - The type of the values that are aggregated (input values)<br/>- ACC - The type of the accumulator (intermediate aggregate state).<br/>- OUT - The type of the aggregated result<br/><strong>We will give it:</strong><br/>- IN: our WikipediaEditEvent,<br/>- ACC: a Tuple3&lt;Date, String, Long&gt; (i.e. the date aggregated by minute, the user name, the number of bytes edited),<br/>- OUT: a Tuple3&lt;Date, String, Long&gt; (i.e. the date aggregated by minute, the user name, the number of bytes edited).</p>\n<table>\n  <thead>\n    <tr>\n      <th align=\"center\"><img src=\"http://193.190.127.227/img/flink/fig5.png\" alt=\"space-1.jpg\" /> </th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td align=\"center\"><em>Fig. 5: Aggregate Function (Source: Flink doc.).</em> </td>\n    </tr>\n  </tbody>\n</table>\n</div>"}]},"apps":[],"progressUpdateIntervalMs":500,"jobName":"paragraph_1583778752205_526273047","id":"paragraph_1564395369517_-207453714","dateCreated":"2020-03-09T18:32:32+0000","dateStarted":"2020-03-10T07:36:15+0000","dateFinished":"2020-03-10T07:36:15+0000","status":"FINISHED","$$hashKey":"object:250"},{"text":"%md\n### User-defined aggregation functions works as follows:\n1.  First, it needs an **accumulator**, which is a data structure that holds the intermediate results of the aggregation. It is initialized with the **createAccumulator()** method.\n2.  Secondly, the **accumulate()** method of the function is called for each input row to update the accumulator.\n3.  Once all rows have been processed, the **getValue()** method is called to compute and return the final result.\nSome additional methods might also be required depending on the use case, such as **merge()** for the session window aggregations (we will need it here).\nTaking that into consideration, let's implement our aggregate function.\nWe will take our (keyedEdits) keyed stream and generate a new DataStream out of it while making it pass through our aggregation function.\nThe skeleton of our aggregation function looks like this:\n\n    \n        DataStream<Tuple3<Date, String, Long>> result = keyedEdits\n            .timeWindow(Time.minutes(1))\n            .aggregate(new AggregateFunction<WikipediaEditEvent, Tuple3<Date, String, Long>, Tuple3<Date, String, Long>>() {\n                @Override\n                public Tuple3<Date, String, Long> createAccumulator() {\n                    //5.1. ????????\n                }\n                @Override\n                public Tuple3<Date, String, Long> add(WikipediaEditEvent value, Tuple3<Date, String, Long> accumulator) {\n                    //5.2. ????????\n                }\n                @Override\n                public Tuple3<Date, String, Long> getResult(Tuple3<Date, String, Long> accumulator) {\n                    //5.3. ????????\n                }\n                @Override\n                public Tuple3<Date, String, Long> merge(Tuple3<Date, String, Long> a, Tuple3<Date, String, Long> b) {\n                    //5.4. ????????\n                }","user":"anonymous","dateUpdated":"2020-03-09T18:32:32+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"runOnSelectionChange":true,"title":false,"checkEmpty":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h3>User-defined aggregation functions works as follows:</h3>\n<ol>\n  <li>First, it needs an <strong>accumulator</strong>, which is a data structure that holds the intermediate results of the aggregation. It is initialized with the <strong>createAccumulator()</strong> method.</li>\n  <li>Secondly, the <strong>accumulate()</strong> method of the function is called for each input row to update the accumulator.</li>\n  <li>Once all rows have been processed, the <strong>getValue()</strong> method is called to compute and return the final result.<br/>Some additional methods might also be required depending on the use case, such as <strong>merge()</strong> for the session window aggregations (we will need it here).<br/>Taking that into consideration, let&rsquo;s implement our aggregate function.<br/>We will take our (keyedEdits) keyed stream and generate a new DataStream out of it while making it pass through our aggregation function.<br/>The skeleton of our aggregation function looks like this:\n    <pre><code>DataStream&lt;Tuple3&lt;Date, String, Long&gt;&gt; result = keyedEdits\n    .timeWindow(Time.minutes(1))\n    .aggregate(new AggregateFunction&lt;WikipediaEditEvent, Tuple3&lt;Date, String, Long&gt;, Tuple3&lt;Date, String, Long&gt;&gt;() {\n        @Override\n        public Tuple3&lt;Date, String, Long&gt; createAccumulator() {\n            //5.1. ????????\n        }\n        @Override\n        public Tuple3&lt;Date, String, Long&gt; add(WikipediaEditEvent value, Tuple3&lt;Date, String, Long&gt; accumulator) {\n            //5.2. ????????\n        }\n        @Override\n        public Tuple3&lt;Date, String, Long&gt; getResult(Tuple3&lt;Date, String, Long&gt; accumulator) {\n            //5.3. ????????\n        }\n        @Override\n        public Tuple3&lt;Date, String, Long&gt; merge(Tuple3&lt;Date, String, Long&gt; a, Tuple3&lt;Date, String, Long&gt; b) {\n            //5.4. ????????\n        }\n</code></pre>\n  </li>\n</ol>\n</div>"}]},"apps":[],"progressUpdateIntervalMs":500,"jobName":"paragraph_1583778752205_2081044518","id":"paragraph_1564399239827_-131272370","dateCreated":"2020-03-09T18:32:32+0000","status":"READY","$$hashKey":"object:251"},{"text":"%md\n### Let’s implement the 4 functions composing our aggregate function.\n#### 5.1. Our createAccumulator() needs to initialize our accumulator. We will here simply return an empty Tuple3<Date, String, Long>:\n    @Override\n    public Tuple3<Date, String, Long> createAccumulator() {\n        return new Tuple3<>(null,\"\", 0L);\n    }","user":"anonymous","dateUpdated":"2020-03-09T18:32:32+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"runOnSelectionChange":true,"title":false,"checkEmpty":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h3>Let’s implement the 4 functions composing our aggregate function.</h3>\n<h4>5.1. Our createAccumulator() needs to initialize our accumulator. We will here simply return an empty Tuple3&lt;Date, String, Long&gt;:</h4>\n<pre><code>@Override\npublic Tuple3&lt;Date, String, Long&gt; createAccumulator() {\n    return new Tuple3&lt;&gt;(null,&quot;&quot;, 0L);\n}\n</code></pre>\n</div>"}]},"apps":[],"progressUpdateIntervalMs":500,"jobName":"paragraph_1583778752205_77886451","id":"paragraph_1564400278313_1042600191","dateCreated":"2020-03-09T18:32:32+0000","status":"READY","$$hashKey":"object:252"},{"text":"%md\n#### 5.2. Our add() / accumulate() function needs to update the accumulator results, i.e. add the current Wikipedia edits to the user’s edit count:\n    \n    @Override\n    public Tuple3<Date, String, Long> add(WikipediaEditEvent value, Tuple3<Date, String, Long> accumulator) {\n        accumulator.f1 = value.getUser();\n        accumulator.f2 += value.getByteDiff();\n        return accumulator;\n    }","user":"anonymous","dateUpdated":"2020-03-09T18:32:32+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"runOnSelectionChange":true,"title":false,"checkEmpty":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h4>5.2. Our add() / accumulate() function needs to update the accumulator results, i.e. add the current Wikipedia edits to the user’s edit count:</h4>\n<pre><code>@Override\npublic Tuple3&lt;Date, String, Long&gt; add(WikipediaEditEvent value, Tuple3&lt;Date, String, Long&gt; accumulator) {\n    accumulator.f1 = value.getUser();\n    accumulator.f2 += value.getByteDiff();\n    return accumulator;\n}\n</code></pre>\n</div>"}]},"apps":[],"progressUpdateIntervalMs":500,"jobName":"paragraph_1583778752205_1146081909","id":"paragraph_1564400371821_-1836161723","dateCreated":"2020-03-09T18:32:32+0000","status":"READY","$$hashKey":"object:253"},{"text":"%md\n#### 5.3. Our getResult() function needs to return the results, i.e. the accumulator:\n    @Override\n    public Tuple3<Date, String, Long> getResult(Tuple3<Date, String, Long> accumulator) {\n        accumulator.f0 = new Date();\n        return accumulator;\n    }","user":"anonymous","dateUpdated":"2020-03-09T18:32:32+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"runOnSelectionChange":true,"title":false,"checkEmpty":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h4>5.3. Our getResult() function needs to return the results, i.e. the accumulator:</h4>\n<pre><code>@Override\npublic Tuple3&lt;Date, String, Long&gt; getResult(Tuple3&lt;Date, String, Long&gt; accumulator) {\n    accumulator.f0 = new Date();\n    return accumulator;\n}\n</code></pre>\n</div>"}]},"apps":[],"progressUpdateIntervalMs":500,"jobName":"paragraph_1583778752205_1922036130","id":"paragraph_1564400415215_-1257853990","dateCreated":"2020-03-09T18:32:32+0000","status":"READY","$$hashKey":"object:254"},{"text":"%md\n#### 5.4. Last but not least, since we are doing a session group window, the accumulators of those two session windows need to be joined when a row is observed that “connects” them. This is done with the merge() function:\n    @Override\n    public Tuple3<Date, String, Long> merge(Tuple3<Date, String, Long> a, Tuple3<Date, String, Long> b) {\n        return new Tuple3<>(a.f0, a.f1, a.f2 + b.f2);\n    }","user":"anonymous","dateUpdated":"2020-03-09T18:32:32+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"runOnSelectionChange":true,"title":false,"checkEmpty":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h4>5.4. Last but not least, since we are doing a session group window, the accumulators of those two session windows need to be joined when a row is observed that “connects” them. This is done with the merge() function:</h4>\n<pre><code>@Override\npublic Tuple3&lt;Date, String, Long&gt; merge(Tuple3&lt;Date, String, Long&gt; a, Tuple3&lt;Date, String, Long&gt; b) {\n    return new Tuple3&lt;&gt;(a.f0, a.f1, a.f2 + b.f2);\n}\n</code></pre>\n</div>"}]},"apps":[],"progressUpdateIntervalMs":500,"jobName":"paragraph_1583778752205_-1016333301","id":"paragraph_1564400451663_-1032446641","dateCreated":"2020-03-09T18:32:32+0000","status":"READY","$$hashKey":"object:255"},{"text":"%md\n### 5.Our aggregate function finally looks like this:\n    \n    DataStream<Tuple3<Date, String, Long>> result = keyedEdits\n        .timeWindow(Time.minutes(1))\n        .aggregate(new AggregateFunction<WikipediaEditEvent, Tuple3<Date, String, Long>, Tuple3<Date, String, Long>>() {\n            @Override\n            public Tuple3<Date, String, Long> createAccumulator() {\n                return new Tuple3<>(null,\"\", 0L);\n            }\n            @Override\n            public Tuple3<Date, String, Long> add(WikipediaEditEvent value, Tuple3<Date, String, Long> accumulator) {\n                accumulator.f1 = value.getUser();\n                accumulator.f2 += value.getByteDiff();\n                return accumulator;\n            }\n            @Override\n            public Tuple3<Date, String, Long> getResult(Tuple3<Date, String, Long> accumulator) {\n                accumulator.f0 = new Date();\n                return accumulator;\n            }\n            @Override\n            public Tuple3<Date, String, Long> merge(Tuple3<Date, String, Long> a, Tuple3<Date, String, Long> b) {\n                return new Tuple3<>(a.f0, a.f1, a.f2 + b.f2);\n            }\n        });","user":"anonymous","dateUpdated":"2020-03-09T18:32:32+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"runOnSelectionChange":true,"title":false,"checkEmpty":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h3>5.Our aggregate function finally looks like this:</h3>\n<pre><code>DataStream&lt;Tuple3&lt;Date, String, Long&gt;&gt; result = keyedEdits\n    .timeWindow(Time.minutes(1))\n    .aggregate(new AggregateFunction&lt;WikipediaEditEvent, Tuple3&lt;Date, String, Long&gt;, Tuple3&lt;Date, String, Long&gt;&gt;() {\n        @Override\n        public Tuple3&lt;Date, String, Long&gt; createAccumulator() {\n            return new Tuple3&lt;&gt;(null,&quot;&quot;, 0L);\n        }\n        @Override\n        public Tuple3&lt;Date, String, Long&gt; add(WikipediaEditEvent value, Tuple3&lt;Date, String, Long&gt; accumulator) {\n            accumulator.f1 = value.getUser();\n            accumulator.f2 += value.getByteDiff();\n            return accumulator;\n        }\n        @Override\n        public Tuple3&lt;Date, String, Long&gt; getResult(Tuple3&lt;Date, String, Long&gt; accumulator) {\n            accumulator.f0 = new Date();\n            return accumulator;\n        }\n        @Override\n        public Tuple3&lt;Date, String, Long&gt; merge(Tuple3&lt;Date, String, Long&gt; a, Tuple3&lt;Date, String, Long&gt; b) {\n            return new Tuple3&lt;&gt;(a.f0, a.f1, a.f2 + b.f2);\n        }\n    });\n</code></pre>\n</div>"}]},"apps":[],"progressUpdateIntervalMs":500,"jobName":"paragraph_1583778752206_-1013309600","id":"paragraph_1564400496780_825606680","dateCreated":"2020-03-09T18:32:32+0000","status":"READY","$$hashKey":"object:256"},{"text":"%md\n### 6. Since our source is infinite, our DataStream will never stop, so we need to put an end for streaming data from Wikipedia. \n**The intuition is to trigger an exception after 1 min of run so that we will be able to collect the output.**\n**For this, we need a second stream as the first one is built on the AggregateFunction interface that doesn't allow us to throw exceptions in its methods.**\n\n    DataStream<Tuple3<Date, String, Long>> secondStream = result\n        .map(new MapFunction<Tuple3<Date, String, Long>, Tuple3<Date, String, Long>>() {\n            @Override\n            public Tuple3<Date, String, Long> map(Tuple3<Date, String, Long> tuple3) throws Exception {\n                if ( tuple3.f0.equals(new Date(\"07/14/1789\"))) {\n                    throw new Exception(\"Triggered exception to quit our infinite DataStream. Don't panic.\");\n                }\n                return tuple3;\n            }\n        });\n        \n**The exception appears with this message \"Triggered exception to quit our infinite DataStream. Don't panic.\"**\n    \n![exception2](http://193.190.127.227/img/streaming/exception2.png)","user":"anonymous","dateUpdated":"2020-03-10T07:36:22+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"runOnSelectionChange":true,"title":false,"checkEmpty":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h3>6. Since our source is infinite, our DataStream will never stop, so we need to put an end for streaming data from Wikipedia.</h3>\n<p><strong>The intuition is to trigger an exception after 1 min of run so that we will be able to collect the output.</strong><br/><strong>For this, we need a second stream as the first one is built on the AggregateFunction interface that doesn&rsquo;t allow us to throw exceptions in its methods.</strong></p>\n<pre><code>DataStream&lt;Tuple3&lt;Date, String, Long&gt;&gt; secondStream = result\n    .map(new MapFunction&lt;Tuple3&lt;Date, String, Long&gt;, Tuple3&lt;Date, String, Long&gt;&gt;() {\n        @Override\n        public Tuple3&lt;Date, String, Long&gt; map(Tuple3&lt;Date, String, Long&gt; tuple3) throws Exception {\n            if ( tuple3.f0.equals(new Date(&quot;07/14/1789&quot;))) {\n                throw new Exception(&quot;Triggered exception to quit our infinite DataStream. Don&#39;t panic.&quot;);\n            }\n            return tuple3;\n        }\n    });\n</code></pre>\n<p><strong>The exception appears with this message &ldquo;Triggered exception to quit our infinite DataStream. Don&rsquo;t panic.&rdquo;</strong></p>\n<p><img src=\"http://193.190.127.227/img/streaming/exception2.png\" alt=\"exception2\" /></p>\n</div>"}]},"apps":[],"progressUpdateIntervalMs":500,"jobName":"paragraph_1583778752206_1808794608","id":"paragraph_1564412538901_877513743","dateCreated":"2020-03-09T18:32:32+0000","dateStarted":"2020-03-10T07:36:22+0000","dateFinished":"2020-03-10T07:36:22+0000","status":"FINISHED","$$hashKey":"object:257"},{"text":"%md\n### 7. Last step is to output and execute the results\n    result.print();\n    see.execute();","user":"anonymous","dateUpdated":"2020-03-09T18:32:32+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"runOnSelectionChange":true,"title":false,"checkEmpty":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h3>7. Last step is to output and execute the results</h3>\n<pre><code>result.print();\nsee.execute();\n</code></pre>\n</div>"}]},"apps":[],"progressUpdateIntervalMs":500,"jobName":"paragraph_1583778752206_2073540813","id":"paragraph_1564400468041_-1583938912","dateCreated":"2020-03-09T18:32:32+0000","status":"READY","$$hashKey":"object:258"},{"text":"%md\n### We're done! Our second java program for this exercice `Edits per users` is now complete! ","user":"anonymous","dateUpdated":"2020-03-09T18:32:32+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"runOnSelectionChange":true,"title":false,"checkEmpty":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h3>We&rsquo;re done! Our second java program for this exercice <code>Edits per users</code> is now complete!</h3>\n</div>"}]},"apps":[],"progressUpdateIntervalMs":500,"jobName":"paragraph_1583778752206_743739236","id":"paragraph_1564395228724_-2111048819","dateCreated":"2020-03-09T18:32:32+0000","status":"READY","$$hashKey":"object:259"},{"text":"%java\n\nimport org.apache.flink.api.common.functions.AggregateFunction;\nimport org.apache.flink.api.common.functions.MapFunction;\nimport org.apache.flink.api.java.tuple.Tuple2;\nimport org.apache.flink.api.java.tuple.Tuple3;\nimport org.apache.flink.api.java.functions.KeySelector;\nimport org.apache.flink.streaming.api.datastream.DataStream;\nimport org.apache.flink.streaming.api.datastream.KeyedStream;\nimport org.apache.flink.streaming.api.environment.StreamExecutionEnvironment;\nimport org.apache.flink.streaming.api.functions.windowing.AllWindowFunction;\nimport org.apache.flink.streaming.api.windowing.time.Time;\nimport org.apache.flink.streaming.api.windowing.windows.TimeWindow;\nimport org.apache.flink.streaming.connectors.wikiedits.WikipediaEditEvent;\nimport org.apache.flink.streaming.connectors.wikiedits.WikipediaEditsSource;\nimport org.apache.flink.util.Collector;\nimport org.apache.commons.io.FileUtils;\nimport java.io.File;\nimport java.io.IOException;\nimport java.util.Date;\n\npublic class WikiEdits {\n\n    public static void main(String[] args) throws Exception {\n\n        // Clean output directory from previous run\n        String outputDirectory = \"./data/output/wikiEditsEditsPerUser\";\n        try {\n            File f = new File(outputDirectory);\n            if (f.exists()) {\n                FileUtils.cleanDirectory(f); //clean out directory (this is optional -- but good know)\n                FileUtils.forceDelete(f); //delete directory\n                FileUtils.forceMkdir(f); //create directory\n            }\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n        \n        // Setting an exception after 1 min of run\n        Date now = new Date();\n        Date end = now;\n        end.setMinutes(end.getMinutes()+1);\n    \n        // Set up the execution environment\n        StreamExecutionEnvironment see = StreamExecutionEnvironment.getExecutionEnvironment();\n        \n        DataStream<WikipediaEditEvent> edits = see.addSource(new WikipediaEditsSource());\n\n        //4.\n        KeyedStream<WikipediaEditEvent, String> keyedEdits = edits\n            .keyBy((KeySelector<WikipediaEditEvent, String>) event -> event.getUser());\n\n        //5.\n        DataStream<Tuple3<Date, String, Long>> result = keyedEdits\n            .timeWindow(Time.seconds(10))\n            .aggregate(new AggregateFunction<WikipediaEditEvent, Tuple3<Date, String, Long>, Tuple3<Date, String, Long>>() {\n                //5.1.\n                @Override\n                public Tuple3<Date, String, Long> createAccumulator() {\n                    return new Tuple3<>(null,\"\", 0L);\n                }\n\n                //5.2.\n                @Override\n                public Tuple3<Date, String, Long> add(WikipediaEditEvent value, Tuple3<Date, String, Long> accumulator) {\n                    accumulator.f1 = value.getUser();\n                    accumulator.f2 += value.getByteDiff();\n                    return accumulator;\n                }\n\n                //5.3.\n                @Override\n                public Tuple3<Date, String, Long> getResult(Tuple3<Date, String, Long> accumulator) {\n                    accumulator.f0 = new Date();\n                    if (new Date().after(end)) {\n                        accumulator.f0 = new Date(\"07/14/1789\");\n                    }\n                    return accumulator;\n                }\n\n                //5.4.\n                @Override\n                public Tuple3<Date, String, Long> merge(Tuple3<Date, String, Long> a, Tuple3<Date, String, Long> b) {\n                    return new Tuple3<>(a.f0, a.f1, a.f2 + b.f2);\n                }\n            });\n\n        //6. We need a second stream as the first one is built on the AggregateFunction interface that doesn't allow us to throw exceptions in its methods\n        DataStream<Tuple3<Date, String, Long>> secondStream = result\n                .map(new MapFunction<Tuple3<Date, String, Long>, Tuple3<Date, String, Long>>() {\n                    @Override\n                    public Tuple3<Date, String, Long> map(Tuple3<Date, String, Long> tuple3) throws Exception {\n                        if ( tuple3.f0.equals(new Date(\"07/14/1789\"))) {\n                            throw new Exception(\"Triggered exception to quit our infinite DataStream. Don't panic.\");\n                        }\n                        return tuple3;\n                    }\n                });\n\n        //7. Write results as text\n        secondStream.writeAsText(outputDirectory);\n        see.execute();\n    }\n}","user":"anonymous","dateUpdated":"2020-03-13T16:40:49+0000","config":{"editorSetting":{"language":"java","editOnDblClick":false,"completionSupport":false},"colWidth":12,"editorMode":"ace/mode/java","fontSize":9,"editorHide":false,"runOnSelectionChange":true,"title":false,"checkEmpty":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"ERROR","msg":[{"type":"TEXT","data":"java.lang.reflect.InvocationTargetException\njava.lang.reflect.InvocationTargetException\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.apache.zeppelin.java.StaticRepl.execute(StaticRepl.java:137)\n\tat org.apache.zeppelin.java.JavaInterpreter.interpret(JavaInterpreter.java:65)\n\tat org.apache.zeppelin.interpreter.LazyOpenInterpreter.interpret(LazyOpenInterpreter.java:103)\n\tat org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer$InterpretJob.jobRun(RemoteInterpreterServer.java:673)\n\tat org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer$InterpretJob.jobRun(RemoteInterpreterServer.java:566)\n\tat org.apache.zeppelin.scheduler.Job.run(Job.java:172)\n\tat org.apache.zeppelin.scheduler.AbstractScheduler.runJob(AbstractScheduler.java:121)\n\tat org.apache.zeppelin.scheduler.FIFOScheduler.lambda$runJobInScheduler$0(FIFOScheduler.java:39)\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\n\tat java.lang.Thread.run(Thread.java:748)\nCaused by: org.apache.flink.runtime.client.JobExecutionException: Job execution failed.\n\tat org.apache.flink.runtime.jobmaster.JobResult.toJobExecutionResult(JobResult.java:146)\n\tat org.apache.flink.runtime.minicluster.MiniCluster.executeJobBlocking(MiniCluster.java:638)\n\tat org.apache.flink.streaming.api.environment.LocalStreamEnvironment.execute(LocalStreamEnvironment.java:123)\n\tat org.apache.flink.streaming.api.environment.StreamExecutionEnvironment.execute(StreamExecutionEnvironment.java:1509)\n\tat Ca401a3ef168d43b6896a85d03d3aa7df.main(Ca401a3ef168d43b6896a85d03d3aa7df.java:100)\n\t... 15 more\nCaused by: TimerException{org.apache.flink.streaming.runtime.tasks.ExceptionInChainedOperatorException: Could not forward element to next operator}\n\tat org.apache.flink.streaming.runtime.tasks.SystemProcessingTimeService$TriggerTask.run(SystemProcessingTimeService.java:288)\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\n\t... 3 more\nCaused by: org.apache.flink.streaming.runtime.tasks.ExceptionInChainedOperatorException: Could not forward element to next operator\n\tat org.apache.flink.streaming.runtime.tasks.OperatorChain$CopyingChainingOutput.pushToOperator(OperatorChain.java:596)\n\tat org.apache.flink.streaming.runtime.tasks.OperatorChain$CopyingChainingOutput.collect(OperatorChain.java:554)\n\tat org.apache.flink.streaming.runtime.tasks.OperatorChain$CopyingChainingOutput.collect(OperatorChain.java:534)\n\tat org.apache.flink.streaming.api.operators.AbstractStreamOperator$CountingOutput.collect(AbstractStreamOperator.java:718)\n\tat org.apache.flink.streaming.api.operators.AbstractStreamOperator$CountingOutput.collect(AbstractStreamOperator.java:696)\n\tat org.apache.flink.streaming.api.operators.TimestampedCollector.collect(TimestampedCollector.java:51)\n\tat org.apache.flink.streaming.api.functions.windowing.PassThroughWindowFunction.apply(PassThroughWindowFunction.java:36)\n\tat org.apache.flink.streaming.runtime.operators.windowing.functions.InternalSingleValueWindowFunction.process(InternalSingleValueWindowFunction.java:46)\n\tat org.apache.flink.streaming.runtime.operators.windowing.WindowOperator.emitWindowContents(WindowOperator.java:546)\n\tat org.apache.flink.streaming.runtime.operators.windowing.WindowOperator.onProcessingTime(WindowOperator.java:500)\n\tat org.apache.flink.streaming.api.operators.InternalTimerServiceImpl.onProcessingTime(InternalTimerServiceImpl.java:239)\n\tat org.apache.flink.streaming.runtime.tasks.SystemProcessingTimeService$TriggerTask.run(SystemProcessingTimeService.java:285)\n\t... 7 more\nCaused by: java.lang.Exception: Triggered exception to quit our infinite DataStream. Don't panic.\n\tat Ca401a3ef168d43b6896a85d03d3aa7df$2.map(Ca401a3ef168d43b6896a85d03d3aa7df.java:92)\n\tat Ca401a3ef168d43b6896a85d03d3aa7df$2.map(Ca401a3ef168d43b6896a85d03d3aa7df.java:88)\n\tat org.apache.flink.streaming.api.operators.StreamMap.processElement(StreamMap.java:41)\n\tat org.apache.flink.streaming.runtime.tasks.OperatorChain$CopyingChainingOutput.pushToOperator(OperatorChain.java:579)\n\t... 18 more\n"}]},"apps":[],"progressUpdateIntervalMs":500,"jobName":"paragraph_1583778752206_2133568144","id":"paragraph_1562846342777_1509969780","dateCreated":"2020-03-09T18:32:32+0000","dateStarted":"2020-03-13T16:40:49+0000","dateFinished":"2020-03-13T16:41:50+0000","status":"ERROR","$$hashKey":"object:260"},{"text":"%md\n### Output: We just need to run this code that reads, from our output directory, the results (timeWindowEnd, count, bytesChanged)\n![output3B](http://193.190.127.227/img/streaming/output3B.png)","user":"anonymous","dateUpdated":"2020-03-10T07:36:28+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"runOnSelectionChange":true,"title":false,"checkEmpty":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h3>Output: We just need to run this code that reads, from our output directory, the results (timeWindowEnd, count, bytesChanged)</h3>\n<p><img src=\"http://193.190.127.227/img/streaming/output3B.png\" alt=\"output3B\" /></p>\n</div>"}]},"apps":[],"progressUpdateIntervalMs":500,"jobName":"paragraph_1583778752206_-816264093","id":"paragraph_1563373380869_50625789","dateCreated":"2020-03-09T18:32:32+0000","dateStarted":"2020-03-10T07:36:28+0000","dateFinished":"2020-03-10T07:36:28+0000","status":"FINISHED","$$hashKey":"object:261"},{"text":"%java\n\nimport java.io.File;\nimport java.util.Scanner; \n\npublic class ReadWikiEditsOutput {\n\n    public static void main(String[] args) throws Exception {\n        String outputDirectory = \"./data/output/wikiEditsEditsPerUser\";\n        File f = new File(outputDirectory);\n        if (f.exists()) {\n            // Loop on the 8 tasks slots\n            for (int i = 1; i < 9; ++i){\n                File file = new File(outputDirectory + \"/\" + i); \n                Scanner sc = new Scanner(file);\n                \n                while (sc.hasNextLine()) { \n                    System.out.println(sc.nextLine());\n                }\n            }\n        }\n        else {\n            System.out.println(\"Please run the above paragraph to write to output directory.\");\n        }\n    }\n}","user":"anonymous","dateUpdated":"2020-03-09T18:32:32+0000","config":{"editorSetting":{"language":"java","editOnDblClick":false},"colWidth":12,"editorMode":"ace/mode/java","fontSize":9,"runOnSelectionChange":true,"title":false,"checkEmpty":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"(Thu Jul 18 13:45:20 UTC 2019,Kingsif,-24)\n(Thu Jul 18 13:45:30 UTC 2019,Nguyennhut082013,-12)\n(Thu Jul 18 13:45:30 UTC 2019,.101.51.181,1)\n(Thu Jul 18 13:45:10 UTC 2019,TropicalIce,-6)\n(Thu Jul 18 13:45:10 UTC 2019,Bdp-tx,4)\n(Thu Jul 18 13:45:20 UTC 2019,Warofdreams,18)\n(Thu Jul 18 13:45:20 UTC 2019,07:FEA8:BEA0:3E2:382E:B15A:190C:A4ED,1)\n(Thu Jul 18 13:45:20 UTC 2019,Berean Hunter,563)\n(Thu Jul 18 13:45:00 UTC 2019,MonkeyStolen234,28)\n(Thu Jul 18 13:45:00 UTC 2019,8.77.233.236,-9)\n(Thu Jul 18 13:45:10 UTC 2019,Ahmad.baddawi,149)\n(Thu Jul 18 13:45:20 UTC 2019,Princheeseanastasia,17)\n(Thu Jul 18 13:45:30 UTC 2019,05:204:7105:A060:2BB5:A1EF:E214:C596,-253)\n(Thu Jul 18 13:45:30 UTC 2019,.192.209.72,0)\n(Thu Jul 18 13:45:30 UTC 2019,Masumrezarock100,3706)\n(Thu Jul 18 13:45:30 UTC 2019,Toddst1,57)\n(Thu Jul 18 13:45:00 UTC 2019,Jingiby,805)\n(Thu Jul 18 13:45:20 UTC 2019,Nico008,-6)\n(Thu Jul 18 13:45:20 UTC 2019,Adamtt9,11064)\n(Thu Jul 18 13:45:30 UTC 2019,Adamtt9,48)\n(Thu Jul 18 13:45:00 UTC 2019,.5.102.75,80)\n(Thu Jul 18 13:45:00 UTC 2019,Sweetpool50,119)\n(Thu Jul 18 13:45:00 UTC 2019,Taloson,1016)\n(Thu Jul 18 13:45:00 UTC 2019,InternetArchiveBot,181)\n(Thu Jul 18 13:45:00 UTC 2019,Bender235,32)\n(Thu Jul 18 13:45:00 UTC 2019,Tallgrassweeds,44)\n(Thu Jul 18 13:45:10 UTC 2019,PCN02WPS,39)\n(Thu Jul 18 13:45:10 UTC 2019,InternetArchiveBot,151)\n(Thu Jul 18 13:45:20 UTC 2019,InternetArchiveBot,162)\n(Thu Jul 18 13:45:20 UTC 2019,Bearcat,-19)\n(Thu Jul 18 13:45:20 UTC 2019,JaventheAlderick,2068)\n(Thu Jul 18 13:45:30 UTC 2019,.5.102.75,-83)\n(Thu Jul 18 13:45:30 UTC 2019,Blizzardwind,72)\n(Thu Jul 18 13:45:30 UTC 2019,01:D08:D5:6590:B827:B0B9:5E39:DA83,745)\n(Thu Jul 18 13:45:30 UTC 2019,Bachounda,47)\n(Thu Jul 18 13:45:30 UTC 2019,.188.18.236,6)\n(Thu Jul 18 13:45:30 UTC 2019,PCN02WPS,49)\n(Thu Jul 18 13:45:30 UTC 2019,Pyy,240)\n(Thu Jul 18 13:45:00 UTC 2019,DatBot,-1)\n(Thu Jul 18 13:45:00 UTC 2019,Yosemiter,52)\n(Thu Jul 18 13:45:00 UTC 2019,Syun respect for music,136)\n(Thu Jul 18 13:45:10 UTC 2019,Kumboloi,644)\n(Thu Jul 18 13:45:10 UTC 2019,AvicBot,-93)\n(Thu Jul 18 13:45:20 UTC 2019,.97.75.138,15)\n(Thu Jul 18 13:45:30 UTC 2019,AnomieBOT,30)\n(Thu Jul 18 13:45:30 UTC 2019,Dj31087,2480)\n(Thu Jul 18 13:45:30 UTC 2019,0.179.244.125,98)\n(Thu Jul 18 13:45:00 UTC 2019,Johnpacklambert,46)\n(Thu Jul 18 13:45:10 UTC 2019,Xqbot,1)\n(Thu Jul 18 13:45:20 UTC 2019,Xqbot,6)\n(Thu Jul 18 13:45:20 UTC 2019,Johnpacklambert,46)\n(Thu Jul 18 13:45:20 UTC 2019,Bumm13,14)\n(Thu Jul 18 13:45:30 UTC 2019,Xqbot,1)\n(Thu Jul 18 13:45:00 UTC 2019,Willwal,408)\n(Thu Jul 18 13:45:00 UTC 2019,.101.134.249,-253)\n(Thu Jul 18 13:45:10 UTC 2019,Onel5969,-5)\n(Thu Jul 18 13:45:20 UTC 2019,Narky Blert,21)\n(Thu Jul 18 13:45:20 UTC 2019,Worldbruce,707)\n(Thu Jul 18 13:45:30 UTC 2019,Reitimwinkl,8)\n(Thu Jul 18 13:45:30 UTC 2019,Usrrname,424)\n(Thu Jul 18 13:45:30 UTC 2019,Gobautista,22)\n"}]},"apps":[],"progressUpdateIntervalMs":500,"jobName":"paragraph_1583778752206_870424408","id":"paragraph_1563372988078_-2080838016","dateCreated":"2020-03-09T18:32:32+0000","status":"READY","$$hashKey":"object:262"},{"text":"%md\n### Operations summary:\n\n1. edits = environment. **addSource**(WikiEvent)\n2. keyedEdits = edits. **keyBy**(user)\n3. keyedEdits.aggregate( **AggregateFunction** )\n\n### Our DAG looks like:\n\n![dag3B](http://193.190.127.227/img/streaming/dag3B.png)","user":"anonymous","dateUpdated":"2020-03-10T07:36:32+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"runOnSelectionChange":true,"title":false,"checkEmpty":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h3>Operations summary:</h3>\n<ol>\n  <li>edits = environment. <strong>addSource</strong>(WikiEvent)</li>\n  <li>keyedEdits = edits. <strong>keyBy</strong>(user)</li>\n  <li>keyedEdits.aggregate( <strong>AggregateFunction</strong> )</li>\n</ol>\n<h3>Our DAG looks like:</h3>\n<p><img src=\"http://193.190.127.227/img/streaming/dag3B.png\" alt=\"dag3B\" /></p>\n</div>"}]},"apps":[],"progressUpdateIntervalMs":500,"jobName":"paragraph_1583778752206_914789440","id":"paragraph_1564417322651_1382970151","dateCreated":"2020-03-09T18:32:32+0000","dateStarted":"2020-03-10T07:36:32+0000","dateFinished":"2020-03-10T07:36:32+0000","status":"FINISHED","$$hashKey":"object:263"},{"text":"%md\n## 3.C. Output to Kafka\n\n| ![space-1.jpg](http://193.190.127.227/img/flink/fig6.png) | \n|:--:| \n| *Fig. 6: Kafka logo (Source: kafka.apache.org).* |\n\n**Let's say we want to sink the results to Kafka. It would only require 2 additional lines of code. Instead of writing the results as text, let's do the following:**\n\n    secondStream\n        .map((MapFunction<Tuple3<Date, String, Long>, String>) tuple -> tuple.toString())\n        .addSink(new FlinkKafkaProducer010<>(\"kafka:9092\", \"wiki-result\", new SimpleStringSchema()));","user":"anonymous","dateUpdated":"2020-03-10T07:36:49+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"runOnSelectionChange":true,"title":false,"checkEmpty":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h2>3.C. Output to Kafka</h2>\n<table>\n  <thead>\n    <tr>\n      <th align=\"center\"><img src=\"http://193.190.127.227/img/flink/fig6.png\" alt=\"space-1.jpg\" /> </th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td align=\"center\"><em>Fig. 6: Kafka logo (Source: kafka.apache.org).</em> </td>\n    </tr>\n  </tbody>\n</table>\n<p><strong>Let&rsquo;s say we want to sink the results to Kafka. It would only require 2 additional lines of code. Instead of writing the results as text, let&rsquo;s do the following:</strong></p>\n<pre><code>secondStream\n    .map((MapFunction&lt;Tuple3&lt;Date, String, Long&gt;, String&gt;) tuple -&gt; tuple.toString())\n    .addSink(new FlinkKafkaProducer010&lt;&gt;(&quot;kafka:9092&quot;, &quot;wiki-result&quot;, new SimpleStringSchema()));\n</code></pre>\n</div>"}]},"apps":[],"progressUpdateIntervalMs":500,"jobName":"paragraph_1583778752206_-1459392946","id":"paragraph_1562837964699_1874933293","dateCreated":"2020-03-09T18:32:32+0000","dateStarted":"2020-03-10T07:36:49+0000","dateFinished":"2020-03-10T07:36:49+0000","status":"FINISHED","$$hashKey":"object:264"},{"text":"%java\n\n/*\n * Licensed to the Apache Software Foundation (ASF) under one or more\n * contributor license agreements.  See the NOTICE file distributed with\n * this work for additional information regarding copyright ownership.\n * The ASF licenses this file to You under the Apache License, Version 2.0\n * (the \"License\"); you may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport org.apache.flink.api.common.functions.AggregateFunction;\nimport org.apache.flink.api.common.functions.MapFunction;\nimport org.apache.flink.api.common.serialization.SimpleStringSchema;\nimport org.apache.flink.api.java.functions.KeySelector;\nimport org.apache.flink.api.java.tuple.Tuple3;\nimport org.apache.flink.api.java.functions.KeySelector;\nimport org.apache.flink.streaming.api.datastream.DataStream;\nimport org.apache.flink.streaming.api.datastream.KeyedStream;\nimport org.apache.flink.streaming.api.environment.StreamExecutionEnvironment;\nimport org.apache.flink.streaming.api.functions.windowing.AllWindowFunction;\nimport org.apache.flink.streaming.api.windowing.time.Time;\nimport org.apache.flink.streaming.api.windowing.windows.TimeWindow;\nimport org.apache.flink.streaming.connectors.wikiedits.WikipediaEditEvent;\nimport org.apache.flink.streaming.connectors.wikiedits.WikipediaEditsSource;\nimport org.apache.flink.util.Collector;\nimport org.apache.flink.streaming.connectors.kafka.FlinkKafkaProducer010;\n\nimport org.apache.commons.io.FileUtils;\n\nimport java.io.File;\nimport java.io.IOException;\nimport java.util.Date;\n\n\npublic class WikiEditsKafkaOutputProducer {\n\n    public static void main(String[] args) throws Exception {\n    \n        // Clean output directory from previous run\n        String outputDirectory = \"./data/output/wikiEditsKafkaOutput\";\n        try {\n            File f = new File(outputDirectory);\n            if (f.exists()) {\n                FileUtils.cleanDirectory(f); //clean out directory (this is optional -- but good know)\n                FileUtils.forceDelete(f); //delete directory\n                FileUtils.forceMkdir(f); //create directory\n            }\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n        \n        // Setting an exception after 1 min of run\n        Date now = new Date();\n        Date end = now;\n        end.setMinutes(end.getMinutes()+1);\n    \n        // Set up the execution environment\n        StreamExecutionEnvironment see = StreamExecutionEnvironment.getExecutionEnvironment();\n        \n        DataStream<WikipediaEditEvent> edits = see.addSource(new WikipediaEditsSource());\n\n        KeyedStream<WikipediaEditEvent, String> keyedEdits = edits\n            .keyBy((KeySelector<WikipediaEditEvent, String>) event -> event.getUser());\n\n        DataStream<Tuple3<Date, String, Long>> result = keyedEdits\n            .timeWindow(Time.seconds(10))\n            .aggregate(new AggregateFunction<WikipediaEditEvent, Tuple3<Date, String, Long>, Tuple3<Date, String, Long>>() {\n                @Override\n                public Tuple3<Date, String, Long> createAccumulator() {\n                    return new Tuple3<>(null,\"\", 0L);\n                }\n\n                @Override\n                public Tuple3<Date, String, Long> add(WikipediaEditEvent value, Tuple3<Date, String, Long> accumulator) {\n                    accumulator.f1 = value.getUser();\n                    accumulator.f2 += value.getByteDiff();\n                    return accumulator;\n                }\n\n                @Override\n                public Tuple3<Date, String, Long> getResult(Tuple3<Date, String, Long> accumulator) {\n                    accumulator.f0 = new Date();\n                    if (new Date().after(end)) {\n                        accumulator.f0 = new Date(\"07/14/1789\");\n                    }\n                    return accumulator;\n                }\n\n                @Override\n                public Tuple3<Date, String, Long> merge(Tuple3<Date, String, Long> a, Tuple3<Date, String, Long> b) {\n                    return new Tuple3<>(a.f0, a.f1, a.f2 + b.f2);\n                }\n            });\n\n        // We need a second stream as the first one is built on the AggregateFunction interface that doesn't allow us to throw exceptions in its methods\n        DataStream<Tuple3<Date, String, Long>> secondStream = result\n                .map(new MapFunction<Tuple3<Date, String, Long>, Tuple3<Date, String, Long>>() {\n                    @Override\n                    public Tuple3<Date, String, Long> map(Tuple3<Date, String, Long> tuple3) throws Exception {\n                        if ( tuple3.f0.equals(new Date(\"07/14/1789\"))) {\n                            throw new Exception(\"Triggered exception to quit our infinite DataStream. Don't panic.\");\n                        }\n                        return tuple3;\n                    }\n                });\n\n        //Instead of writing the results as text \"secondStream.writeAsText(outputDirectory);\", we sink results to Kakfa:\n        secondStream\n            .map((MapFunction<Tuple3<Date, String, Long>, String>) tuple -> tuple.toString())\n            .addSink(new FlinkKafkaProducer010<>(\"kafka:9092\", \"wiki-result\", new SimpleStringSchema()));\n            \n        see.execute();\n    }\n}","user":"anonymous","dateUpdated":"2020-03-13T16:42:50+0000","config":{"editorSetting":{"language":"java","editOnDblClick":false},"colWidth":12,"editorMode":"ace/mode/java","fontSize":9,"runOnSelectionChange":true,"title":false,"checkEmpty":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"ERROR","msg":[{"type":"TEXT","data":"java.lang.reflect.InvocationTargetException\njava.lang.reflect.InvocationTargetException\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.apache.zeppelin.java.StaticRepl.execute(StaticRepl.java:137)\n\tat org.apache.zeppelin.java.JavaInterpreter.interpret(JavaInterpreter.java:65)\n\tat org.apache.zeppelin.interpreter.LazyOpenInterpreter.interpret(LazyOpenInterpreter.java:103)\n\tat org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer$InterpretJob.jobRun(RemoteInterpreterServer.java:673)\n\tat org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer$InterpretJob.jobRun(RemoteInterpreterServer.java:566)\n\tat org.apache.zeppelin.scheduler.Job.run(Job.java:172)\n\tat org.apache.zeppelin.scheduler.AbstractScheduler.runJob(AbstractScheduler.java:121)\n\tat org.apache.zeppelin.scheduler.FIFOScheduler.lambda$runJobInScheduler$0(FIFOScheduler.java:39)\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\n\tat java.lang.Thread.run(Thread.java:748)\nCaused by: org.apache.flink.runtime.client.JobExecutionException: Job execution failed.\n\tat org.apache.flink.runtime.jobmaster.JobResult.toJobExecutionResult(JobResult.java:146)\n\tat org.apache.flink.runtime.minicluster.MiniCluster.executeJobBlocking(MiniCluster.java:638)\n\tat org.apache.flink.streaming.api.environment.LocalStreamEnvironment.execute(LocalStreamEnvironment.java:123)\n\tat org.apache.flink.streaming.api.environment.StreamExecutionEnvironment.execute(StreamExecutionEnvironment.java:1509)\n\tat Ce414f1f4bc3e4282a1e230df8cb05a8f.main(Ce414f1f4bc3e4282a1e230df8cb05a8f.java:119)\n\t... 15 more\nCaused by: TimerException{org.apache.flink.streaming.runtime.tasks.ExceptionInChainedOperatorException: Could not forward element to next operator}\n\tat org.apache.flink.streaming.runtime.tasks.SystemProcessingTimeService$TriggerTask.run(SystemProcessingTimeService.java:288)\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\n\t... 3 more\nCaused by: org.apache.flink.streaming.runtime.tasks.ExceptionInChainedOperatorException: Could not forward element to next operator\n\tat org.apache.flink.streaming.runtime.tasks.OperatorChain$CopyingChainingOutput.pushToOperator(OperatorChain.java:596)\n\tat org.apache.flink.streaming.runtime.tasks.OperatorChain$CopyingChainingOutput.collect(OperatorChain.java:554)\n\tat org.apache.flink.streaming.runtime.tasks.OperatorChain$CopyingChainingOutput.collect(OperatorChain.java:534)\n\tat org.apache.flink.streaming.api.operators.AbstractStreamOperator$CountingOutput.collect(AbstractStreamOperator.java:718)\n\tat org.apache.flink.streaming.api.operators.AbstractStreamOperator$CountingOutput.collect(AbstractStreamOperator.java:696)\n\tat org.apache.flink.streaming.api.operators.TimestampedCollector.collect(TimestampedCollector.java:51)\n\tat org.apache.flink.streaming.api.functions.windowing.PassThroughWindowFunction.apply(PassThroughWindowFunction.java:36)\n\tat org.apache.flink.streaming.runtime.operators.windowing.functions.InternalSingleValueWindowFunction.process(InternalSingleValueWindowFunction.java:46)\n\tat org.apache.flink.streaming.runtime.operators.windowing.WindowOperator.emitWindowContents(WindowOperator.java:546)\n\tat org.apache.flink.streaming.runtime.operators.windowing.WindowOperator.onProcessingTime(WindowOperator.java:500)\n\tat org.apache.flink.streaming.api.operators.InternalTimerServiceImpl.onProcessingTime(InternalTimerServiceImpl.java:239)\n\tat org.apache.flink.streaming.runtime.tasks.SystemProcessingTimeService$TriggerTask.run(SystemProcessingTimeService.java:285)\n\t... 7 more\nCaused by: java.lang.Exception: Triggered exception to quit our infinite DataStream. Don't panic.\n\tat Ce414f1f4bc3e4282a1e230df8cb05a8f$2.map(Ce414f1f4bc3e4282a1e230df8cb05a8f.java:108)\n\tat Ce414f1f4bc3e4282a1e230df8cb05a8f$2.map(Ce414f1f4bc3e4282a1e230df8cb05a8f.java:104)\n\tat org.apache.flink.streaming.api.operators.StreamMap.processElement(StreamMap.java:41)\n\tat org.apache.flink.streaming.runtime.tasks.OperatorChain$CopyingChainingOutput.pushToOperator(OperatorChain.java:579)\n\t... 18 more\n"}]},"apps":[],"progressUpdateIntervalMs":500,"jobName":"paragraph_1583778752206_1801613600","id":"paragraph_1562846237812_285567020","dateCreated":"2020-03-09T18:32:32+0000","dateStarted":"2020-03-13T16:42:50+0000","dateFinished":"2020-03-13T16:44:00+0000","status":"ERROR","$$hashKey":"object:265"},{"text":"%md\n### Output:\n\nOpen a terminal and run the following commands:\n\n#### Connect to the Kafka docker container:\n    docker exec -it flink-tutorial_kafka_1 bash\n\n#### Consume the Kafka messages:\n    ./opt/kafka_2.11-0.10.0.0/bin/kafka-console-consumer.sh --zookeeper localhost:2181 --topic wiki-result --from-beginning\n\n![output3C](http://193.190.127.227/img/streaming/output3C.png)","user":"anonymous","dateUpdated":"2020-03-13T16:53:16+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"runOnSelectionChange":true,"title":false,"checkEmpty":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h3>Output:</h3>\n<p>Open a terminal and run the following commands:</p>\n<h4>Connect to the Kafka docker container:</h4>\n<pre><code>docker exec -it flink-tutorial_kafka_1 bash\n</code></pre>\n<h4>Consume the Kafka messages:</h4>\n<pre><code>./opt/kafka_2.11-0.10.0.0/bin/kafka-console-consumer.sh --zookeeper localhost:2181 --topic wiki-result --from-beginning\n</code></pre>\n<p><img src=\"http://193.190.127.227/img/streaming/output3C.png\" alt=\"output3C\" /></p>\n</div>"}]},"apps":[],"progressUpdateIntervalMs":500,"jobName":"paragraph_1583778752206_873001125","id":"paragraph_1563447579554_1941250882","dateCreated":"2020-03-09T18:32:32+0000","dateStarted":"2020-03-13T16:53:16+0000","dateFinished":"2020-03-13T16:53:16+0000","status":"FINISHED","$$hashKey":"object:266"},{"text":"%md\n### And this how our DAG looks like:\n![dag3C](http://193.190.127.227/img/streaming/dag3C.png)","user":"anonymous","dateUpdated":"2020-03-10T07:36:42+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"runOnSelectionChange":true,"title":false,"checkEmpty":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h3>And this how our DAG looks like:</h3>\n<p><img src=\"http://193.190.127.227/img/streaming/dag3C.png\" alt=\"dag3C\" /></p>\n</div>"}]},"apps":[],"progressUpdateIntervalMs":500,"jobName":"paragraph_1583778752206_-1409582938","id":"paragraph_1564418719221_1065641617","dateCreated":"2020-03-09T18:32:32+0000","dateStarted":"2020-03-10T07:36:42+0000","dateFinished":"2020-03-10T07:36:42+0000","status":"FINISHED","$$hashKey":"object:267"},{"text":"%md\n","user":"anonymous","dateUpdated":"2020-03-10T07:36:42+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true,"completionSupport":false},"editorMode":"ace/mode/markdown"},"settings":{"params":{},"forms":{}},"apps":[],"progressUpdateIntervalMs":500,"jobName":"paragraph_1583825802609_-473161386","id":"paragraph_1583825802609_-473161386","dateCreated":"2020-03-10T07:36:42+0000","status":"READY","$$hashKey":"object:268"}],"name":"2. Flink Streaming Hands On (Students)","id":"2F32HVKCK","defaultInterpreterGroup":"spark","version":"0.9.0-SNAPSHOT","permissions":{},"noteParams":{},"noteForms":{},"angularObjects":{},"config":{"isZeppelinNotebookCronEnable":false,"looknfeel":"default","personalizedMode":"false"},"info":{},"path":"/2. Flink Streaming Hands On (Students)"}