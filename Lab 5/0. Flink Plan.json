{"paragraphs":[{"text":"%md\n# Flink tutorial - Plan\n\n## Legend\nThe tiny stars represent the difficulty of a given exercise:\n- ⭐: Easy,\n- ⭐⭐: Average,\n- ⭐⭐⭐: Difficult.","user":"anonymous","dateUpdated":"2020-03-13T13:15:21+0000","config":{"tableHide":true,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":false,"runOnSelectionChange":true,"title":false,"checkEmpty":true,"results":{"0":{"graph":{"mode":"table","height":300,"optionOpen":false,"setting":{"table":{"tableGridState":{},"tableColumnTypeState":{"names":{"Word":"string","Count":"string"},"updated":false},"tableOptionSpecHash":"[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]","tableOptionValue":{"useFilter":false,"showPagination":false,"showAggregationFooter":false},"updated":false,"initialized":false}},"commonSetting":{}}}},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h1>Flink tutorial - Plan</h1>\n<h2>Legend</h2>\n<p>The tiny stars represent the difficulty of a given exercise:<br/>- ⭐: Easy,<br/>- ⭐⭐: Average,<br/>- ⭐⭐⭐: Difficult.</p>\n</div>"}]},"apps":[],"progressUpdateIntervalMs":500,"jobName":"paragraph_1583824358551_-1220947324","id":"paragraph_1562576842889_1391009395","dateCreated":"2020-03-10T07:12:38+0000","dateStarted":"2020-03-13T13:15:21+0000","dateFinished":"2020-03-13T13:15:21+0000","status":"FINISHED","focus":true,"$$hashKey":"object:9116"},{"text":"%md\n\n## Notebook 1: Flink Introduction\n\n### 1.1. Concepts\n\n#### 1.1.1. Dataflow Programming Model\n#### 1.1.2. Distributed Runtime Environment\n\n### 1.2. Flink Java basics\n\n#### 1.2.1. Batch-mode (DataSet API)\n\n##### 1.2.1.1. Creating a DataSet\n##### 1.2.1.2. Transformations\n###### a. Filter / Reduce\n###### b. Map\n###### c. Join\n###### d. Sort\n###### e. WordCount using FlatMapFunction (FlatMap + GroupBy + Aggregate)\n\n#### 1.2.2. Streaming-mode (DataStream API)\n\n##### 1.2.2.1. Creating a DataStream\n##### 1.2.2.2. Transformations\n##### 1.2.2.3. Windowing of events\n\n### 1.3. Apache Spark vs Apache Flink","user":"anonymous","dateUpdated":"2020-03-13T13:15:21+0000","config":{"tableHide":true,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":false,"runOnSelectionChange":true,"title":false,"checkEmpty":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h2>Notebook 1: Flink Introduction</h2>\n<h3>1.1. Concepts</h3>\n<h4>1.1.1. Dataflow Programming Model</h4>\n<h4>1.1.2. Distributed Runtime Environment</h4>\n<h3>1.2. Flink Java basics</h3>\n<h4>1.2.1. Batch-mode (DataSet API)</h4>\n<h5>1.2.1.1. Creating a DataSet</h5>\n<h5>1.2.1.2. Transformations</h5>\n<h6>a. Filter / Reduce</h6>\n<h6>b. Map</h6>\n<h6>c. Join</h6>\n<h6>d. Sort</h6>\n<h6>e. WordCount using FlatMapFunction (FlatMap + GroupBy + Aggregate)</h6>\n<h4>1.2.2. Streaming-mode (DataStream API)</h4>\n<h5>1.2.2.1. Creating a DataStream</h5>\n<h5>1.2.2.2. Transformations</h5>\n<h5>1.2.2.3. Windowing of events</h5>\n<h3>1.3. Apache Spark vs Apache Flink</h3>\n</div>"}]},"apps":[],"progressUpdateIntervalMs":500,"jobName":"paragraph_1583824358551_1964781316","id":"paragraph_1562585754797_-688330761","dateCreated":"2020-03-10T07:12:38+0000","dateStarted":"2020-03-13T13:15:21+0000","dateFinished":"2020-03-13T13:15:21+0000","status":"FINISHED","$$hashKey":"object:9117"},{"text":"%md\n\n## Notebook 2: Flink Streaming\n\n### 2.1. Exercise 1: Word Count (+ Windowed) (⭐)\n\n- Lines of code (LOC): 70\n- The notorious Word count example computed from an input text file\n- This example shows to: \n    - *Write a simple Flink program*\n    - *Use Tuple data types*\n    - *Write and use user-defined functions*\n- Operations: `readTextFile`, `flatMap`, `keyBy`, `sum`, `collect`, `print` \n- Functions: `FlatMapFunction`\n- \n### 2.2. Exercise 2: Incremental learning skeleton (ML) (⭐⭐⭐)\n\n- Lines of code (LOC): 160\n- This example shows how to build an incremental machine learning algorithm skeleton that updates its model on every new input data\n- This example shows how to use: \n    - *Connected streams*\n    - *CoFunctions*\n    - *Tuple data types*    \n    - *Stream time characteristics*\n- Operations: `addSource`, `connect`, `map`, `timeWindowAll`, `collect` \n- Functions: `SourceFunction`, `AllWindowFunction`, `CoMapFunction`\n\n| ![space-1.jpg](http://193.190.127.227/img/flink/fig2.png) | \n|:--:| \n| *Fig. 2: Incremental ML dataflow (Source: EURA NOVA).* |\n\n### 2.3. Exercise 3: WikiEdits (⭐⭐)\n\n- Lines of code (LOC): 100\n- This example shows the number of edits and the number of bytes changed made on Wikipedia per minute in real-time. Second part of the exercice groups the changes per user \n- This example shows how to use: \n    - *AggregateFunctions*\n    - *Accumulators*\n    - *Windowing*    \n    - *Kafka as a sink*\n- Operations: `addSource`, `apply`, `timeWindowAll`, `map`, `keyBy`, `timeWindow`, `timeWindowAll`, `collect`, `print`, `addSink`\n- Functions: `AllWindowFunction`, `AggregateFunction`\n\n\n| ![space-1.jpg](http://193.190.127.227/img/flink/fig3.png) | \n|:--:| \n| *Fig. 3: Job failure simulation with checkpointing enabled (Source: EURA NOVA).* |\n\n| ![space-1.jpg](http://193.190.127.227/img/flink/fig4.png) | \n|:--:| \n| *Fig. 4: Job failure simulation with checkpointing disabled (Source: EURA NOVA).* |\n","user":"anonymous","dateUpdated":"2020-03-13T13:15:21+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"runOnSelectionChange":true,"title":false,"checkEmpty":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h2>Notebook 2: Flink Streaming</h2>\n<h3>2.1. Exercise 1: Word Count (+ Windowed) (⭐)</h3>\n<ul>\n  <li>Lines of code (LOC): 70</li>\n  <li>The notorious Word count example computed from an input text file</li>\n  <li>This example shows to:\n    <ul>\n      <li><em>Write a simple Flink program</em></li>\n      <li><em>Use Tuple data types</em></li>\n      <li><em>Write and use user-defined functions</em></li>\n    </ul>\n  </li>\n  <li>Operations: <code>readTextFile</code>, <code>flatMap</code>, <code>keyBy</code>, <code>sum</code>, <code>collect</code>, <code>print</code></li>\n  <li>Functions: <code>FlatMapFunction</code></li>\n  <li>\n  <h3>2.2. Exercise 2: Incremental learning skeleton (ML) (⭐⭐⭐)</h3></li>\n  <li>\n  <p>Lines of code (LOC): 160</p></li>\n  <li>This example shows how to build an incremental machine learning algorithm skeleton that updates its model on every new input data</li>\n  <li>This example shows how to use:\n    <ul>\n      <li><em>Connected streams</em></li>\n      <li><em>CoFunctions</em></li>\n      <li><em>Tuple data types</em></li>\n      <li><em>Stream time characteristics</em></li>\n    </ul>\n  </li>\n  <li>Operations: <code>addSource</code>, <code>connect</code>, <code>map</code>, <code>timeWindowAll</code>, <code>collect</code></li>\n  <li>Functions: <code>SourceFunction</code>, <code>AllWindowFunction</code>, <code>CoMapFunction</code></li>\n</ul>\n<table>\n  <thead>\n    <tr>\n      <th align=\"center\"><img src=\"http://193.190.127.227/img/flink/fig2.png\" alt=\"space-1.jpg\" /> </th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td align=\"center\"><em>Fig. 2: Incremental ML dataflow (Source: EURA NOVA).</em> </td>\n    </tr>\n  </tbody>\n</table>\n<h3>2.3. Exercise 3: WikiEdits (⭐⭐)</h3>\n<ul>\n  <li>Lines of code (LOC): 100</li>\n  <li>This example shows the number of edits and the number of bytes changed made on Wikipedia per minute in real-time. Second part of the exercice groups the changes per user</li>\n  <li>This example shows how to use:\n    <ul>\n      <li><em>AggregateFunctions</em></li>\n      <li><em>Accumulators</em></li>\n      <li><em>Windowing</em></li>\n      <li><em>Kafka as a sink</em></li>\n    </ul>\n  </li>\n  <li>Operations: <code>addSource</code>, <code>apply</code>, <code>timeWindowAll</code>, <code>map</code>, <code>keyBy</code>, <code>timeWindow</code>, <code>timeWindowAll</code>, <code>collect</code>, <code>print</code>, <code>addSink</code></li>\n  <li>Functions: <code>AllWindowFunction</code>, <code>AggregateFunction</code></li>\n</ul>\n<table>\n  <thead>\n    <tr>\n      <th align=\"center\"><img src=\"http://193.190.127.227/img/flink/fig3.png\" alt=\"space-1.jpg\" /> </th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td align=\"center\"><em>Fig. 3: Job failure simulation with checkpointing enabled (Source: EURA NOVA).</em> </td>\n    </tr>\n  </tbody>\n</table>\n<table>\n  <thead>\n    <tr>\n      <th align=\"center\"><img src=\"http://193.190.127.227/img/flink/fig4.png\" alt=\"space-1.jpg\" /> </th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td align=\"center\"><em>Fig. 4: Job failure simulation with checkpointing disabled (Source: EURA NOVA).</em> </td>\n    </tr>\n  </tbody>\n</table>\n</div>"}]},"apps":[],"progressUpdateIntervalMs":500,"jobName":"paragraph_1583824358552_-301412567","id":"paragraph_1562586558111_-847390960","dateCreated":"2020-03-10T07:12:38+0000","dateStarted":"2020-03-13T13:15:22+0000","dateFinished":"2020-03-13T13:15:22+0000","status":"FINISHED","$$hashKey":"object:9118"},{"text":"%md\n","user":"anonymous","dateUpdated":"2020-03-13T13:15:22+0000","config":{"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"progressUpdateIntervalMs":500,"jobName":"paragraph_1583825609580_459032033","id":"paragraph_1583825609580_459032033","dateCreated":"2020-03-10T07:33:29+0000","status":"FINISHED","$$hashKey":"object:9119"}],"name":"0. Flink Plan","id":"2F4Y195DN","defaultInterpreterGroup":"spark","version":"0.9.0-SNAPSHOT","permissions":{},"noteParams":{},"noteForms":{},"angularObjects":{},"config":{"isZeppelinNotebookCronEnable":false,"looknfeel":"default","personalizedMode":"false"},"info":{"isRunning":false},"path":"/0. Flink Plan"}